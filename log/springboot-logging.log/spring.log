2020/06/28-08:43:35 [main] INFO  com.huijian.rac.RacStockServiceApplication- No active profile set, falling back to default profiles: default
2020/06/28-08:45:29 [main] INFO  com.huijian.rac.RacStockServiceApplication- No active profile set, falling back to default profiles: default
2020/06/28-08:45:30 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Multiple Spring Data modules found, entering strict repository configuration mode!
2020/06/28-08:45:30 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Bootstrapping Spring Data repositories in DEFAULT mode.
2020/06/28-08:45:30 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Finished Spring Data repository scanning in 21ms. Found 0 repository interfaces.
2020/06/28-08:45:30 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'deliveryUnitMapper' and 'com.huijian.rac.mapper.DeliveryUnitMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-08:45:30 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'departMapper' and 'com.huijian.rac.mapper.DepartMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-08:45:30 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'discardDetailMapper' and 'com.huijian.rac.mapper.DiscardDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-08:45:30 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'discardMapper' and 'com.huijian.rac.mapper.DiscardMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-08:45:30 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsDictionaryMapper' and 'com.huijian.rac.mapper.GoodsDictionaryMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-08:45:30 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsRecordMapper' and 'com.huijian.rac.mapper.GoodsRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-08:45:30 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsSupplierMapper' and 'com.huijian.rac.mapper.GoodsSupplierMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-08:45:30 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'leaveStockListDetailMapper' and 'com.huijian.rac.mapper.LeaveStockListDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-08:45:30 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'materialMapper' and 'com.huijian.rac.mapper.MaterialMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-08:45:30 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'outboundRecordMapper' and 'com.huijian.rac.mapper.OutboundRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-08:45:30 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'outboundSecondRecordMapper' and 'com.huijian.rac.mapper.OutboundSecondRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-08:45:30 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'reagentMapper' and 'com.huijian.rac.mapper.ReagentMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-08:45:30 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'returnGoodsDetailMapper' and 'com.huijian.rac.mapper.ReturnGoodsDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-08:45:30 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'returnGoodsMapper' and 'com.huijian.rac.mapper.ReturnGoodsMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-08:45:30 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'secondGoodsRecordMapper' and 'com.huijian.rac.mapper.SecondGoodsRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-08:45:30 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'secondLeaveStockListDetailMapper' and 'com.huijian.rac.mapper.SecondLeaveStockListDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-08:45:30 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'unitMapper' and 'com.huijian.rac.mapper.UnitMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-08:45:30 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseMapper' and 'com.huijian.rac.mapper.WarehouseMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-08:45:30 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseRecordMapper' and 'com.huijian.rac.mapper.WarehouseRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-08:45:30 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseSecondMapper' and 'com.huijian.rac.mapper.WarehouseSecondMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-08:45:30 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseSecondRecordMapper' and 'com.huijian.rac.mapper.WarehouseSecondRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-08:45:30 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'departsMapper' and 'com.huijian.rac.mapper.DepartsMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-08:45:30 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsPackageDetailMapper' and 'com.huijian.rac.mapper.GoodsPackageDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-08:45:30 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsPackageMapper' and 'com.huijian.rac.mapper.GoodsPackageMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-08:45:30 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'hospitalMapper' and 'com.huijian.rac.mapper.HospitalMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-08:45:30 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'leaveStockListSecondMapper' and 'com.huijian.rac.mapper.LeaveStockListSecondMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-08:45:30 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderDetailMapper' and 'com.huijian.rac.mapper.OrderDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-08:45:30 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderMapper' and 'com.huijian.rac.mapper.OrderMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-08:45:30 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderOperateMapper' and 'com.huijian.rac.mapper.OrderOperateMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-08:45:30 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderReviewMapper' and 'com.huijian.rac.mapper.OrderReviewMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-08:45:30 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- No MyBatis mapper was found in '[com.huijian.rac.mapper]' package. Please check your configuration.
2020/06/28-08:45:30 [main] INFO  org.springframework.cloud.context.scope.GenericScope- BeanFactory id=42c1a49b-3417-30eb-b99f-a09e87904779
2020/06/28-08:45:30 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/28-08:45:30 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'redisConfig' of type [com.huijian.rac.config.RedisConfig$$EnhancerBySpringCGLIB$$1915f718] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/28-08:45:30 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/28-08:45:31 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat initialized with port(s): 8083 (http)
2020/06/28-08:45:31 [main] INFO  org.apache.catalina.core.StandardService- Starting service [Tomcat]
2020/06/28-08:45:31 [main] INFO  org.apache.catalina.core.StandardEngine- Starting Servlet engine: [Apache Tomcat/9.0.27]
2020/06/28-08:45:31 [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]- Initializing Spring embedded WebApplicationContext
2020/06/28-08:45:31 [main] INFO  org.springframework.web.context.ContextLoader- Root WebApplicationContext: initialization completed in 1318 ms
2020/06/28-08:45:32 [main] WARN  com.netflix.config.sources.URLConfigurationSource- No URLs will be polled as dynamic configuration sources.
2020/06/28-08:45:32 [main] INFO  com.netflix.config.sources.URLConfigurationSource- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020/06/28-08:45:32 [main] WARN  com.netflix.config.sources.URLConfigurationSource- No URLs will be polled as dynamic configuration sources.
2020/06/28-08:45:32 [main] INFO  com.netflix.config.sources.URLConfigurationSource- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020/06/28-08:45:32 [main] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor- Initializing ExecutorService 'applicationTaskExecutor'
2020/06/28-08:45:33 [main] WARN  org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger- You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020/06/28-08:45:33 [main] WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger- Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020/06/28-08:45:33 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory- Setting initial instance status as: STARTING
2020/06/28-08:45:33 [main] INFO  com.netflix.discovery.DiscoveryClient- Initializing Eureka in region us-east-1
2020/06/28-08:45:34 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using JSON encoding codec LegacyJacksonJson
2020/06/28-08:45:34 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using JSON decoding codec LegacyJacksonJson
2020/06/28-08:45:34 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using XML encoding codec XStreamXml
2020/06/28-08:45:34 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using XML decoding codec XStreamXml
2020/06/28-08:45:34 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-08:45:34 [main] INFO  com.netflix.discovery.DiscoveryClient- Disable delta property : false
2020/06/28-08:45:34 [main] INFO  com.netflix.discovery.DiscoveryClient- Single vip registry refresh property : null
2020/06/28-08:45:34 [main] INFO  com.netflix.discovery.DiscoveryClient- Force full registry fetch : false
2020/06/28-08:45:34 [main] INFO  com.netflix.discovery.DiscoveryClient- Application is null : false
2020/06/28-08:45:34 [main] INFO  com.netflix.discovery.DiscoveryClient- Registered Applications size is zero : true
2020/06/28-08:45:34 [main] INFO  com.netflix.discovery.DiscoveryClient- Application version is -1: true
2020/06/28-08:45:34 [main] INFO  com.netflix.discovery.DiscoveryClient- Getting all instance registry info from the eureka server
2020/06/28-08:45:34 [main] INFO  com.netflix.discovery.DiscoveryClient- The response status is 200
2020/06/28-08:45:34 [main] INFO  com.netflix.discovery.DiscoveryClient- Starting heartbeat executor: renew interval is: 30
2020/06/28-08:45:34 [main] INFO  com.netflix.discovery.InstanceInfoReplicator- InstanceInfoReplicator onDemand update allowed rate per min is 4
2020/06/28-08:45:34 [main] INFO  com.netflix.discovery.DiscoveryClient- Discovery Client initialized at timestamp 1593305134834 with initial instances count: 0
2020/06/28-08:45:34 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry- Registering application RAC-STOCK-SERVICE with eureka with status UP
2020/06/28-08:45:34 [main] INFO  com.netflix.discovery.DiscoveryClient- Saw local status change event StatusChangeEvent [timestamp=1593305134838, current=UP, previous=STARTING]
2020/06/28-08:45:34 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-STOCK-SERVICE/MSI.mshome.net:rac-stock-service:8083: registering service...
2020/06/28-08:45:34 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Attempting to connect to: [192.168.161.129:5672]
2020/06/28-08:45:34 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Created new connection: rabbitConnectionFactory#708eb310:0/SimpleConnection@1201e064 [delegate=amqp://admin@192.168.161.129:5672/, localPort= 50716]
2020/06/28-08:45:34 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-STOCK-SERVICE/MSI.mshome.net:rac-stock-service:8083 - registration status: 204
2020/06/28-08:45:34 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat started on port(s): 8083 (http) with context path ''
2020/06/28-08:45:34 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration- Updating port to 8083
2020/06/28-08:45:35 [main] INFO  com.huijian.rac.RacOrderServiceApplication- No active profile set, falling back to default profiles: default
2020/06/28-08:45:35 [main] INFO  com.huijian.rac.RacStockServiceApplication- Started RacStockServiceApplication in 6.557 seconds (JVM running for 7.336)
2020/06/28-08:45:35 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Multiple Spring Data modules found, entering strict repository configuration mode!
2020/06/28-08:45:35 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020/06/28-08:45:35 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Finished Spring Data repository scanning in 18ms. Found 0 Redis repository interfaces.
2020/06/28-08:45:35 [main] INFO  org.springframework.cloud.context.scope.GenericScope- BeanFactory id=6dc12edd-b57c-3e47-9243-ea25b4a4e3e8
2020/06/28-08:45:36 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/28-08:45:36 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/28-08:45:36 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat initialized with port(s): 8084 (http)
2020/06/28-08:45:36 [main] INFO  org.apache.catalina.core.StandardService- Starting service [Tomcat]
2020/06/28-08:45:36 [main] INFO  org.apache.catalina.core.StandardEngine- Starting Servlet engine: [Apache Tomcat/9.0.29]
2020/06/28-08:45:36 [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]- Initializing Spring embedded WebApplicationContext
2020/06/28-08:45:36 [main] INFO  org.springframework.web.context.ContextLoader- Root WebApplicationContext: initialization completed in 1322 ms
2020/06/28-08:45:36 [main] WARN  com.netflix.config.sources.URLConfigurationSource- No URLs will be polled as dynamic configuration sources.
2020/06/28-08:45:36 [main] INFO  com.netflix.config.sources.URLConfigurationSource- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020/06/28-08:45:36 [main] WARN  com.netflix.config.sources.URLConfigurationSource- No URLs will be polled as dynamic configuration sources.
2020/06/28-08:45:36 [main] INFO  com.netflix.config.sources.URLConfigurationSource- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020/06/28-08:45:36 [main] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor- Initializing ExecutorService 'applicationTaskExecutor'
2020/06/28-08:45:38 [main] WARN  org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger- You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020/06/28-08:45:38 [main] WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger- Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020/06/28-08:45:38 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory- Setting initial instance status as: STARTING
2020/06/28-08:45:38 [main] INFO  com.netflix.discovery.DiscoveryClient- Initializing Eureka in region us-east-1
2020/06/28-08:45:38 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using JSON encoding codec LegacyJacksonJson
2020/06/28-08:45:38 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using JSON decoding codec LegacyJacksonJson
2020/06/28-08:45:38 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using XML encoding codec XStreamXml
2020/06/28-08:45:38 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using XML decoding codec XStreamXml
2020/06/28-08:45:38 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-08:45:38 [main] INFO  com.netflix.discovery.DiscoveryClient- Disable delta property : false
2020/06/28-08:45:38 [main] INFO  com.netflix.discovery.DiscoveryClient- Single vip registry refresh property : null
2020/06/28-08:45:38 [main] INFO  com.netflix.discovery.DiscoveryClient- Force full registry fetch : false
2020/06/28-08:45:38 [main] INFO  com.netflix.discovery.DiscoveryClient- Application is null : false
2020/06/28-08:45:38 [main] INFO  com.netflix.discovery.DiscoveryClient- Registered Applications size is zero : true
2020/06/28-08:45:38 [main] INFO  com.netflix.discovery.DiscoveryClient- Application version is -1: true
2020/06/28-08:45:38 [main] INFO  com.netflix.discovery.DiscoveryClient- Getting all instance registry info from the eureka server
2020/06/28-08:45:38 [main] INFO  com.netflix.discovery.DiscoveryClient- The response status is 200
2020/06/28-08:45:38 [main] INFO  com.netflix.discovery.DiscoveryClient- Starting heartbeat executor: renew interval is: 30
2020/06/28-08:45:38 [main] INFO  com.netflix.discovery.InstanceInfoReplicator- InstanceInfoReplicator onDemand update allowed rate per min is 4
2020/06/28-08:45:38 [main] INFO  com.netflix.discovery.DiscoveryClient- Discovery Client initialized at timestamp 1593305138996 with initial instances count: 0
2020/06/28-08:45:38 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry- Registering application RAC-ORDER-SERVICE with eureka with status UP
2020/06/28-08:45:38 [main] INFO  com.netflix.discovery.DiscoveryClient- Saw local status change event StatusChangeEvent [timestamp=1593305138999, current=UP, previous=STARTING]
2020/06/28-08:45:39 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-ORDER-SERVICE/MSI.mshome.net:rac-order-service:8084: registering service...
2020/06/28-08:45:39 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Attempting to connect to: [192.168.161.129:5672]
2020/06/28-08:45:39 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Created new connection: rabbitConnectionFactory#6dd1c3ed:0/SimpleConnection@21527b8 [delegate=amqp://admin@192.168.161.129:5672/, localPort= 50726]
2020/06/28-08:45:39 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-ORDER-SERVICE/MSI.mshome.net:rac-order-service:8084 - registration status: 204
2020/06/28-08:45:39 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat started on port(s): 8084 (http) with context path ''
2020/06/28-08:45:39 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration- Updating port to 8084
2020/06/28-08:45:39 [main] INFO  com.huijian.rac.RacOrderServiceApplication- Started RacOrderServiceApplication in 5.581 seconds (JVM running for 6.385)
2020/06/28-08:46:04 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient- Disable delta property : false
2020/06/28-08:46:04 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient- Single vip registry refresh property : null
2020/06/28-08:46:04 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient- Force full registry fetch : false
2020/06/28-08:46:04 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient- Application is null : false
2020/06/28-08:46:04 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient- Registered Applications size is zero : true
2020/06/28-08:46:04 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient- Application version is -1: false
2020/06/28-08:46:04 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient- Getting all instance registry info from the eureka server
2020/06/28-08:46:04 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient- The response status is 200
2020/06/28-08:46:08 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient- Disable delta property : false
2020/06/28-08:46:08 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient- Single vip registry refresh property : null
2020/06/28-08:46:08 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient- Force full registry fetch : false
2020/06/28-08:46:08 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient- Application is null : false
2020/06/28-08:46:08 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient- Registered Applications size is zero : true
2020/06/28-08:46:08 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient- Application version is -1: false
2020/06/28-08:46:08 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient- Getting all instance registry info from the eureka server
2020/06/28-08:46:09 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient- The response status is 200
2020/06/28-08:48:07 [http-nio-8083-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]- Initializing Spring DispatcherServlet 'dispatcherServlet'
2020/06/28-08:48:07 [http-nio-8083-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet- Initializing Servlet 'dispatcherServlet'
2020/06/28-08:48:07 [http-nio-8083-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet- Completed initialization in 6 ms
2020/06/28-08:48:07 [http-nio-8083-exec-1] INFO  com.zaxxer.hikari.HikariDataSource- HikariPool-1 - Starting...
2020/06/28-08:48:08 [http-nio-8083-exec-1] INFO  com.zaxxer.hikari.HikariDataSource- HikariPool-1 - Start completed.
2020/06/28-08:48:08 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.OutboundRecordMapper.getOutboundRecordByPage- ==>  Preparing: SELECT * from sj_leavestocklist where LeaveStockNo like concat('%',?,'%') and LeaveStock >= ? and LeaveStock < ? order by LeaveStockNo desc limit ?, ? 
2020/06/28-08:48:08 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.OutboundRecordMapper.getOutboundRecordByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-28 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/28-08:48:08 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.OutboundRecordMapper.getOutboundRecordByPage- <==      Total: 1
2020/06/28-08:48:08 [http-nio-8083-exec-1] INFO  com.netflix.config.ChainedDynamicProperty- Flipping property: rac-order-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020/06/28-08:48:08 [http-nio-8083-exec-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer- Shutdown hook installed for: NFLoadBalancer-PingTimer-rac-order-service
2020/06/28-08:48:08 [http-nio-8083-exec-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer- Client: rac-order-service instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=rac-order-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020/06/28-08:48:08 [http-nio-8083-exec-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer- Using serverListUpdater PollingServerListUpdater
2020/06/28-08:48:08 [http-nio-8083-exec-1] INFO  com.netflix.config.ChainedDynamicProperty- Flipping property: rac-order-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020/06/28-08:48:08 [http-nio-8083-exec-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer- DynamicServerListLoadBalancer for client rac-order-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=rac-order-service,current list of Servers=[MSI.mshome.net:8084],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:MSI.mshome.net:8084;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 GMT+08:00 1970;	First connection made: Thu Jan 01 08:00:00 GMT+08:00 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@4ec0551e
2020/06/28-08:48:08 [http-nio-8084-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]- Initializing Spring DispatcherServlet 'dispatcherServlet'
2020/06/28-08:48:08 [http-nio-8084-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet- Initializing Servlet 'dispatcherServlet'
2020/06/28-08:48:08 [http-nio-8084-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet- Completed initialization in 5 ms
2020/06/28-08:48:08 [http-nio-8084-exec-1] INFO  com.zaxxer.hikari.HikariDataSource- HikariPool-1 - Starting...
2020/06/28-08:48:08 [http-nio-8084-exec-1] INFO  com.zaxxer.hikari.HikariDataSource- HikariPool-1 - Start completed.
2020/06/28-08:48:08 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==>  Preparing: select OrderState from sj_order where OrderNo = ? 
2020/06/28-08:48:09 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==> Parameters: 9016002000027(String)
2020/06/28-08:48:09 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- <==      Total: 1
2020/06/28-08:48:09 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty- Flipping property: rac-order-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020/06/28-08:48:14 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==>  Preparing: select * from pub_depart where HOSPITALID=? 
2020/06/28-08:48:14 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==> Parameters: 901600(String)
2020/06/28-08:48:14 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- <==      Total: 22
2020/06/28-08:48:15 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==>  Preparing: SELECT * from sj_order where OrderNo like concat('%',?,'%') and OrderDate >= ? and OrderDate < ? and OrderState != 0 order by OrderDate desc limit ?, ? 
2020/06/28-08:48:15 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-28 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/28-08:48:15 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- <==      Total: 0
2020/06/28-08:48:17 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==>  Preparing: SELECT * from sj_order where OrderNo like concat('%',?,'%') and OrderDate >= ? and OrderDate < ? and OrderState != 0 order by OrderDate desc limit ?, ? 
2020/06/28-08:48:17 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-28 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/28-08:48:17 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- <==      Total: 0
2020/06/28-08:48:36 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==>  Preparing: SELECT * from sj_order where OrderNo like concat('%',?,'%') and OrderDate >= ? and OrderDate < ? and OrderState != 0 order by OrderDate desc limit ?, ? 
2020/06/28-08:48:36 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-28 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/28-08:48:36 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- <==      Total: 0
2020/06/28-08:49:35 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==>  Preparing: SELECT * from sj_order where OrderNo like concat('%',?,'%') and OrderDate >= ? and OrderDate < ? and OrderState != 0 order by OrderDate desc limit ?, ? 
2020/06/28-08:49:35 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-28 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/28-08:49:35 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- <==      Total: 0
2020/06/28-08:50:34 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-08:50:38 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-08:55:34 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-08:55:38 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-09:00:34 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-09:00:38 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-09:05:34 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-09:05:38 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-09:10:34 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-09:10:38 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-09:15:34 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-09:15:38 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-09:20:34 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-09:20:38 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-09:25:34 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-09:25:51 [main] INFO  com.huijian.rac.RacOrderServiceApplication- No active profile set, falling back to default profiles: default
2020/06/28-09:25:51 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Multiple Spring Data modules found, entering strict repository configuration mode!
2020/06/28-09:25:51 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020/06/28-09:25:51 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Finished Spring Data repository scanning in 14ms. Found 0 Redis repository interfaces.
2020/06/28-09:25:51 [main] INFO  org.springframework.cloud.context.scope.GenericScope- BeanFactory id=3d3b62b0-e3f7-3047-9b8b-9420146973a8
2020/06/28-09:25:51 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/28-09:25:51 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/28-09:25:51 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat initialized with port(s): 8084 (http)
2020/06/28-09:25:51 [main] INFO  org.apache.catalina.core.StandardService- Starting service [Tomcat]
2020/06/28-09:25:51 [main] INFO  org.apache.catalina.core.StandardEngine- Starting Servlet engine: [Apache Tomcat/9.0.29]
2020/06/28-09:25:52 [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]- Initializing Spring embedded WebApplicationContext
2020/06/28-09:25:52 [main] INFO  org.springframework.web.context.ContextLoader- Root WebApplicationContext: initialization completed in 1028 ms
2020/06/28-09:25:52 [main] WARN  com.netflix.config.sources.URLConfigurationSource- No URLs will be polled as dynamic configuration sources.
2020/06/28-09:25:52 [main] INFO  com.netflix.config.sources.URLConfigurationSource- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020/06/28-09:25:52 [main] WARN  com.netflix.config.sources.URLConfigurationSource- No URLs will be polled as dynamic configuration sources.
2020/06/28-09:25:52 [main] INFO  com.netflix.config.sources.URLConfigurationSource- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020/06/28-09:25:52 [main] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor- Initializing ExecutorService 'applicationTaskExecutor'
2020/06/28-09:25:53 [main] WARN  org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger- You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020/06/28-09:25:53 [main] WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger- Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020/06/28-09:25:53 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory- Setting initial instance status as: STARTING
2020/06/28-09:25:53 [main] INFO  com.netflix.discovery.DiscoveryClient- Initializing Eureka in region us-east-1
2020/06/28-09:25:54 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using JSON encoding codec LegacyJacksonJson
2020/06/28-09:25:54 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using JSON decoding codec LegacyJacksonJson
2020/06/28-09:25:54 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using XML encoding codec XStreamXml
2020/06/28-09:25:54 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using XML decoding codec XStreamXml
2020/06/28-09:25:54 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-09:25:54 [main] INFO  com.netflix.discovery.DiscoveryClient- Disable delta property : false
2020/06/28-09:25:54 [main] INFO  com.netflix.discovery.DiscoveryClient- Single vip registry refresh property : null
2020/06/28-09:25:54 [main] INFO  com.netflix.discovery.DiscoveryClient- Force full registry fetch : false
2020/06/28-09:25:54 [main] INFO  com.netflix.discovery.DiscoveryClient- Application is null : false
2020/06/28-09:25:54 [main] INFO  com.netflix.discovery.DiscoveryClient- Registered Applications size is zero : true
2020/06/28-09:25:54 [main] INFO  com.netflix.discovery.DiscoveryClient- Application version is -1: true
2020/06/28-09:25:54 [main] INFO  com.netflix.discovery.DiscoveryClient- Getting all instance registry info from the eureka server
2020/06/28-09:25:54 [main] INFO  com.netflix.discovery.DiscoveryClient- The response status is 200
2020/06/28-09:25:54 [main] INFO  com.netflix.discovery.DiscoveryClient- Starting heartbeat executor: renew interval is: 30
2020/06/28-09:25:54 [main] INFO  com.netflix.discovery.InstanceInfoReplicator- InstanceInfoReplicator onDemand update allowed rate per min is 4
2020/06/28-09:25:54 [main] INFO  com.netflix.discovery.DiscoveryClient- Discovery Client initialized at timestamp 1593307554885 with initial instances count: 2
2020/06/28-09:25:54 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry- Registering application RAC-ORDER-SERVICE with eureka with status UP
2020/06/28-09:25:54 [main] INFO  com.netflix.discovery.DiscoveryClient- Saw local status change event StatusChangeEvent [timestamp=1593307554887, current=UP, previous=STARTING]
2020/06/28-09:25:54 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-ORDER-SERVICE/MSI.mshome.net:rac-order-service:8084: registering service...
2020/06/28-09:25:54 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Attempting to connect to: [192.168.161.129:5672]
2020/06/28-09:25:54 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Created new connection: rabbitConnectionFactory#2849434b:0/SimpleConnection@3db1ce78 [delegate=amqp://admin@192.168.161.129:5672/, localPort= 53707]
2020/06/28-09:25:54 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-ORDER-SERVICE/MSI.mshome.net:rac-order-service:8084 - registration status: 204
2020/06/28-09:25:54 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat started on port(s): 8084 (http) with context path ''
2020/06/28-09:25:54 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration- Updating port to 8084
2020/06/28-09:25:55 [main] INFO  com.huijian.rac.RacOrderServiceApplication- Started RacOrderServiceApplication in 5.47 seconds (JVM running for 6.273)
2020/06/28-09:25:58 [main] INFO  com.huijian.rac.RacStockServiceApplication- No active profile set, falling back to default profiles: default
2020/06/28-09:25:59 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Multiple Spring Data modules found, entering strict repository configuration mode!
2020/06/28-09:25:59 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Bootstrapping Spring Data repositories in DEFAULT mode.
2020/06/28-09:25:59 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Finished Spring Data repository scanning in 21ms. Found 0 repository interfaces.
2020/06/28-09:25:59 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'deliveryUnitMapper' and 'com.huijian.rac.mapper.DeliveryUnitMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-09:25:59 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'departMapper' and 'com.huijian.rac.mapper.DepartMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-09:25:59 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'discardDetailMapper' and 'com.huijian.rac.mapper.DiscardDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-09:25:59 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'discardMapper' and 'com.huijian.rac.mapper.DiscardMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-09:25:59 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsDictionaryMapper' and 'com.huijian.rac.mapper.GoodsDictionaryMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-09:25:59 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsRecordMapper' and 'com.huijian.rac.mapper.GoodsRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-09:25:59 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsSupplierMapper' and 'com.huijian.rac.mapper.GoodsSupplierMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-09:25:59 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'leaveStockListDetailMapper' and 'com.huijian.rac.mapper.LeaveStockListDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-09:25:59 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'materialMapper' and 'com.huijian.rac.mapper.MaterialMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-09:25:59 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'outboundRecordMapper' and 'com.huijian.rac.mapper.OutboundRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-09:25:59 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'outboundSecondRecordMapper' and 'com.huijian.rac.mapper.OutboundSecondRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-09:25:59 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'reagentMapper' and 'com.huijian.rac.mapper.ReagentMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-09:25:59 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'returnGoodsDetailMapper' and 'com.huijian.rac.mapper.ReturnGoodsDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-09:25:59 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'returnGoodsMapper' and 'com.huijian.rac.mapper.ReturnGoodsMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-09:25:59 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'secondGoodsRecordMapper' and 'com.huijian.rac.mapper.SecondGoodsRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-09:25:59 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'secondLeaveStockListDetailMapper' and 'com.huijian.rac.mapper.SecondLeaveStockListDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-09:25:59 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'unitMapper' and 'com.huijian.rac.mapper.UnitMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-09:25:59 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseMapper' and 'com.huijian.rac.mapper.WarehouseMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-09:25:59 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseRecordMapper' and 'com.huijian.rac.mapper.WarehouseRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-09:25:59 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseSecondMapper' and 'com.huijian.rac.mapper.WarehouseSecondMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-09:25:59 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseSecondRecordMapper' and 'com.huijian.rac.mapper.WarehouseSecondRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-09:25:59 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'departsMapper' and 'com.huijian.rac.mapper.DepartsMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-09:25:59 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsPackageDetailMapper' and 'com.huijian.rac.mapper.GoodsPackageDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-09:25:59 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsPackageMapper' and 'com.huijian.rac.mapper.GoodsPackageMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-09:25:59 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'hospitalMapper' and 'com.huijian.rac.mapper.HospitalMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-09:25:59 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'leaveStockListSecondMapper' and 'com.huijian.rac.mapper.LeaveStockListSecondMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-09:25:59 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderDetailMapper' and 'com.huijian.rac.mapper.OrderDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-09:25:59 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderMapper' and 'com.huijian.rac.mapper.OrderMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-09:25:59 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderOperateMapper' and 'com.huijian.rac.mapper.OrderOperateMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-09:25:59 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderReturnMapper' and 'com.huijian.rac.mapper.OrderReturnMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-09:25:59 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderReviewMapper' and 'com.huijian.rac.mapper.OrderReviewMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-09:25:59 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- No MyBatis mapper was found in '[com.huijian.rac.mapper]' package. Please check your configuration.
2020/06/28-09:25:59 [main] INFO  org.springframework.cloud.context.scope.GenericScope- BeanFactory id=71bf4b64-185f-30d0-9277-b56857847676
2020/06/28-09:25:59 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/28-09:25:59 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'redisConfig' of type [com.huijian.rac.config.RedisConfig$$EnhancerBySpringCGLIB$$35af50a9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/28-09:25:59 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/28-09:25:59 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat initialized with port(s): 8083 (http)
2020/06/28-09:25:59 [main] INFO  org.apache.catalina.core.StandardService- Starting service [Tomcat]
2020/06/28-09:25:59 [main] INFO  org.apache.catalina.core.StandardEngine- Starting Servlet engine: [Apache Tomcat/9.0.27]
2020/06/28-09:25:59 [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]- Initializing Spring embedded WebApplicationContext
2020/06/28-09:25:59 [main] INFO  org.springframework.web.context.ContextLoader- Root WebApplicationContext: initialization completed in 1404 ms
2020/06/28-09:26:00 [main] WARN  com.netflix.config.sources.URLConfigurationSource- No URLs will be polled as dynamic configuration sources.
2020/06/28-09:26:00 [main] INFO  com.netflix.config.sources.URLConfigurationSource- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020/06/28-09:26:00 [main] WARN  com.netflix.config.sources.URLConfigurationSource- No URLs will be polled as dynamic configuration sources.
2020/06/28-09:26:00 [main] INFO  com.netflix.config.sources.URLConfigurationSource- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020/06/28-09:26:00 [main] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor- Initializing ExecutorService 'applicationTaskExecutor'
2020/06/28-09:26:02 [main] WARN  org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger- You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020/06/28-09:26:02 [main] WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger- Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020/06/28-09:26:02 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory- Setting initial instance status as: STARTING
2020/06/28-09:26:02 [main] INFO  com.netflix.discovery.DiscoveryClient- Initializing Eureka in region us-east-1
2020/06/28-09:26:03 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using JSON encoding codec LegacyJacksonJson
2020/06/28-09:26:03 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using JSON decoding codec LegacyJacksonJson
2020/06/28-09:26:03 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using XML encoding codec XStreamXml
2020/06/28-09:26:03 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using XML decoding codec XStreamXml
2020/06/28-09:26:03 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-09:26:03 [main] INFO  com.netflix.discovery.DiscoveryClient- Disable delta property : false
2020/06/28-09:26:03 [main] INFO  com.netflix.discovery.DiscoveryClient- Single vip registry refresh property : null
2020/06/28-09:26:03 [main] INFO  com.netflix.discovery.DiscoveryClient- Force full registry fetch : false
2020/06/28-09:26:03 [main] INFO  com.netflix.discovery.DiscoveryClient- Application is null : false
2020/06/28-09:26:03 [main] INFO  com.netflix.discovery.DiscoveryClient- Registered Applications size is zero : true
2020/06/28-09:26:03 [main] INFO  com.netflix.discovery.DiscoveryClient- Application version is -1: true
2020/06/28-09:26:03 [main] INFO  com.netflix.discovery.DiscoveryClient- Getting all instance registry info from the eureka server
2020/06/28-09:26:03 [main] INFO  com.netflix.discovery.DiscoveryClient- The response status is 200
2020/06/28-09:26:03 [main] INFO  com.netflix.discovery.DiscoveryClient- Starting heartbeat executor: renew interval is: 30
2020/06/28-09:26:03 [main] INFO  com.netflix.discovery.InstanceInfoReplicator- InstanceInfoReplicator onDemand update allowed rate per min is 4
2020/06/28-09:26:03 [main] INFO  com.netflix.discovery.DiscoveryClient- Discovery Client initialized at timestamp 1593307563740 with initial instances count: 2
2020/06/28-09:26:03 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry- Registering application RAC-STOCK-SERVICE with eureka with status UP
2020/06/28-09:26:03 [main] INFO  com.netflix.discovery.DiscoveryClient- Saw local status change event StatusChangeEvent [timestamp=1593307563744, current=UP, previous=STARTING]
2020/06/28-09:26:03 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-STOCK-SERVICE/MSI.mshome.net:rac-stock-service:8083: registering service...
2020/06/28-09:26:03 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Attempting to connect to: [192.168.161.129:5672]
2020/06/28-09:26:03 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Created new connection: rabbitConnectionFactory#705a8dbc:0/SimpleConnection@8af1c49 [delegate=amqp://admin@192.168.161.129:5672/, localPort= 53749]
2020/06/28-09:26:03 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-STOCK-SERVICE/MSI.mshome.net:rac-stock-service:8083 - registration status: 204
2020/06/28-09:26:03 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat started on port(s): 8083 (http) with context path ''
2020/06/28-09:26:03 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration- Updating port to 8083
2020/06/28-09:26:04 [main] INFO  com.huijian.rac.RacStockServiceApplication- Started RacStockServiceApplication in 6.895 seconds (JVM running for 7.627)
2020/06/28-09:30:54 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-09:31:03 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-09:35:54 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-09:36:03 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-09:40:21 [http-nio-8084-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]- Initializing Spring DispatcherServlet 'dispatcherServlet'
2020/06/28-09:40:21 [http-nio-8084-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet- Initializing Servlet 'dispatcherServlet'
2020/06/28-09:40:21 [http-nio-8084-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet- Completed initialization in 10 ms
2020/06/28-09:40:21 [http-nio-8084-exec-3] ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]- Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage] with root cause
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:235) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:53) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.binding.MapperProxy.lambda$cachedMapperMethod$0(MapperProxy.java:98) ~[mybatis-3.5.3.jar:3.5.3]
	at java.util.concurrent.ConcurrentHashMap.computeIfAbsent(ConcurrentHashMap.java:1660) ~[na:1.8.0_231]
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:97) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:92) ~[mybatis-3.5.3.jar:3.5.3]
	at com.sun.proxy.$Proxy105.getReturnGoodsByPage(Unknown Source) ~[na:na]
	at com.huijian.rac.service.OrderReturnService.getReturnGoodsByPage(OrderReturnService.java:26) ~[classes/:na]
	at com.huijian.rac.controller.OrderReturnController.getReturnGoodsByPage(OrderReturnController.java:53) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_231]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_231]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_231]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_231]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_231]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_231]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_231]
2020/06/28-09:40:54 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-09:41:03 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-09:41:45 [main] INFO  com.huijian.rac.RacOrderServiceApplication- No active profile set, falling back to default profiles: default
2020/06/28-09:41:46 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Multiple Spring Data modules found, entering strict repository configuration mode!
2020/06/28-09:41:46 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020/06/28-09:41:46 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Finished Spring Data repository scanning in 13ms. Found 0 Redis repository interfaces.
2020/06/28-09:41:46 [main] INFO  org.springframework.cloud.context.scope.GenericScope- BeanFactory id=3d3b62b0-e3f7-3047-9b8b-9420146973a8
2020/06/28-09:41:46 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/28-09:41:46 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/28-09:41:46 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat initialized with port(s): 8084 (http)
2020/06/28-09:41:46 [main] INFO  org.apache.catalina.core.StandardService- Starting service [Tomcat]
2020/06/28-09:41:46 [main] INFO  org.apache.catalina.core.StandardEngine- Starting Servlet engine: [Apache Tomcat/9.0.29]
2020/06/28-09:41:46 [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]- Initializing Spring embedded WebApplicationContext
2020/06/28-09:41:46 [main] INFO  org.springframework.web.context.ContextLoader- Root WebApplicationContext: initialization completed in 964 ms
2020/06/28-09:41:47 [main] WARN  com.netflix.config.sources.URLConfigurationSource- No URLs will be polled as dynamic configuration sources.
2020/06/28-09:41:47 [main] INFO  com.netflix.config.sources.URLConfigurationSource- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020/06/28-09:41:47 [main] WARN  com.netflix.config.sources.URLConfigurationSource- No URLs will be polled as dynamic configuration sources.
2020/06/28-09:41:47 [main] INFO  com.netflix.config.sources.URLConfigurationSource- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020/06/28-09:41:47 [main] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor- Initializing ExecutorService 'applicationTaskExecutor'
2020/06/28-09:41:48 [main] WARN  org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger- You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020/06/28-09:41:48 [main] WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger- Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020/06/28-09:41:48 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory- Setting initial instance status as: STARTING
2020/06/28-09:41:48 [main] INFO  com.netflix.discovery.DiscoveryClient- Initializing Eureka in region us-east-1
2020/06/28-09:41:48 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using JSON encoding codec LegacyJacksonJson
2020/06/28-09:41:48 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using JSON decoding codec LegacyJacksonJson
2020/06/28-09:41:49 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using XML encoding codec XStreamXml
2020/06/28-09:41:49 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using XML decoding codec XStreamXml
2020/06/28-09:41:49 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-09:41:49 [main] INFO  com.netflix.discovery.DiscoveryClient- Disable delta property : false
2020/06/28-09:41:49 [main] INFO  com.netflix.discovery.DiscoveryClient- Single vip registry refresh property : null
2020/06/28-09:41:49 [main] INFO  com.netflix.discovery.DiscoveryClient- Force full registry fetch : false
2020/06/28-09:41:49 [main] INFO  com.netflix.discovery.DiscoveryClient- Application is null : false
2020/06/28-09:41:49 [main] INFO  com.netflix.discovery.DiscoveryClient- Registered Applications size is zero : true
2020/06/28-09:41:49 [main] INFO  com.netflix.discovery.DiscoveryClient- Application version is -1: true
2020/06/28-09:41:49 [main] INFO  com.netflix.discovery.DiscoveryClient- Getting all instance registry info from the eureka server
2020/06/28-09:41:49 [main] INFO  com.netflix.discovery.DiscoveryClient- The response status is 200
2020/06/28-09:41:49 [main] INFO  com.netflix.discovery.DiscoveryClient- Starting heartbeat executor: renew interval is: 30
2020/06/28-09:41:49 [main] INFO  com.netflix.discovery.InstanceInfoReplicator- InstanceInfoReplicator onDemand update allowed rate per min is 4
2020/06/28-09:41:49 [main] INFO  com.netflix.discovery.DiscoveryClient- Discovery Client initialized at timestamp 1593308509481 with initial instances count: 2
2020/06/28-09:41:49 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry- Registering application RAC-ORDER-SERVICE with eureka with status UP
2020/06/28-09:41:49 [main] INFO  com.netflix.discovery.DiscoveryClient- Saw local status change event StatusChangeEvent [timestamp=1593308509484, current=UP, previous=STARTING]
2020/06/28-09:41:49 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-ORDER-SERVICE/MSI.mshome.net:rac-order-service:8084: registering service...
2020/06/28-09:41:49 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Attempting to connect to: [192.168.161.129:5672]
2020/06/28-09:41:49 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Created new connection: rabbitConnectionFactory#2f1d0bbc:0/SimpleConnection@4276ad40 [delegate=amqp://admin@192.168.161.129:5672/, localPort= 54841]
2020/06/28-09:41:49 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-ORDER-SERVICE/MSI.mshome.net:rac-order-service:8084 - registration status: 204
2020/06/28-09:41:49 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat started on port(s): 8084 (http) with context path ''
2020/06/28-09:41:49 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration- Updating port to 8084
2020/06/28-09:41:49 [main] INFO  com.huijian.rac.RacOrderServiceApplication- Started RacOrderServiceApplication in 5.104 seconds (JVM running for 5.838)
2020/06/28-09:42:45 [http-nio-8084-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]- Initializing Spring DispatcherServlet 'dispatcherServlet'
2020/06/28-09:42:45 [http-nio-8084-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet- Initializing Servlet 'dispatcherServlet'
2020/06/28-09:42:45 [http-nio-8084-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet- Completed initialization in 6 ms
2020/06/28-09:42:45 [http-nio-8084-exec-2] INFO  com.zaxxer.hikari.HikariDataSource- HikariPool-1 - Starting...
2020/06/28-09:42:46 [http-nio-8084-exec-4] ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]- Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.binding.BindingException: Parameter 'hospitalID' not found. Available parameters are [param5, size, keywords, endDate, start, param3, param4, param1, startDate, param2]] with root cause
org.apache.ibatis.binding.BindingException: Parameter 'hospitalID' not found. Available parameters are [param5, size, keywords, endDate, start, param3, param4, param1, startDate, param2]
	at org.apache.ibatis.binding.MapperMethod$ParamMap.get(MapperMethod.java:212) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.reflection.wrapper.MapWrapper.get(MapWrapper.java:45) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.reflection.MetaObject.getValue(MetaObject.java:122) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.executor.BaseExecutor.createCacheKey(BaseExecutor.java:219) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.executor.CachingExecutor.createCacheKey(CachingExecutor.java:146) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:82) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140) ~[mybatis-3.5.3.jar:3.5.3]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_231]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_231]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_231]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_231]
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426) ~[mybatis-spring-2.0.3.jar:2.0.3]
	at com.sun.proxy.$Proxy93.selectList(Unknown Source) ~[na:na]
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:223) ~[mybatis-spring-2.0.3.jar:2.0.3]
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:93) ~[mybatis-3.5.3.jar:3.5.3]
	at com.sun.proxy.$Proxy105.getReturnGoodsByPage(Unknown Source) ~[na:na]
	at com.huijian.rac.service.OrderReturnService.getReturnGoodsByPage(OrderReturnService.java:26) ~[classes/:na]
	at com.huijian.rac.controller.OrderReturnController.getReturnGoodsByPage(OrderReturnController.java:53) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_231]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_231]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_231]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_231]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_231]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_231]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_231]
2020/06/28-09:42:46 [http-nio-8084-exec-2] INFO  com.zaxxer.hikari.HikariDataSource- HikariPool-1 - Start completed.
2020/06/28-09:42:46 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==>  Preparing: SELECT * from sj_order where OrderNo like concat('%',?,'%') and OrderDate >= ? and OrderDate < ? and OrderState != 0 order by OrderDate desc limit ?, ? 
2020/06/28-09:42:46 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-28 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/28-09:42:46 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- <==      Total: 0
2020/06/28-09:44:07 [main] INFO  com.huijian.rac.RacOrderServiceApplication- No active profile set, falling back to default profiles: default
2020/06/28-09:44:08 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Multiple Spring Data modules found, entering strict repository configuration mode!
2020/06/28-09:44:08 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020/06/28-09:44:08 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Finished Spring Data repository scanning in 16ms. Found 0 Redis repository interfaces.
2020/06/28-09:44:08 [main] INFO  org.springframework.cloud.context.scope.GenericScope- BeanFactory id=3d3b62b0-e3f7-3047-9b8b-9420146973a8
2020/06/28-09:44:08 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/28-09:44:08 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/28-09:44:08 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat initialized with port(s): 8084 (http)
2020/06/28-09:44:08 [main] INFO  org.apache.catalina.core.StandardService- Starting service [Tomcat]
2020/06/28-09:44:08 [main] INFO  org.apache.catalina.core.StandardEngine- Starting Servlet engine: [Apache Tomcat/9.0.29]
2020/06/28-09:44:08 [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]- Initializing Spring embedded WebApplicationContext
2020/06/28-09:44:08 [main] INFO  org.springframework.web.context.ContextLoader- Root WebApplicationContext: initialization completed in 1106 ms
2020/06/28-09:44:09 [main] WARN  com.netflix.config.sources.URLConfigurationSource- No URLs will be polled as dynamic configuration sources.
2020/06/28-09:44:09 [main] INFO  com.netflix.config.sources.URLConfigurationSource- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020/06/28-09:44:09 [main] WARN  com.netflix.config.sources.URLConfigurationSource- No URLs will be polled as dynamic configuration sources.
2020/06/28-09:44:09 [main] INFO  com.netflix.config.sources.URLConfigurationSource- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020/06/28-09:44:09 [main] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor- Initializing ExecutorService 'applicationTaskExecutor'
2020/06/28-09:44:10 [main] WARN  org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger- You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020/06/28-09:44:10 [main] WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger- Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020/06/28-09:44:10 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory- Setting initial instance status as: STARTING
2020/06/28-09:44:10 [main] INFO  com.netflix.discovery.DiscoveryClient- Initializing Eureka in region us-east-1
2020/06/28-09:44:11 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using JSON encoding codec LegacyJacksonJson
2020/06/28-09:44:11 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using JSON decoding codec LegacyJacksonJson
2020/06/28-09:44:11 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using XML encoding codec XStreamXml
2020/06/28-09:44:11 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using XML decoding codec XStreamXml
2020/06/28-09:44:11 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-09:44:11 [main] INFO  com.netflix.discovery.DiscoveryClient- Disable delta property : false
2020/06/28-09:44:11 [main] INFO  com.netflix.discovery.DiscoveryClient- Single vip registry refresh property : null
2020/06/28-09:44:11 [main] INFO  com.netflix.discovery.DiscoveryClient- Force full registry fetch : false
2020/06/28-09:44:11 [main] INFO  com.netflix.discovery.DiscoveryClient- Application is null : false
2020/06/28-09:44:11 [main] INFO  com.netflix.discovery.DiscoveryClient- Registered Applications size is zero : true
2020/06/28-09:44:11 [main] INFO  com.netflix.discovery.DiscoveryClient- Application version is -1: true
2020/06/28-09:44:11 [main] INFO  com.netflix.discovery.DiscoveryClient- Getting all instance registry info from the eureka server
2020/06/28-09:44:11 [main] INFO  com.netflix.discovery.DiscoveryClient- The response status is 200
2020/06/28-09:44:11 [main] INFO  com.netflix.discovery.DiscoveryClient- Starting heartbeat executor: renew interval is: 30
2020/06/28-09:44:11 [main] INFO  com.netflix.discovery.InstanceInfoReplicator- InstanceInfoReplicator onDemand update allowed rate per min is 4
2020/06/28-09:44:11 [main] INFO  com.netflix.discovery.DiscoveryClient- Discovery Client initialized at timestamp 1593308651741 with initial instances count: 2
2020/06/28-09:44:11 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry- Registering application RAC-ORDER-SERVICE with eureka with status UP
2020/06/28-09:44:11 [main] INFO  com.netflix.discovery.DiscoveryClient- Saw local status change event StatusChangeEvent [timestamp=1593308651744, current=UP, previous=STARTING]
2020/06/28-09:44:11 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-ORDER-SERVICE/MSI.mshome.net:rac-order-service:8084: registering service...
2020/06/28-09:44:11 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Attempting to connect to: [192.168.161.129:5672]
2020/06/28-09:44:11 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Created new connection: rabbitConnectionFactory#2f1d0bbc:0/SimpleConnection@4276ad40 [delegate=amqp://admin@192.168.161.129:5672/, localPort= 54977]
2020/06/28-09:44:11 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-ORDER-SERVICE/MSI.mshome.net:rac-order-service:8084 - registration status: 204
2020/06/28-09:44:11 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat started on port(s): 8084 (http) with context path ''
2020/06/28-09:44:11 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration- Updating port to 8084
2020/06/28-09:44:12 [main] INFO  com.huijian.rac.RacOrderServiceApplication- Started RacOrderServiceApplication in 5.604 seconds (JVM running for 6.49)
2020/06/28-09:45:01 [http-nio-8084-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]- Initializing Spring DispatcherServlet 'dispatcherServlet'
2020/06/28-09:45:01 [http-nio-8084-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet- Initializing Servlet 'dispatcherServlet'
2020/06/28-09:45:01 [http-nio-8084-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet- Completed initialization in 6 ms
2020/06/28-09:45:01 [http-nio-8084-exec-2] INFO  com.zaxxer.hikari.HikariDataSource- HikariPool-1 - Starting...
2020/06/28-09:45:02 [http-nio-8084-exec-2] INFO  com.zaxxer.hikari.HikariDataSource- HikariPool-1 - Start completed.
2020/06/28-09:45:02 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==>  Preparing: SELECT a.*, b.PERSONNAME audit_person_name from (SELECT sr.*, pd.PERSONNAME collar_person_name from sj_returngoods as sr INNER JOIN pub_doctor as pd on sr.return_goods_no like concat('%',?,'%') and sr.return_goods_date >= ? and sr.return_goods_date < ? and sr.collar_person_id = pd.PERSONID ) as a left join pub_doctor as b on a.audit_person_id = b.PERSONID order by a.return_goods_date desc limit ?, ? 
2020/06/28-09:45:02 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-28 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/28-09:45:02 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- <==      Total: 1
2020/06/28-09:46:03 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-09:46:49 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==>  Preparing: SELECT a.*, b.PERSONNAME audit_person_name from (SELECT sr.*, pd.PERSONNAME collar_person_name from sj_returngoods as sr INNER JOIN pub_doctor as pd on sr.return_goods_no like concat('%',?,'%') and sr.return_goods_date >= ? and sr.return_goods_date < ? and sr.collar_person_id = pd.PERSONID ) as a left join pub_doctor as b on a.audit_person_id = b.PERSONID order by a.return_goods_date desc limit ?, ? 
2020/06/28-09:46:49 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-28 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/28-09:46:50 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- <==      Total: 1
2020/06/28-09:48:22 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==>  Preparing: SELECT * from sj_order where OrderNo like concat('%',?,'%') and OrderDate >= ? and OrderDate < ? and OrderState != 0 order by OrderDate desc limit ?, ? 
2020/06/28-09:48:22 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-28 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/28-09:48:22 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- <==      Total: 0
2020/06/28-09:48:22 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==>  Preparing: SELECT a.*, b.PERSONNAME audit_person_name from (SELECT sr.*, pd.PERSONNAME collar_person_name from sj_returngoods as sr INNER JOIN pub_doctor as pd on sr.return_goods_no like concat('%',?,'%') and sr.return_goods_date >= ? and sr.return_goods_date < ? and sr.collar_person_id = pd.PERSONID ) as a left join pub_doctor as b on a.audit_person_id = b.PERSONID order by a.return_goods_date desc limit ?, ? 
2020/06/28-09:48:22 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-28 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/28-09:48:22 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- <==      Total: 1
2020/06/28-09:49:11 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-09:49:22 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==>  Preparing: SELECT * from sj_order where OrderNo like concat('%',?,'%') and OrderDate >= ? and OrderDate < ? and OrderState != 0 order by OrderDate desc limit ?, ? 
2020/06/28-09:49:22 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-28 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/28-09:49:22 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- <==      Total: 0
2020/06/28-09:49:22 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==>  Preparing: SELECT a.*, b.PERSONNAME audit_person_name from (SELECT sr.*, pd.PERSONNAME collar_person_name from sj_returngoods as sr INNER JOIN pub_doctor as pd on sr.return_goods_no like concat('%',?,'%') and sr.return_goods_date >= ? and sr.return_goods_date < ? and sr.collar_person_id = pd.PERSONID ) as a left join pub_doctor as b on a.audit_person_id = b.PERSONID order by a.return_goods_date desc limit ?, ? 
2020/06/28-09:49:22 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-28 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/28-09:49:22 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- <==      Total: 1
2020/06/28-09:51:03 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-09:51:13 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderDetailMapper.findListByOrderNo- ==>  Preparing: select * from sj_orderdetail where OrderNo = ? 
2020/06/28-09:51:13 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderDetailMapper.findListByOrderNo- ==> Parameters: null
2020/06/28-09:51:13 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderDetailMapper.findListByOrderNo- <==      Total: 0
2020/06/28-09:54:11 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-09:56:03 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-09:57:49 [main] INFO  com.huijian.rac.RacOrderServiceApplication- No active profile set, falling back to default profiles: default
2020/06/28-09:57:49 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Multiple Spring Data modules found, entering strict repository configuration mode!
2020/06/28-09:57:49 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020/06/28-09:57:49 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Finished Spring Data repository scanning in 13ms. Found 0 Redis repository interfaces.
2020/06/28-09:57:49 [main] INFO  org.springframework.cloud.context.scope.GenericScope- BeanFactory id=3d3b62b0-e3f7-3047-9b8b-9420146973a8
2020/06/28-09:57:49 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/28-09:57:49 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/28-09:57:49 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat initialized with port(s): 8084 (http)
2020/06/28-09:57:49 [main] INFO  org.apache.catalina.core.StandardService- Starting service [Tomcat]
2020/06/28-09:57:49 [main] INFO  org.apache.catalina.core.StandardEngine- Starting Servlet engine: [Apache Tomcat/9.0.29]
2020/06/28-09:57:50 [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]- Initializing Spring embedded WebApplicationContext
2020/06/28-09:57:50 [main] INFO  org.springframework.web.context.ContextLoader- Root WebApplicationContext: initialization completed in 956 ms
2020/06/28-09:57:50 [main] WARN  com.netflix.config.sources.URLConfigurationSource- No URLs will be polled as dynamic configuration sources.
2020/06/28-09:57:50 [main] INFO  com.netflix.config.sources.URLConfigurationSource- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020/06/28-09:57:50 [main] WARN  com.netflix.config.sources.URLConfigurationSource- No URLs will be polled as dynamic configuration sources.
2020/06/28-09:57:50 [main] INFO  com.netflix.config.sources.URLConfigurationSource- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020/06/28-09:57:50 [main] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor- Initializing ExecutorService 'applicationTaskExecutor'
2020/06/28-09:57:51 [main] WARN  org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger- You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020/06/28-09:57:51 [main] WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger- Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020/06/28-09:57:51 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory- Setting initial instance status as: STARTING
2020/06/28-09:57:51 [main] INFO  com.netflix.discovery.DiscoveryClient- Initializing Eureka in region us-east-1
2020/06/28-09:57:52 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using JSON encoding codec LegacyJacksonJson
2020/06/28-09:57:52 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using JSON decoding codec LegacyJacksonJson
2020/06/28-09:57:52 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using XML encoding codec XStreamXml
2020/06/28-09:57:52 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using XML decoding codec XStreamXml
2020/06/28-09:57:52 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-09:57:52 [main] INFO  com.netflix.discovery.DiscoveryClient- Disable delta property : false
2020/06/28-09:57:52 [main] INFO  com.netflix.discovery.DiscoveryClient- Single vip registry refresh property : null
2020/06/28-09:57:52 [main] INFO  com.netflix.discovery.DiscoveryClient- Force full registry fetch : false
2020/06/28-09:57:52 [main] INFO  com.netflix.discovery.DiscoveryClient- Application is null : false
2020/06/28-09:57:52 [main] INFO  com.netflix.discovery.DiscoveryClient- Registered Applications size is zero : true
2020/06/28-09:57:52 [main] INFO  com.netflix.discovery.DiscoveryClient- Application version is -1: true
2020/06/28-09:57:52 [main] INFO  com.netflix.discovery.DiscoveryClient- Getting all instance registry info from the eureka server
2020/06/28-09:57:52 [main] INFO  com.netflix.discovery.DiscoveryClient- The response status is 200
2020/06/28-09:57:52 [main] INFO  com.netflix.discovery.DiscoveryClient- Starting heartbeat executor: renew interval is: 30
2020/06/28-09:57:52 [main] INFO  com.netflix.discovery.InstanceInfoReplicator- InstanceInfoReplicator onDemand update allowed rate per min is 4
2020/06/28-09:57:52 [main] INFO  com.netflix.discovery.DiscoveryClient- Discovery Client initialized at timestamp 1593309472596 with initial instances count: 2
2020/06/28-09:57:52 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry- Registering application RAC-ORDER-SERVICE with eureka with status UP
2020/06/28-09:57:52 [main] INFO  com.netflix.discovery.DiscoveryClient- Saw local status change event StatusChangeEvent [timestamp=1593309472599, current=UP, previous=STARTING]
2020/06/28-09:57:52 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-ORDER-SERVICE/MSI.mshome.net:rac-order-service:8084: registering service...
2020/06/28-09:57:52 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Attempting to connect to: [192.168.161.129:5672]
2020/06/28-09:57:52 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Created new connection: rabbitConnectionFactory#26dc9bd5:0/SimpleConnection@76a1146d [delegate=amqp://admin@192.168.161.129:5672/, localPort= 55676]
2020/06/28-09:57:52 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-ORDER-SERVICE/MSI.mshome.net:rac-order-service:8084 - registration status: 204
2020/06/28-09:57:52 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat started on port(s): 8084 (http) with context path ''
2020/06/28-09:57:52 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration- Updating port to 8084
2020/06/28-09:57:52 [main] INFO  com.huijian.rac.RacOrderServiceApplication- Started RacOrderServiceApplication in 4.95 seconds (JVM running for 5.64)
2020/06/28-09:57:58 [http-nio-8084-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]- Initializing Spring DispatcherServlet 'dispatcherServlet'
2020/06/28-09:57:58 [http-nio-8084-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet- Initializing Servlet 'dispatcherServlet'
2020/06/28-09:57:58 [http-nio-8084-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet- Completed initialization in 5 ms
2020/06/28-09:57:58 [http-nio-8084-exec-2] INFO  com.zaxxer.hikari.HikariDataSource- HikariPool-1 - Starting...
2020/06/28-09:57:59 [http-nio-8084-exec-2] INFO  com.zaxxer.hikari.HikariDataSource- HikariPool-1 - Start completed.
2020/06/28-09:57:59 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==>  Preparing: SELECT * from sj_order where OrderNo like concat('%',?,'%') and OrderDate >= ? and OrderDate < ? and OrderState != 0 order by OrderDate desc limit ?, ? 
2020/06/28-09:57:59 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-28 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/28-09:57:59 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- <==      Total: 0
2020/06/28-09:57:59 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==>  Preparing: SELECT a.*, b.PERSONNAME audit_person_name, ph.ORGANIZATION as hospital_name from (SELECT sr.*, pd.PERSONNAME collar_person_name from sj_returngoods as sr INNER JOIN pub_doctor as pd on sr.return_goods_no like concat('%',?,'%') and sr.return_goods_date >= ? and sr.return_goods_date < ? and sr.collar_person_id = pd.PERSONID ) as a left join pub_doctor as b on a.audit_person_id = b.PERSONID inner join pub_hospitalid ph a.hospital_id = ph.HOSPITALID order by a.return_goods_date desc limit ?, ? 
2020/06/28-09:57:59 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-28 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/28-09:57:59 [http-nio-8084-exec-4] ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]- Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'a.hospital_id = ph.HOSPITALID
        order by a.return_goods_date desc limit 0,' at line 7
### The error may exist in file [C:\Users\13955\Desktop\ReagentAndConsumables\springcloud\rac-order-service\target\classes\mapper\OrderReturnMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT a.*, b.PERSONNAME audit_person_name, ph.ORGANIZATION as hospital_name from         (SELECT sr.*, pd.PERSONNAME collar_person_name from sj_returngoods as sr INNER JOIN pub_doctor as pd on         sr.return_goods_no like concat('%',?,'%')         and sr.return_goods_date >= ?         and sr.return_goods_date < ?         and sr.collar_person_id = pd.PERSONID         ) as a left join pub_doctor as b on a.audit_person_id = b.PERSONID inner join pub_hospitalid ph a.hospital_id = ph.HOSPITALID         order by a.return_goods_date desc limit ?, ?
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'a.hospital_id = ph.HOSPITALID
        order by a.return_goods_date desc limit 0,' at line 7
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'a.hospital_id = ph.HOSPITALID
        order by a.return_goods_date desc limit 0,' at line 7] with root cause
java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'a.hospital_id = ph.HOSPITALID
        order by a.return_goods_date desc limit 0,' at line 7
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120) ~[mysql-connector-java-8.0.18.jar:8.0.18]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.18.jar:8.0.18]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.18.jar:8.0.18]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953) ~[mysql-connector-java-8.0.18.jar:8.0.18]
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370) ~[mysql-connector-java-8.0.18.jar:8.0.18]
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44) ~[HikariCP-3.4.1.jar:na]
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java) ~[HikariCP-3.4.1.jar:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_231]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_231]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_231]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_231]
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59) ~[mybatis-3.5.3.jar:3.5.3]
	at com.sun.proxy.$Proxy148.execute(Unknown Source) ~[na:na]
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140) ~[mybatis-3.5.3.jar:3.5.3]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_231]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_231]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_231]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_231]
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426) ~[mybatis-spring-2.0.3.jar:2.0.3]
	at com.sun.proxy.$Proxy93.selectList(Unknown Source) ~[na:na]
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:223) ~[mybatis-spring-2.0.3.jar:2.0.3]
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:93) ~[mybatis-3.5.3.jar:3.5.3]
	at com.sun.proxy.$Proxy105.getReturnGoodsByPage(Unknown Source) ~[na:na]
	at com.huijian.rac.service.OrderReturnService.getReturnGoodsByPage(OrderReturnService.java:26) ~[classes/:na]
	at com.huijian.rac.controller.OrderReturnController.getReturnGoodsByPage(OrderReturnController.java:53) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_231]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_231]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_231]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_231]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_231]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_231]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_231]
2020/06/28-09:59:38 [main] INFO  com.huijian.rac.RacOrderServiceApplication- No active profile set, falling back to default profiles: default
2020/06/28-09:59:38 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Multiple Spring Data modules found, entering strict repository configuration mode!
2020/06/28-09:59:38 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020/06/28-09:59:38 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Finished Spring Data repository scanning in 13ms. Found 0 Redis repository interfaces.
2020/06/28-09:59:38 [main] INFO  org.springframework.cloud.context.scope.GenericScope- BeanFactory id=3d3b62b0-e3f7-3047-9b8b-9420146973a8
2020/06/28-09:59:39 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/28-09:59:39 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/28-09:59:39 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat initialized with port(s): 8084 (http)
2020/06/28-09:59:39 [main] INFO  org.apache.catalina.core.StandardService- Starting service [Tomcat]
2020/06/28-09:59:39 [main] INFO  org.apache.catalina.core.StandardEngine- Starting Servlet engine: [Apache Tomcat/9.0.29]
2020/06/28-09:59:39 [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]- Initializing Spring embedded WebApplicationContext
2020/06/28-09:59:39 [main] INFO  org.springframework.web.context.ContextLoader- Root WebApplicationContext: initialization completed in 936 ms
2020/06/28-09:59:39 [main] WARN  com.netflix.config.sources.URLConfigurationSource- No URLs will be polled as dynamic configuration sources.
2020/06/28-09:59:39 [main] INFO  com.netflix.config.sources.URLConfigurationSource- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020/06/28-09:59:39 [main] WARN  com.netflix.config.sources.URLConfigurationSource- No URLs will be polled as dynamic configuration sources.
2020/06/28-09:59:39 [main] INFO  com.netflix.config.sources.URLConfigurationSource- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020/06/28-09:59:39 [main] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor- Initializing ExecutorService 'applicationTaskExecutor'
2020/06/28-09:59:40 [main] WARN  org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger- You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020/06/28-09:59:40 [main] WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger- Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020/06/28-09:59:41 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory- Setting initial instance status as: STARTING
2020/06/28-09:59:41 [main] INFO  com.netflix.discovery.DiscoveryClient- Initializing Eureka in region us-east-1
2020/06/28-09:59:41 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using JSON encoding codec LegacyJacksonJson
2020/06/28-09:59:41 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using JSON decoding codec LegacyJacksonJson
2020/06/28-09:59:41 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using XML encoding codec XStreamXml
2020/06/28-09:59:41 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using XML decoding codec XStreamXml
2020/06/28-09:59:41 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-09:59:41 [main] INFO  com.netflix.discovery.DiscoveryClient- Disable delta property : false
2020/06/28-09:59:41 [main] INFO  com.netflix.discovery.DiscoveryClient- Single vip registry refresh property : null
2020/06/28-09:59:41 [main] INFO  com.netflix.discovery.DiscoveryClient- Force full registry fetch : false
2020/06/28-09:59:41 [main] INFO  com.netflix.discovery.DiscoveryClient- Application is null : false
2020/06/28-09:59:41 [main] INFO  com.netflix.discovery.DiscoveryClient- Registered Applications size is zero : true
2020/06/28-09:59:41 [main] INFO  com.netflix.discovery.DiscoveryClient- Application version is -1: true
2020/06/28-09:59:41 [main] INFO  com.netflix.discovery.DiscoveryClient- Getting all instance registry info from the eureka server
2020/06/28-09:59:41 [main] INFO  com.netflix.discovery.DiscoveryClient- The response status is 200
2020/06/28-09:59:41 [main] INFO  com.netflix.discovery.DiscoveryClient- Starting heartbeat executor: renew interval is: 30
2020/06/28-09:59:41 [main] INFO  com.netflix.discovery.InstanceInfoReplicator- InstanceInfoReplicator onDemand update allowed rate per min is 4
2020/06/28-09:59:41 [main] INFO  com.netflix.discovery.DiscoveryClient- Discovery Client initialized at timestamp 1593309581828 with initial instances count: 2
2020/06/28-09:59:41 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry- Registering application RAC-ORDER-SERVICE with eureka with status UP
2020/06/28-09:59:41 [main] INFO  com.netflix.discovery.DiscoveryClient- Saw local status change event StatusChangeEvent [timestamp=1593309581831, current=UP, previous=STARTING]
2020/06/28-09:59:41 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-ORDER-SERVICE/MSI.mshome.net:rac-order-service:8084: registering service...
2020/06/28-09:59:41 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Attempting to connect to: [192.168.161.129:5672]
2020/06/28-09:59:41 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Created new connection: rabbitConnectionFactory#5e519ad3:0/SimpleConnection@579846cc [delegate=amqp://admin@192.168.161.129:5672/, localPort= 55793]
2020/06/28-09:59:41 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-ORDER-SERVICE/MSI.mshome.net:rac-order-service:8084 - registration status: 204
2020/06/28-09:59:41 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat started on port(s): 8084 (http) with context path ''
2020/06/28-09:59:41 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration- Updating port to 8084
2020/06/28-09:59:42 [main] INFO  com.huijian.rac.RacOrderServiceApplication- Started RacOrderServiceApplication in 4.9 seconds (JVM running for 5.632)
2020/06/28-10:00:05 [http-nio-8084-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]- Initializing Spring DispatcherServlet 'dispatcherServlet'
2020/06/28-10:00:05 [http-nio-8084-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet- Initializing Servlet 'dispatcherServlet'
2020/06/28-10:00:05 [http-nio-8084-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet- Completed initialization in 7 ms
2020/06/28-10:00:05 [http-nio-8084-exec-5] INFO  com.zaxxer.hikari.HikariDataSource- HikariPool-1 - Starting...
2020/06/28-10:00:06 [http-nio-8084-exec-5] INFO  com.zaxxer.hikari.HikariDataSource- HikariPool-1 - Start completed.
2020/06/28-10:00:06 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==>  Preparing: SELECT * from sj_order where OrderNo like concat('%',?,'%') and OrderDate >= ? and OrderDate < ? and OrderState != 0 order by OrderDate desc limit ?, ? 
2020/06/28-10:00:06 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-28 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/28-10:00:06 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==>  Preparing: SELECT a.*, b.PERSONNAME audit_person_name, ph.ORGANIZATION hospital_name from (SELECT sr.*, pd.PERSONNAME collar_person_name from sj_returngoods as sr INNER JOIN pub_doctor as pd on sr.return_goods_no like concat('%',?,'%') and sr.return_goods_date >= ? and sr.return_goods_date < ? and sr.collar_person_id = pd.PERSONID ) as a left join pub_doctor as b on a.audit_person_id = b.PERSONID inner join pub_hospitalid ph on a.hospital_id = ph.HOSPITALID order by a.return_goods_date desc limit ?, ? 
2020/06/28-10:00:06 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-28 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/28-10:00:06 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- <==      Total: 0
2020/06/28-10:00:06 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- <==      Total: 1
2020/06/28-10:01:03 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-10:04:22 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderDetailMapper.findListByOrderNo- ==>  Preparing: select * from sj_orderdetail where OrderNo = ? 
2020/06/28-10:04:22 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderDetailMapper.findListByOrderNo- ==> Parameters: null
2020/06/28-10:04:22 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderDetailMapper.findListByOrderNo- <==      Total: 0
2020/06/28-10:04:41 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-10:05:03 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==>  Preparing: SELECT a.*, b.PERSONNAME audit_person_name, ph.ORGANIZATION hospital_name from (SELECT sr.*, pd.PERSONNAME collar_person_name from sj_returngoods as sr INNER JOIN pub_doctor as pd on sr.return_goods_no like concat('%',?,'%') and sr.return_goods_date >= ? and sr.return_goods_date < ? and sr.collar_person_id = pd.PERSONID ) as a left join pub_doctor as b on a.audit_person_id = b.PERSONID inner join pub_hospitalid ph on a.hospital_id = ph.HOSPITALID order by a.return_goods_date desc limit ?, ? 
2020/06/28-10:05:03 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-28 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/28-10:05:03 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- <==      Total: 1
2020/06/28-10:05:11 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==>  Preparing: SELECT a.*, b.PERSONNAME audit_person_name, ph.ORGANIZATION hospital_name from (SELECT sr.*, pd.PERSONNAME collar_person_name from sj_returngoods as sr INNER JOIN pub_doctor as pd on sr.return_goods_no like concat('%',?,'%') and sr.return_goods_date >= ? and sr.return_goods_date < ? and sr.collar_person_id = pd.PERSONID ) as a left join pub_doctor as b on a.audit_person_id = b.PERSONID inner join pub_hospitalid ph on a.hospital_id = ph.HOSPITALID order by a.return_goods_date desc limit ?, ? 
2020/06/28-10:05:11 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-28 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/28-10:05:11 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- <==      Total: 1
2020/06/28-10:05:22 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==>  Preparing: SELECT a.*, b.PERSONNAME audit_person_name, ph.ORGANIZATION hospital_name from (SELECT sr.*, pd.PERSONNAME collar_person_name from sj_returngoods as sr INNER JOIN pub_doctor as pd on sr.return_goods_no like concat('%',?,'%') and sr.return_goods_date >= ? and sr.return_goods_date < ? and sr.collar_person_id = pd.PERSONID ) as a left join pub_doctor as b on a.audit_person_id = b.PERSONID inner join pub_hospitalid ph on a.hospital_id = ph.HOSPITALID order by a.return_goods_date desc limit ?, ? 
2020/06/28-10:05:22 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-28 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/28-10:05:22 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- <==      Total: 1
2020/06/28-10:06:03 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-10:11:00 [main] INFO  com.huijian.rac.RacOrderServiceApplication- No active profile set, falling back to default profiles: default
2020/06/28-10:11:00 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Multiple Spring Data modules found, entering strict repository configuration mode!
2020/06/28-10:11:00 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020/06/28-10:11:00 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Finished Spring Data repository scanning in 18ms. Found 0 Redis repository interfaces.
2020/06/28-10:11:01 [main] INFO  org.springframework.cloud.context.scope.GenericScope- BeanFactory id=f3f23537-6900-3ad0-88d5-cec7769c130c
2020/06/28-10:11:01 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/28-10:11:01 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/28-10:11:01 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat initialized with port(s): 8084 (http)
2020/06/28-10:11:01 [main] INFO  org.apache.catalina.core.StandardService- Starting service [Tomcat]
2020/06/28-10:11:01 [main] INFO  org.apache.catalina.core.StandardEngine- Starting Servlet engine: [Apache Tomcat/9.0.29]
2020/06/28-10:11:01 [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]- Initializing Spring embedded WebApplicationContext
2020/06/28-10:11:01 [main] INFO  org.springframework.web.context.ContextLoader- Root WebApplicationContext: initialization completed in 1150 ms
2020/06/28-10:11:02 [main] WARN  com.netflix.config.sources.URLConfigurationSource- No URLs will be polled as dynamic configuration sources.
2020/06/28-10:11:02 [main] INFO  com.netflix.config.sources.URLConfigurationSource- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020/06/28-10:11:02 [main] WARN  com.netflix.config.sources.URLConfigurationSource- No URLs will be polled as dynamic configuration sources.
2020/06/28-10:11:02 [main] INFO  com.netflix.config.sources.URLConfigurationSource- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020/06/28-10:11:02 [main] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor- Initializing ExecutorService 'applicationTaskExecutor'
2020/06/28-10:11:03 [main] WARN  org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger- You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020/06/28-10:11:03 [main] WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger- Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020/06/28-10:11:03 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory- Setting initial instance status as: STARTING
2020/06/28-10:11:03 [main] INFO  com.netflix.discovery.DiscoveryClient- Initializing Eureka in region us-east-1
2020/06/28-10:11:03 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-10:11:03 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using JSON encoding codec LegacyJacksonJson
2020/06/28-10:11:03 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using JSON decoding codec LegacyJacksonJson
2020/06/28-10:11:03 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using XML encoding codec XStreamXml
2020/06/28-10:11:03 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using XML decoding codec XStreamXml
2020/06/28-10:11:04 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-10:11:04 [main] INFO  com.netflix.discovery.DiscoveryClient- Disable delta property : false
2020/06/28-10:11:04 [main] INFO  com.netflix.discovery.DiscoveryClient- Single vip registry refresh property : null
2020/06/28-10:11:04 [main] INFO  com.netflix.discovery.DiscoveryClient- Force full registry fetch : false
2020/06/28-10:11:04 [main] INFO  com.netflix.discovery.DiscoveryClient- Application is null : false
2020/06/28-10:11:04 [main] INFO  com.netflix.discovery.DiscoveryClient- Registered Applications size is zero : true
2020/06/28-10:11:04 [main] INFO  com.netflix.discovery.DiscoveryClient- Application version is -1: true
2020/06/28-10:11:04 [main] INFO  com.netflix.discovery.DiscoveryClient- Getting all instance registry info from the eureka server
2020/06/28-10:11:04 [main] INFO  com.netflix.discovery.DiscoveryClient- The response status is 200
2020/06/28-10:11:04 [main] INFO  com.netflix.discovery.DiscoveryClient- Starting heartbeat executor: renew interval is: 30
2020/06/28-10:11:04 [main] INFO  com.netflix.discovery.InstanceInfoReplicator- InstanceInfoReplicator onDemand update allowed rate per min is 4
2020/06/28-10:11:04 [main] INFO  com.netflix.discovery.DiscoveryClient- Discovery Client initialized at timestamp 1593310264395 with initial instances count: 2
2020/06/28-10:11:04 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry- Registering application RAC-ORDER-SERVICE with eureka with status UP
2020/06/28-10:11:04 [main] INFO  com.netflix.discovery.DiscoveryClient- Saw local status change event StatusChangeEvent [timestamp=1593310264397, current=UP, previous=STARTING]
2020/06/28-10:11:04 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-ORDER-SERVICE/MSI.mshome.net:rac-order-service:8084: registering service...
2020/06/28-10:11:04 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Attempting to connect to: [192.168.161.129:5672]
2020/06/28-10:11:04 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Created new connection: rabbitConnectionFactory#a66e580:0/SimpleConnection@6aad919c [delegate=amqp://admin@192.168.161.129:5672/, localPort= 56107]
2020/06/28-10:11:04 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-ORDER-SERVICE/MSI.mshome.net:rac-order-service:8084 - registration status: 204
2020/06/28-10:11:04 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat started on port(s): 8084 (http) with context path ''
2020/06/28-10:11:04 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration- Updating port to 8084
2020/06/28-10:11:04 [main] INFO  com.huijian.rac.RacOrderServiceApplication- Started RacOrderServiceApplication in 5.745 seconds (JVM running for 6.54)
2020/06/28-10:11:17 [http-nio-8084-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]- Initializing Spring DispatcherServlet 'dispatcherServlet'
2020/06/28-10:11:17 [http-nio-8084-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet- Initializing Servlet 'dispatcherServlet'
2020/06/28-10:11:17 [http-nio-8084-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet- Completed initialization in 5 ms
2020/06/28-10:11:17 [http-nio-8084-exec-2] INFO  com.zaxxer.hikari.HikariDataSource- HikariPool-1 - Starting...
2020/06/28-10:11:18 [http-nio-8084-exec-2] INFO  com.zaxxer.hikari.HikariDataSource- HikariPool-1 - Start completed.
2020/06/28-10:11:18 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==>  Preparing: SELECT * from sj_order where OrderNo like concat('%',?,'%') and OrderDate >= ? and OrderDate < ? and OrderState != 0 order by OrderDate desc limit ?, ? 
2020/06/28-10:11:18 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-28 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/28-10:11:18 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==>  Preparing: SELECT a.*, b.PERSONNAME audit_person_name, ph.ORGANIZATION hospital_name from (SELECT sr.*, pd.PERSONNAME collar_person_name from sj_returngoods as sr INNER JOIN pub_doctor as pd on sr.return_goods_no like concat('%',?,'%') and sr.return_goods_date >= ? and sr.return_goods_date < ? and sr.collar_person_id = pd.PERSONID ) as a left join pub_doctor as b on a.audit_person_id = b.PERSONID inner join pub_hospitalid ph on a.hospital_id = ph.HOSPITALID order by a.return_goods_date desc limit ?, ? 
2020/06/28-10:11:18 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-28 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/28-10:11:18 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- <==      Total: 0
2020/06/28-10:11:18 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- <==      Total: 1
2020/06/28-10:11:19 [http-nio-8084-exec-3] ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]- Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.huijian.rac.mapper.OrderReturnMapper.inquiryByID] with root cause
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.huijian.rac.mapper.OrderReturnMapper.inquiryByID
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:235) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:53) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.binding.MapperProxy.lambda$cachedMapperMethod$0(MapperProxy.java:98) ~[mybatis-3.5.3.jar:3.5.3]
	at java.util.concurrent.ConcurrentHashMap.computeIfAbsent(ConcurrentHashMap.java:1660) ~[na:1.8.0_231]
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:97) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:92) ~[mybatis-3.5.3.jar:3.5.3]
	at com.sun.proxy.$Proxy105.inquiryByID(Unknown Source) ~[na:na]
	at com.huijian.rac.service.OrderReturnService.inquiryByID(OrderReturnService.java:34) ~[classes/:na]
	at com.huijian.rac.controller.OrderReturnController.inquiryDiscardDetail(OrderReturnController.java:66) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_231]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_231]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_231]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_231]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_231]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_231]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_231]
2020/06/28-10:11:53 [main] INFO  com.huijian.rac.RacOrderServiceApplication- No active profile set, falling back to default profiles: default
2020/06/28-10:11:54 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Multiple Spring Data modules found, entering strict repository configuration mode!
2020/06/28-10:11:54 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020/06/28-10:11:54 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Finished Spring Data repository scanning in 14ms. Found 0 Redis repository interfaces.
2020/06/28-10:11:54 [main] INFO  org.springframework.cloud.context.scope.GenericScope- BeanFactory id=f3f23537-6900-3ad0-88d5-cec7769c130c
2020/06/28-10:11:54 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/28-10:11:54 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/28-10:11:54 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat initialized with port(s): 8084 (http)
2020/06/28-10:11:54 [main] INFO  org.apache.catalina.core.StandardService- Starting service [Tomcat]
2020/06/28-10:11:54 [main] INFO  org.apache.catalina.core.StandardEngine- Starting Servlet engine: [Apache Tomcat/9.0.29]
2020/06/28-10:11:54 [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]- Initializing Spring embedded WebApplicationContext
2020/06/28-10:11:54 [main] INFO  org.springframework.web.context.ContextLoader- Root WebApplicationContext: initialization completed in 1005 ms
2020/06/28-10:11:55 [main] WARN  com.netflix.config.sources.URLConfigurationSource- No URLs will be polled as dynamic configuration sources.
2020/06/28-10:11:55 [main] INFO  com.netflix.config.sources.URLConfigurationSource- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020/06/28-10:11:55 [main] WARN  com.netflix.config.sources.URLConfigurationSource- No URLs will be polled as dynamic configuration sources.
2020/06/28-10:11:55 [main] INFO  com.netflix.config.sources.URLConfigurationSource- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020/06/28-10:11:55 [main] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor- Initializing ExecutorService 'applicationTaskExecutor'
2020/06/28-10:11:56 [main] WARN  org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger- You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020/06/28-10:11:56 [main] WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger- Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020/06/28-10:11:56 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory- Setting initial instance status as: STARTING
2020/06/28-10:11:56 [main] INFO  com.netflix.discovery.DiscoveryClient- Initializing Eureka in region us-east-1
2020/06/28-10:11:56 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using JSON encoding codec LegacyJacksonJson
2020/06/28-10:11:56 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using JSON decoding codec LegacyJacksonJson
2020/06/28-10:11:57 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using XML encoding codec XStreamXml
2020/06/28-10:11:57 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using XML decoding codec XStreamXml
2020/06/28-10:11:57 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-10:11:57 [main] INFO  com.netflix.discovery.DiscoveryClient- Disable delta property : false
2020/06/28-10:11:57 [main] INFO  com.netflix.discovery.DiscoveryClient- Single vip registry refresh property : null
2020/06/28-10:11:57 [main] INFO  com.netflix.discovery.DiscoveryClient- Force full registry fetch : false
2020/06/28-10:11:57 [main] INFO  com.netflix.discovery.DiscoveryClient- Application is null : false
2020/06/28-10:11:57 [main] INFO  com.netflix.discovery.DiscoveryClient- Registered Applications size is zero : true
2020/06/28-10:11:57 [main] INFO  com.netflix.discovery.DiscoveryClient- Application version is -1: true
2020/06/28-10:11:57 [main] INFO  com.netflix.discovery.DiscoveryClient- Getting all instance registry info from the eureka server
2020/06/28-10:11:57 [main] INFO  com.netflix.discovery.DiscoveryClient- The response status is 200
2020/06/28-10:11:57 [main] INFO  com.netflix.discovery.DiscoveryClient- Starting heartbeat executor: renew interval is: 30
2020/06/28-10:11:57 [main] INFO  com.netflix.discovery.InstanceInfoReplicator- InstanceInfoReplicator onDemand update allowed rate per min is 4
2020/06/28-10:11:57 [main] INFO  com.netflix.discovery.DiscoveryClient- Discovery Client initialized at timestamp 1593310317472 with initial instances count: 2
2020/06/28-10:11:57 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry- Registering application RAC-ORDER-SERVICE with eureka with status UP
2020/06/28-10:11:57 [main] INFO  com.netflix.discovery.DiscoveryClient- Saw local status change event StatusChangeEvent [timestamp=1593310317474, current=UP, previous=STARTING]
2020/06/28-10:11:57 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-ORDER-SERVICE/MSI.mshome.net:rac-order-service:8084: registering service...
2020/06/28-10:11:57 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Attempting to connect to: [192.168.161.129:5672]
2020/06/28-10:11:57 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Created new connection: rabbitConnectionFactory#26c47874:0/SimpleConnection@3a16984c [delegate=amqp://admin@192.168.161.129:5672/, localPort= 56191]
2020/06/28-10:11:57 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-ORDER-SERVICE/MSI.mshome.net:rac-order-service:8084 - registration status: 204
2020/06/28-10:11:57 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat started on port(s): 8084 (http) with context path ''
2020/06/28-10:11:57 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration- Updating port to 8084
2020/06/28-10:11:57 [main] INFO  com.huijian.rac.RacOrderServiceApplication- Started RacOrderServiceApplication in 5.238 seconds (JVM running for 5.97)
2020/06/28-10:12:33 [http-nio-8084-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]- Initializing Spring DispatcherServlet 'dispatcherServlet'
2020/06/28-10:12:33 [http-nio-8084-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet- Initializing Servlet 'dispatcherServlet'
2020/06/28-10:12:33 [http-nio-8084-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet- Completed initialization in 4 ms
2020/06/28-10:12:33 [http-nio-8084-exec-1] INFO  com.zaxxer.hikari.HikariDataSource- HikariPool-1 - Starting...
2020/06/28-10:12:34 [http-nio-8084-exec-1] INFO  com.zaxxer.hikari.HikariDataSource- HikariPool-1 - Start completed.
2020/06/28-10:12:34 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==>  Preparing: select dis.*, dic.GoodsName, dic.Unit from sj_returngoodsdetail as sr inner join sj_goodsdictionary as dic on return_goods_no=? and dic.GoodsID = sr.goods_id 
2020/06/28-10:12:34 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==> Parameters: 90160020623BS001(String)
2020/06/28-10:12:34 [http-nio-8084-exec-1] ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]- Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown table 'dis'
### The error may exist in file [C:\Users\13955\Desktop\ReagentAndConsumables\springcloud\rac-order-service\target\classes\mapper\OrderReturnDetailMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select dis.*, dic.GoodsName, dic.Unit from  sj_returngoodsdetail as sr inner join         sj_goodsdictionary as dic on return_goods_no=? and dic.GoodsID = sr.goods_id
### Cause: java.sql.SQLSyntaxErrorException: Unknown table 'dis'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown table 'dis'] with root cause
java.sql.SQLSyntaxErrorException: Unknown table 'dis'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120) ~[mysql-connector-java-8.0.18.jar:8.0.18]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.18.jar:8.0.18]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.18.jar:8.0.18]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953) ~[mysql-connector-java-8.0.18.jar:8.0.18]
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370) ~[mysql-connector-java-8.0.18.jar:8.0.18]
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44) ~[HikariCP-3.4.1.jar:na]
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java) ~[HikariCP-3.4.1.jar:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_231]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_231]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_231]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_231]
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59) ~[mybatis-3.5.3.jar:3.5.3]
	at com.sun.proxy.$Proxy151.execute(Unknown Source) ~[na:na]
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140) ~[mybatis-3.5.3.jar:3.5.3]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_231]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_231]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_231]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_231]
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426) ~[mybatis-spring-2.0.3.jar:2.0.3]
	at com.sun.proxy.$Proxy93.selectList(Unknown Source) ~[na:na]
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:223) ~[mybatis-spring-2.0.3.jar:2.0.3]
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:93) ~[mybatis-3.5.3.jar:3.5.3]
	at com.sun.proxy.$Proxy106.inquiryByID(Unknown Source) ~[na:na]
	at com.huijian.rac.service.OrderReturnService.inquiryByID(OrderReturnService.java:34) ~[classes/:na]
	at com.huijian.rac.controller.OrderReturnController.inquiryDiscardDetail(OrderReturnController.java:66) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_231]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_231]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_231]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_231]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_231]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_231]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_231]
2020/06/28-10:13:54 [main] INFO  com.huijian.rac.RacOrderServiceApplication- No active profile set, falling back to default profiles: default
2020/06/28-10:13:54 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Multiple Spring Data modules found, entering strict repository configuration mode!
2020/06/28-10:13:54 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020/06/28-10:13:54 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Finished Spring Data repository scanning in 14ms. Found 0 Redis repository interfaces.
2020/06/28-10:13:54 [main] INFO  org.springframework.cloud.context.scope.GenericScope- BeanFactory id=f3f23537-6900-3ad0-88d5-cec7769c130c
2020/06/28-10:13:54 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/28-10:13:55 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/28-10:13:55 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat initialized with port(s): 8084 (http)
2020/06/28-10:13:55 [main] INFO  org.apache.catalina.core.StandardService- Starting service [Tomcat]
2020/06/28-10:13:55 [main] INFO  org.apache.catalina.core.StandardEngine- Starting Servlet engine: [Apache Tomcat/9.0.29]
2020/06/28-10:13:55 [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]- Initializing Spring embedded WebApplicationContext
2020/06/28-10:13:55 [main] INFO  org.springframework.web.context.ContextLoader- Root WebApplicationContext: initialization completed in 956 ms
2020/06/28-10:13:55 [main] WARN  com.netflix.config.sources.URLConfigurationSource- No URLs will be polled as dynamic configuration sources.
2020/06/28-10:13:55 [main] INFO  com.netflix.config.sources.URLConfigurationSource- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020/06/28-10:13:55 [main] WARN  com.netflix.config.sources.URLConfigurationSource- No URLs will be polled as dynamic configuration sources.
2020/06/28-10:13:55 [main] INFO  com.netflix.config.sources.URLConfigurationSource- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020/06/28-10:13:55 [main] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor- Initializing ExecutorService 'applicationTaskExecutor'
2020/06/28-10:13:56 [main] WARN  org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger- You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020/06/28-10:13:56 [main] WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger- Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020/06/28-10:13:57 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory- Setting initial instance status as: STARTING
2020/06/28-10:13:57 [main] INFO  com.netflix.discovery.DiscoveryClient- Initializing Eureka in region us-east-1
2020/06/28-10:13:57 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using JSON encoding codec LegacyJacksonJson
2020/06/28-10:13:57 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using JSON decoding codec LegacyJacksonJson
2020/06/28-10:13:57 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using XML encoding codec XStreamXml
2020/06/28-10:13:57 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using XML decoding codec XStreamXml
2020/06/28-10:13:57 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-10:13:57 [main] INFO  com.netflix.discovery.DiscoveryClient- Disable delta property : false
2020/06/28-10:13:57 [main] INFO  com.netflix.discovery.DiscoveryClient- Single vip registry refresh property : null
2020/06/28-10:13:57 [main] INFO  com.netflix.discovery.DiscoveryClient- Force full registry fetch : false
2020/06/28-10:13:57 [main] INFO  com.netflix.discovery.DiscoveryClient- Application is null : false
2020/06/28-10:13:57 [main] INFO  com.netflix.discovery.DiscoveryClient- Registered Applications size is zero : true
2020/06/28-10:13:57 [main] INFO  com.netflix.discovery.DiscoveryClient- Application version is -1: true
2020/06/28-10:13:57 [main] INFO  com.netflix.discovery.DiscoveryClient- Getting all instance registry info from the eureka server
2020/06/28-10:13:57 [main] INFO  com.netflix.discovery.DiscoveryClient- The response status is 200
2020/06/28-10:13:57 [main] INFO  com.netflix.discovery.DiscoveryClient- Starting heartbeat executor: renew interval is: 30
2020/06/28-10:13:57 [main] INFO  com.netflix.discovery.InstanceInfoReplicator- InstanceInfoReplicator onDemand update allowed rate per min is 4
2020/06/28-10:13:57 [main] INFO  com.netflix.discovery.DiscoveryClient- Discovery Client initialized at timestamp 1593310437870 with initial instances count: 2
2020/06/28-10:13:57 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry- Registering application RAC-ORDER-SERVICE with eureka with status UP
2020/06/28-10:13:57 [main] INFO  com.netflix.discovery.DiscoveryClient- Saw local status change event StatusChangeEvent [timestamp=1593310437872, current=UP, previous=STARTING]
2020/06/28-10:13:57 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-ORDER-SERVICE/MSI.mshome.net:rac-order-service:8084: registering service...
2020/06/28-10:13:57 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Attempting to connect to: [192.168.161.129:5672]
2020/06/28-10:13:57 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Created new connection: rabbitConnectionFactory#44536de4:0/SimpleConnection@67afe909 [delegate=amqp://admin@192.168.161.129:5672/, localPort= 56373]
2020/06/28-10:13:57 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-ORDER-SERVICE/MSI.mshome.net:rac-order-service:8084 - registration status: 204
2020/06/28-10:13:57 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat started on port(s): 8084 (http) with context path ''
2020/06/28-10:13:57 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration- Updating port to 8084
2020/06/28-10:13:58 [main] INFO  com.huijian.rac.RacOrderServiceApplication- Started RacOrderServiceApplication in 5.006 seconds (JVM running for 5.734)
2020/06/28-10:14:01 [http-nio-8084-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]- Initializing Spring DispatcherServlet 'dispatcherServlet'
2020/06/28-10:14:01 [http-nio-8084-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet- Initializing Servlet 'dispatcherServlet'
2020/06/28-10:14:01 [http-nio-8084-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet- Completed initialization in 7 ms
2020/06/28-10:14:02 [http-nio-8084-exec-3] INFO  com.zaxxer.hikari.HikariDataSource- HikariPool-1 - Starting...
2020/06/28-10:14:02 [http-nio-8084-exec-3] INFO  com.zaxxer.hikari.HikariDataSource- HikariPool-1 - Start completed.
2020/06/28-10:14:02 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==>  Preparing: SELECT * from sj_order where OrderNo like concat('%',?,'%') and OrderDate >= ? and OrderDate < ? and OrderState != 0 order by OrderDate desc limit ?, ? 
2020/06/28-10:14:02 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-28 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/28-10:14:02 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- <==      Total: 0
2020/06/28-10:14:02 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==>  Preparing: SELECT a.*, b.PERSONNAME audit_person_name, ph.ORGANIZATION hospital_name from (SELECT sr.*, pd.PERSONNAME collar_person_name from sj_returngoods as sr INNER JOIN pub_doctor as pd on sr.return_goods_no like concat('%',?,'%') and sr.return_goods_date >= ? and sr.return_goods_date < ? and sr.collar_person_id = pd.PERSONID ) as a left join pub_doctor as b on a.audit_person_id = b.PERSONID inner join pub_hospitalid ph on a.hospital_id = ph.HOSPITALID order by a.return_goods_date desc limit ?, ? 
2020/06/28-10:14:02 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-28 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/28-10:14:02 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- <==      Total: 1
2020/06/28-10:14:03 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==>  Preparing: select sr.*, dic.GoodsName, dic.Unit from sj_returngoodsdetail as sr inner join sj_goodsdictionary as dic on return_goods_no=? and dic.GoodsID = sr.goods_id 
2020/06/28-10:14:03 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==> Parameters: 90160020623BS001(String)
2020/06/28-10:14:03 [http-nio-8084-exec-9] ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]- Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'dic.Unit' in 'field list'
### The error may exist in file [C:\Users\13955\Desktop\ReagentAndConsumables\springcloud\rac-order-service\target\classes\mapper\OrderReturnDetailMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select sr.*, dic.GoodsName, dic.Unit from  sj_returngoodsdetail as sr inner join         sj_goodsdictionary as dic on return_goods_no=? and dic.GoodsID = sr.goods_id
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'dic.Unit' in 'field list'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'dic.Unit' in 'field list'] with root cause
java.sql.SQLSyntaxErrorException: Unknown column 'dic.Unit' in 'field list'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120) ~[mysql-connector-java-8.0.18.jar:8.0.18]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.18.jar:8.0.18]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.18.jar:8.0.18]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953) ~[mysql-connector-java-8.0.18.jar:8.0.18]
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370) ~[mysql-connector-java-8.0.18.jar:8.0.18]
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44) ~[HikariCP-3.4.1.jar:na]
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java) ~[HikariCP-3.4.1.jar:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_231]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_231]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_231]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_231]
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59) ~[mybatis-3.5.3.jar:3.5.3]
	at com.sun.proxy.$Proxy149.execute(Unknown Source) ~[na:na]
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140) ~[mybatis-3.5.3.jar:3.5.3]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_231]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_231]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_231]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_231]
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426) ~[mybatis-spring-2.0.3.jar:2.0.3]
	at com.sun.proxy.$Proxy93.selectList(Unknown Source) ~[na:na]
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:223) ~[mybatis-spring-2.0.3.jar:2.0.3]
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:93) ~[mybatis-3.5.3.jar:3.5.3]
	at com.sun.proxy.$Proxy106.inquiryByID(Unknown Source) ~[na:na]
	at com.huijian.rac.service.OrderReturnService.inquiryByID(OrderReturnService.java:34) ~[classes/:na]
	at com.huijian.rac.controller.OrderReturnController.inquiryDiscardDetail(OrderReturnController.java:66) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_231]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_231]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_231]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_231]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_231]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_231]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_231]
2020/06/28-10:14:51 [main] INFO  com.huijian.rac.RacOrderServiceApplication- No active profile set, falling back to default profiles: default
2020/06/28-10:14:52 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Multiple Spring Data modules found, entering strict repository configuration mode!
2020/06/28-10:14:52 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020/06/28-10:14:52 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Finished Spring Data repository scanning in 13ms. Found 0 Redis repository interfaces.
2020/06/28-10:14:52 [main] INFO  org.springframework.cloud.context.scope.GenericScope- BeanFactory id=f3f23537-6900-3ad0-88d5-cec7769c130c
2020/06/28-10:14:52 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/28-10:14:52 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/28-10:14:52 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat initialized with port(s): 8084 (http)
2020/06/28-10:14:52 [main] INFO  org.apache.catalina.core.StandardService- Starting service [Tomcat]
2020/06/28-10:14:52 [main] INFO  org.apache.catalina.core.StandardEngine- Starting Servlet engine: [Apache Tomcat/9.0.29]
2020/06/28-10:14:52 [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]- Initializing Spring embedded WebApplicationContext
2020/06/28-10:14:52 [main] INFO  org.springframework.web.context.ContextLoader- Root WebApplicationContext: initialization completed in 951 ms
2020/06/28-10:14:53 [main] WARN  com.netflix.config.sources.URLConfigurationSource- No URLs will be polled as dynamic configuration sources.
2020/06/28-10:14:53 [main] INFO  com.netflix.config.sources.URLConfigurationSource- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020/06/28-10:14:53 [main] WARN  com.netflix.config.sources.URLConfigurationSource- No URLs will be polled as dynamic configuration sources.
2020/06/28-10:14:53 [main] INFO  com.netflix.config.sources.URLConfigurationSource- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020/06/28-10:14:53 [main] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor- Initializing ExecutorService 'applicationTaskExecutor'
2020/06/28-10:14:54 [main] WARN  org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger- You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020/06/28-10:14:54 [main] WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger- Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020/06/28-10:14:54 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory- Setting initial instance status as: STARTING
2020/06/28-10:14:54 [main] INFO  com.netflix.discovery.DiscoveryClient- Initializing Eureka in region us-east-1
2020/06/28-10:14:54 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using JSON encoding codec LegacyJacksonJson
2020/06/28-10:14:54 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using JSON decoding codec LegacyJacksonJson
2020/06/28-10:14:54 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using XML encoding codec XStreamXml
2020/06/28-10:14:54 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using XML decoding codec XStreamXml
2020/06/28-10:14:55 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-10:14:55 [main] INFO  com.netflix.discovery.DiscoveryClient- Disable delta property : false
2020/06/28-10:14:55 [main] INFO  com.netflix.discovery.DiscoveryClient- Single vip registry refresh property : null
2020/06/28-10:14:55 [main] INFO  com.netflix.discovery.DiscoveryClient- Force full registry fetch : false
2020/06/28-10:14:55 [main] INFO  com.netflix.discovery.DiscoveryClient- Application is null : false
2020/06/28-10:14:55 [main] INFO  com.netflix.discovery.DiscoveryClient- Registered Applications size is zero : true
2020/06/28-10:14:55 [main] INFO  com.netflix.discovery.DiscoveryClient- Application version is -1: true
2020/06/28-10:14:55 [main] INFO  com.netflix.discovery.DiscoveryClient- Getting all instance registry info from the eureka server
2020/06/28-10:14:55 [main] INFO  com.netflix.discovery.DiscoveryClient- The response status is 200
2020/06/28-10:14:55 [main] INFO  com.netflix.discovery.DiscoveryClient- Starting heartbeat executor: renew interval is: 30
2020/06/28-10:14:55 [main] INFO  com.netflix.discovery.InstanceInfoReplicator- InstanceInfoReplicator onDemand update allowed rate per min is 4
2020/06/28-10:14:55 [main] INFO  com.netflix.discovery.DiscoveryClient- Discovery Client initialized at timestamp 1593310495368 with initial instances count: 2
2020/06/28-10:14:55 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry- Registering application RAC-ORDER-SERVICE with eureka with status UP
2020/06/28-10:14:55 [main] INFO  com.netflix.discovery.DiscoveryClient- Saw local status change event StatusChangeEvent [timestamp=1593310495371, current=UP, previous=STARTING]
2020/06/28-10:14:55 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-ORDER-SERVICE/MSI.mshome.net:rac-order-service:8084: registering service...
2020/06/28-10:14:55 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Attempting to connect to: [192.168.161.129:5672]
2020/06/28-10:14:55 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Created new connection: rabbitConnectionFactory#2e66bc32:0/SimpleConnection@793cef95 [delegate=amqp://admin@192.168.161.129:5672/, localPort= 56460]
2020/06/28-10:14:55 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-ORDER-SERVICE/MSI.mshome.net:rac-order-service:8084 - registration status: 204
2020/06/28-10:14:55 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat started on port(s): 8084 (http) with context path ''
2020/06/28-10:14:55 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration- Updating port to 8084
2020/06/28-10:14:55 [main] INFO  com.huijian.rac.RacOrderServiceApplication- Started RacOrderServiceApplication in 4.96 seconds (JVM running for 5.64)
2020/06/28-10:15:02 [http-nio-8084-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]- Initializing Spring DispatcherServlet 'dispatcherServlet'
2020/06/28-10:15:02 [http-nio-8084-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet- Initializing Servlet 'dispatcherServlet'
2020/06/28-10:15:02 [http-nio-8084-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet- Completed initialization in 5 ms
2020/06/28-10:15:02 [http-nio-8084-exec-3] INFO  com.zaxxer.hikari.HikariDataSource- HikariPool-1 - Starting...
2020/06/28-10:15:02 [http-nio-8084-exec-3] INFO  com.zaxxer.hikari.HikariDataSource- HikariPool-1 - Start completed.
2020/06/28-10:15:02 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==>  Preparing: SELECT * from sj_order where OrderNo like concat('%',?,'%') and OrderDate >= ? and OrderDate < ? and OrderState != 0 order by OrderDate desc limit ?, ? 
2020/06/28-10:15:02 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-28 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/28-10:15:03 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- <==      Total: 0
2020/06/28-10:15:03 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==>  Preparing: SELECT a.*, b.PERSONNAME audit_person_name, ph.ORGANIZATION hospital_name from (SELECT sr.*, pd.PERSONNAME collar_person_name from sj_returngoods as sr INNER JOIN pub_doctor as pd on sr.return_goods_no like concat('%',?,'%') and sr.return_goods_date >= ? and sr.return_goods_date < ? and sr.collar_person_id = pd.PERSONID ) as a left join pub_doctor as b on a.audit_person_id = b.PERSONID inner join pub_hospitalid ph on a.hospital_id = ph.HOSPITALID order by a.return_goods_date desc limit ?, ? 
2020/06/28-10:15:03 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-28 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/28-10:15:03 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- <==      Total: 1
2020/06/28-10:15:03 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==>  Preparing: select sr.*, dic.GoodsName, dic.Unit unit from sj_returngoodsdetail as sr inner join sj_goodsdictionary as dic on return_goods_no=? and dic.GoodsID = sr.goods_id 
2020/06/28-10:15:03 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==> Parameters: 90160020623BS001(String)
2020/06/28-10:15:03 [http-nio-8084-exec-5] ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]- Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'dic.Unit' in 'field list'
### The error may exist in file [C:\Users\13955\Desktop\ReagentAndConsumables\springcloud\rac-order-service\target\classes\mapper\OrderReturnDetailMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select sr.*, dic.GoodsName, dic.Unit unit from  sj_returngoodsdetail as sr inner join         sj_goodsdictionary as dic on return_goods_no=? and dic.GoodsID = sr.goods_id
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'dic.Unit' in 'field list'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'dic.Unit' in 'field list'] with root cause
java.sql.SQLSyntaxErrorException: Unknown column 'dic.Unit' in 'field list'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120) ~[mysql-connector-java-8.0.18.jar:8.0.18]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.18.jar:8.0.18]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.18.jar:8.0.18]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953) ~[mysql-connector-java-8.0.18.jar:8.0.18]
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370) ~[mysql-connector-java-8.0.18.jar:8.0.18]
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44) ~[HikariCP-3.4.1.jar:na]
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java) ~[HikariCP-3.4.1.jar:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_231]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_231]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_231]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_231]
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59) ~[mybatis-3.5.3.jar:3.5.3]
	at com.sun.proxy.$Proxy149.execute(Unknown Source) ~[na:na]
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140) ~[mybatis-3.5.3.jar:3.5.3]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_231]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_231]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_231]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_231]
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426) ~[mybatis-spring-2.0.3.jar:2.0.3]
	at com.sun.proxy.$Proxy93.selectList(Unknown Source) ~[na:na]
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:223) ~[mybatis-spring-2.0.3.jar:2.0.3]
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:93) ~[mybatis-3.5.3.jar:3.5.3]
	at com.sun.proxy.$Proxy106.inquiryByID(Unknown Source) ~[na:na]
	at com.huijian.rac.service.OrderReturnService.inquiryByID(OrderReturnService.java:34) ~[classes/:na]
	at com.huijian.rac.controller.OrderReturnController.inquiryDiscardDetail(OrderReturnController.java:66) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_231]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_231]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_231]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_231]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_231]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_231]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_231]
2020/06/28-10:16:03 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-10:17:28 [main] INFO  com.huijian.rac.RacOrderServiceApplication- No active profile set, falling back to default profiles: default
2020/06/28-10:17:28 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Multiple Spring Data modules found, entering strict repository configuration mode!
2020/06/28-10:17:28 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020/06/28-10:17:28 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Finished Spring Data repository scanning in 13ms. Found 0 Redis repository interfaces.
2020/06/28-10:17:28 [main] INFO  org.springframework.cloud.context.scope.GenericScope- BeanFactory id=f3f23537-6900-3ad0-88d5-cec7769c130c
2020/06/28-10:17:28 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/28-10:17:28 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/28-10:17:29 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat initialized with port(s): 8084 (http)
2020/06/28-10:17:29 [main] INFO  org.apache.catalina.core.StandardService- Starting service [Tomcat]
2020/06/28-10:17:29 [main] INFO  org.apache.catalina.core.StandardEngine- Starting Servlet engine: [Apache Tomcat/9.0.29]
2020/06/28-10:17:29 [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]- Initializing Spring embedded WebApplicationContext
2020/06/28-10:17:29 [main] INFO  org.springframework.web.context.ContextLoader- Root WebApplicationContext: initialization completed in 993 ms
2020/06/28-10:17:29 [main] WARN  com.netflix.config.sources.URLConfigurationSource- No URLs will be polled as dynamic configuration sources.
2020/06/28-10:17:29 [main] INFO  com.netflix.config.sources.URLConfigurationSource- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020/06/28-10:17:29 [main] WARN  com.netflix.config.sources.URLConfigurationSource- No URLs will be polled as dynamic configuration sources.
2020/06/28-10:17:29 [main] INFO  com.netflix.config.sources.URLConfigurationSource- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020/06/28-10:17:29 [main] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor- Initializing ExecutorService 'applicationTaskExecutor'
2020/06/28-10:17:30 [main] WARN  org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger- You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020/06/28-10:17:30 [main] WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger- Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020/06/28-10:17:31 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory- Setting initial instance status as: STARTING
2020/06/28-10:17:31 [main] INFO  com.netflix.discovery.DiscoveryClient- Initializing Eureka in region us-east-1
2020/06/28-10:17:31 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using JSON encoding codec LegacyJacksonJson
2020/06/28-10:17:31 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using JSON decoding codec LegacyJacksonJson
2020/06/28-10:17:31 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using XML encoding codec XStreamXml
2020/06/28-10:17:31 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using XML decoding codec XStreamXml
2020/06/28-10:17:31 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-10:17:31 [main] INFO  com.netflix.discovery.DiscoveryClient- Disable delta property : false
2020/06/28-10:17:31 [main] INFO  com.netflix.discovery.DiscoveryClient- Single vip registry refresh property : null
2020/06/28-10:17:31 [main] INFO  com.netflix.discovery.DiscoveryClient- Force full registry fetch : false
2020/06/28-10:17:31 [main] INFO  com.netflix.discovery.DiscoveryClient- Application is null : false
2020/06/28-10:17:31 [main] INFO  com.netflix.discovery.DiscoveryClient- Registered Applications size is zero : true
2020/06/28-10:17:31 [main] INFO  com.netflix.discovery.DiscoveryClient- Application version is -1: true
2020/06/28-10:17:31 [main] INFO  com.netflix.discovery.DiscoveryClient- Getting all instance registry info from the eureka server
2020/06/28-10:17:31 [main] INFO  com.netflix.discovery.DiscoveryClient- The response status is 200
2020/06/28-10:17:31 [main] INFO  com.netflix.discovery.DiscoveryClient- Starting heartbeat executor: renew interval is: 30
2020/06/28-10:17:31 [main] INFO  com.netflix.discovery.InstanceInfoReplicator- InstanceInfoReplicator onDemand update allowed rate per min is 4
2020/06/28-10:17:31 [main] INFO  com.netflix.discovery.DiscoveryClient- Discovery Client initialized at timestamp 1593310651838 with initial instances count: 2
2020/06/28-10:17:31 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry- Registering application RAC-ORDER-SERVICE with eureka with status UP
2020/06/28-10:17:31 [main] INFO  com.netflix.discovery.DiscoveryClient- Saw local status change event StatusChangeEvent [timestamp=1593310651841, current=UP, previous=STARTING]
2020/06/28-10:17:31 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-ORDER-SERVICE/MSI.mshome.net:rac-order-service:8084: registering service...
2020/06/28-10:17:31 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Attempting to connect to: [192.168.161.129:5672]
2020/06/28-10:17:31 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Created new connection: rabbitConnectionFactory#e84fb85:0/SimpleConnection@5112b7 [delegate=amqp://admin@192.168.161.129:5672/, localPort= 56631]
2020/06/28-10:17:31 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-ORDER-SERVICE/MSI.mshome.net:rac-order-service:8084 - registration status: 204
2020/06/28-10:17:31 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat started on port(s): 8084 (http) with context path ''
2020/06/28-10:17:31 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration- Updating port to 8084
2020/06/28-10:17:32 [main] INFO  com.huijian.rac.RacOrderServiceApplication- Started RacOrderServiceApplication in 5.076 seconds (JVM running for 5.827)
2020/06/28-10:17:39 [http-nio-8084-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]- Initializing Spring DispatcherServlet 'dispatcherServlet'
2020/06/28-10:17:39 [http-nio-8084-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet- Initializing Servlet 'dispatcherServlet'
2020/06/28-10:17:39 [http-nio-8084-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet- Completed initialization in 9 ms
2020/06/28-10:17:39 [http-nio-8084-exec-2] INFO  com.zaxxer.hikari.HikariDataSource- HikariPool-1 - Starting...
2020/06/28-10:17:40 [http-nio-8084-exec-2] INFO  com.zaxxer.hikari.HikariDataSource- HikariPool-1 - Start completed.
2020/06/28-10:17:40 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==>  Preparing: SELECT * from sj_order where OrderNo like concat('%',?,'%') and OrderDate >= ? and OrderDate < ? and OrderState != 0 order by OrderDate desc limit ?, ? 
2020/06/28-10:17:40 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-28 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/28-10:17:40 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- <==      Total: 0
2020/06/28-10:17:40 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==>  Preparing: SELECT a.*, b.PERSONNAME audit_person_name, ph.ORGANIZATION hospital_name from (SELECT sr.*, pd.PERSONNAME collar_person_name from sj_returngoods as sr INNER JOIN pub_doctor as pd on sr.return_goods_no like concat('%',?,'%') and sr.return_goods_date >= ? and sr.return_goods_date < ? and sr.collar_person_id = pd.PERSONID ) as a left join pub_doctor as b on a.audit_person_id = b.PERSONID inner join pub_hospitalid ph on a.hospital_id = ph.HOSPITALID order by a.return_goods_date desc limit ?, ? 
2020/06/28-10:17:40 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-28 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/28-10:17:40 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- <==      Total: 1
2020/06/28-10:17:46 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==>  Preparing: select sr.*, dic.GoodsName, su.UnitName unit from sj_returngoodsdetail as sr inner join sj_goodsdictionary as dic on return_goods_no=? and dic.GoodsID = sr.goods_id left join sj_unit su on dic.UnitID = su.UnitID 
2020/06/28-10:17:46 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==> Parameters: 90160020623BS001(String)
2020/06/28-10:17:46 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- <==      Total: 1
2020/06/28-10:18:09 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==>  Preparing: select sr.*, dic.GoodsName, su.UnitName unit from sj_returngoodsdetail as sr inner join sj_goodsdictionary as dic on return_goods_no=? and dic.GoodsID = sr.goods_id left join sj_unit su on dic.UnitID = su.UnitID 
2020/06/28-10:18:09 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==> Parameters: 90160020623BS001(String)
2020/06/28-10:18:09 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- <==      Total: 1
2020/06/28-10:18:55 [main] INFO  com.huijian.rac.RacOrderServiceApplication- No active profile set, falling back to default profiles: default
2020/06/28-10:18:55 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Multiple Spring Data modules found, entering strict repository configuration mode!
2020/06/28-10:18:55 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020/06/28-10:18:55 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Finished Spring Data repository scanning in 13ms. Found 0 Redis repository interfaces.
2020/06/28-10:18:55 [main] INFO  org.springframework.cloud.context.scope.GenericScope- BeanFactory id=f3f23537-6900-3ad0-88d5-cec7769c130c
2020/06/28-10:18:55 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/28-10:18:55 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/28-10:18:56 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat initialized with port(s): 8084 (http)
2020/06/28-10:18:56 [main] INFO  org.apache.catalina.core.StandardService- Starting service [Tomcat]
2020/06/28-10:18:56 [main] INFO  org.apache.catalina.core.StandardEngine- Starting Servlet engine: [Apache Tomcat/9.0.29]
2020/06/28-10:18:56 [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]- Initializing Spring embedded WebApplicationContext
2020/06/28-10:18:56 [main] INFO  org.springframework.web.context.ContextLoader- Root WebApplicationContext: initialization completed in 945 ms
2020/06/28-10:18:56 [main] WARN  com.netflix.config.sources.URLConfigurationSource- No URLs will be polled as dynamic configuration sources.
2020/06/28-10:18:56 [main] INFO  com.netflix.config.sources.URLConfigurationSource- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020/06/28-10:18:56 [main] WARN  com.netflix.config.sources.URLConfigurationSource- No URLs will be polled as dynamic configuration sources.
2020/06/28-10:18:56 [main] INFO  com.netflix.config.sources.URLConfigurationSource- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020/06/28-10:18:56 [main] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor- Initializing ExecutorService 'applicationTaskExecutor'
2020/06/28-10:18:57 [main] WARN  org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger- You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020/06/28-10:18:57 [main] WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger- Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020/06/28-10:18:58 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory- Setting initial instance status as: STARTING
2020/06/28-10:18:58 [main] INFO  com.netflix.discovery.DiscoveryClient- Initializing Eureka in region us-east-1
2020/06/28-10:18:58 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using JSON encoding codec LegacyJacksonJson
2020/06/28-10:18:58 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using JSON decoding codec LegacyJacksonJson
2020/06/28-10:18:58 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using XML encoding codec XStreamXml
2020/06/28-10:18:58 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using XML decoding codec XStreamXml
2020/06/28-10:18:58 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-10:18:58 [main] INFO  com.netflix.discovery.DiscoveryClient- Disable delta property : false
2020/06/28-10:18:58 [main] INFO  com.netflix.discovery.DiscoveryClient- Single vip registry refresh property : null
2020/06/28-10:18:58 [main] INFO  com.netflix.discovery.DiscoveryClient- Force full registry fetch : false
2020/06/28-10:18:58 [main] INFO  com.netflix.discovery.DiscoveryClient- Application is null : false
2020/06/28-10:18:58 [main] INFO  com.netflix.discovery.DiscoveryClient- Registered Applications size is zero : true
2020/06/28-10:18:58 [main] INFO  com.netflix.discovery.DiscoveryClient- Application version is -1: true
2020/06/28-10:18:58 [main] INFO  com.netflix.discovery.DiscoveryClient- Getting all instance registry info from the eureka server
2020/06/28-10:18:58 [main] INFO  com.netflix.discovery.DiscoveryClient- The response status is 200
2020/06/28-10:18:58 [main] INFO  com.netflix.discovery.DiscoveryClient- Starting heartbeat executor: renew interval is: 30
2020/06/28-10:18:58 [main] INFO  com.netflix.discovery.InstanceInfoReplicator- InstanceInfoReplicator onDemand update allowed rate per min is 4
2020/06/28-10:18:58 [main] INFO  com.netflix.discovery.DiscoveryClient- Discovery Client initialized at timestamp 1593310738867 with initial instances count: 2
2020/06/28-10:18:58 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry- Registering application RAC-ORDER-SERVICE with eureka with status UP
2020/06/28-10:18:58 [main] INFO  com.netflix.discovery.DiscoveryClient- Saw local status change event StatusChangeEvent [timestamp=1593310738870, current=UP, previous=STARTING]
2020/06/28-10:18:58 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-ORDER-SERVICE/MSI.mshome.net:rac-order-service:8084: registering service...
2020/06/28-10:18:58 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Attempting to connect to: [192.168.161.129:5672]
2020/06/28-10:18:58 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Created new connection: rabbitConnectionFactory#296e281a:0/SimpleConnection@b94703b [delegate=amqp://admin@192.168.161.129:5672/, localPort= 56762]
2020/06/28-10:18:58 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-ORDER-SERVICE/MSI.mshome.net:rac-order-service:8084 - registration status: 204
2020/06/28-10:18:58 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat started on port(s): 8084 (http) with context path ''
2020/06/28-10:18:58 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration- Updating port to 8084
2020/06/28-10:18:59 [main] INFO  com.huijian.rac.RacOrderServiceApplication- Started RacOrderServiceApplication in 5.042 seconds (JVM running for 5.745)
2020/06/28-10:19:13 [http-nio-8084-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]- Initializing Spring DispatcherServlet 'dispatcherServlet'
2020/06/28-10:19:13 [http-nio-8084-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet- Initializing Servlet 'dispatcherServlet'
2020/06/28-10:19:13 [http-nio-8084-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet- Completed initialization in 6 ms
2020/06/28-10:19:13 [http-nio-8084-exec-2] INFO  com.zaxxer.hikari.HikariDataSource- HikariPool-1 - Starting...
2020/06/28-10:19:13 [http-nio-8084-exec-2] INFO  com.zaxxer.hikari.HikariDataSource- HikariPool-1 - Start completed.
2020/06/28-10:19:13 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==>  Preparing: SELECT a.*, b.PERSONNAME audit_person_name, ph.ORGANIZATION hospital_name from (SELECT sr.*, pd.PERSONNAME collar_person_name from sj_returngoods as sr INNER JOIN pub_doctor as pd on sr.return_goods_no like concat('%',?,'%') and sr.return_goods_date >= ? and sr.return_goods_date < ? and sr.collar_person_id = pd.PERSONID ) as a left join pub_doctor as b on a.audit_person_id = b.PERSONID inner join pub_hospitalid ph on a.hospital_id = ph.HOSPITALID order by a.return_goods_date desc limit ?, ? 
2020/06/28-10:19:13 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-28 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/28-10:19:13 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- <==      Total: 1
2020/06/28-10:19:17 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==>  Preparing: select sr.*, dic.GoodsName, su.UnitName unit from sj_returngoodsdetail as sr inner join sj_goodsdictionary as dic on return_goods_no=? and dic.GoodsID = sr.goods_id left join sj_unit su on dic.UnitID = su.UnitID 
2020/06/28-10:19:17 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==> Parameters: 90160020623BS001(String)
2020/06/28-10:19:17 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- <==      Total: 1
2020/06/28-10:19:57 [main] INFO  com.huijian.rac.RacOrderServiceApplication- No active profile set, falling back to default profiles: default
2020/06/28-10:19:58 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Multiple Spring Data modules found, entering strict repository configuration mode!
2020/06/28-10:19:58 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020/06/28-10:19:58 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Finished Spring Data repository scanning in 13ms. Found 0 Redis repository interfaces.
2020/06/28-10:19:58 [main] INFO  org.springframework.cloud.context.scope.GenericScope- BeanFactory id=f3f23537-6900-3ad0-88d5-cec7769c130c
2020/06/28-10:19:58 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/28-10:19:58 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/28-10:19:58 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat initialized with port(s): 8084 (http)
2020/06/28-10:19:58 [main] INFO  org.apache.catalina.core.StandardService- Starting service [Tomcat]
2020/06/28-10:19:58 [main] INFO  org.apache.catalina.core.StandardEngine- Starting Servlet engine: [Apache Tomcat/9.0.29]
2020/06/28-10:19:58 [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]- Initializing Spring embedded WebApplicationContext
2020/06/28-10:19:58 [main] INFO  org.springframework.web.context.ContextLoader- Root WebApplicationContext: initialization completed in 1032 ms
2020/06/28-10:19:59 [main] WARN  com.netflix.config.sources.URLConfigurationSource- No URLs will be polled as dynamic configuration sources.
2020/06/28-10:19:59 [main] INFO  com.netflix.config.sources.URLConfigurationSource- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020/06/28-10:19:59 [main] WARN  com.netflix.config.sources.URLConfigurationSource- No URLs will be polled as dynamic configuration sources.
2020/06/28-10:19:59 [main] INFO  com.netflix.config.sources.URLConfigurationSource- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020/06/28-10:19:59 [main] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor- Initializing ExecutorService 'applicationTaskExecutor'
2020/06/28-10:20:00 [main] WARN  org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger- You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020/06/28-10:20:00 [main] WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger- Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020/06/28-10:20:00 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory- Setting initial instance status as: STARTING
2020/06/28-10:20:00 [main] INFO  com.netflix.discovery.DiscoveryClient- Initializing Eureka in region us-east-1
2020/06/28-10:20:01 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using JSON encoding codec LegacyJacksonJson
2020/06/28-10:20:01 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using JSON decoding codec LegacyJacksonJson
2020/06/28-10:20:01 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using XML encoding codec XStreamXml
2020/06/28-10:20:01 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using XML decoding codec XStreamXml
2020/06/28-10:20:01 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-10:20:01 [main] INFO  com.netflix.discovery.DiscoveryClient- Disable delta property : false
2020/06/28-10:20:01 [main] INFO  com.netflix.discovery.DiscoveryClient- Single vip registry refresh property : null
2020/06/28-10:20:01 [main] INFO  com.netflix.discovery.DiscoveryClient- Force full registry fetch : false
2020/06/28-10:20:01 [main] INFO  com.netflix.discovery.DiscoveryClient- Application is null : false
2020/06/28-10:20:01 [main] INFO  com.netflix.discovery.DiscoveryClient- Registered Applications size is zero : true
2020/06/28-10:20:01 [main] INFO  com.netflix.discovery.DiscoveryClient- Application version is -1: true
2020/06/28-10:20:01 [main] INFO  com.netflix.discovery.DiscoveryClient- Getting all instance registry info from the eureka server
2020/06/28-10:20:01 [main] INFO  com.netflix.discovery.DiscoveryClient- The response status is 200
2020/06/28-10:20:01 [main] INFO  com.netflix.discovery.DiscoveryClient- Starting heartbeat executor: renew interval is: 30
2020/06/28-10:20:01 [main] INFO  com.netflix.discovery.InstanceInfoReplicator- InstanceInfoReplicator onDemand update allowed rate per min is 4
2020/06/28-10:20:01 [main] INFO  com.netflix.discovery.DiscoveryClient- Discovery Client initialized at timestamp 1593310801617 with initial instances count: 2
2020/06/28-10:20:01 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry- Registering application RAC-ORDER-SERVICE with eureka with status UP
2020/06/28-10:20:01 [main] INFO  com.netflix.discovery.DiscoveryClient- Saw local status change event StatusChangeEvent [timestamp=1593310801619, current=UP, previous=STARTING]
2020/06/28-10:20:01 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-ORDER-SERVICE/MSI.mshome.net:rac-order-service:8084: registering service...
2020/06/28-10:20:01 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Attempting to connect to: [192.168.161.129:5672]
2020/06/28-10:20:01 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Created new connection: rabbitConnectionFactory#5e5af8e1:0/SimpleConnection@3df77dfa [delegate=amqp://admin@192.168.161.129:5672/, localPort= 56889]
2020/06/28-10:20:01 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-ORDER-SERVICE/MSI.mshome.net:rac-order-service:8084 - registration status: 204
2020/06/28-10:20:01 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat started on port(s): 8084 (http) with context path ''
2020/06/28-10:20:01 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration- Updating port to 8084
2020/06/28-10:20:01 [http-nio-8084-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]- Initializing Spring DispatcherServlet 'dispatcherServlet'
2020/06/28-10:20:01 [http-nio-8084-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet- Initializing Servlet 'dispatcherServlet'
2020/06/28-10:20:01 [http-nio-8084-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet- Completed initialization in 4 ms
2020/06/28-10:20:01 [main] INFO  com.huijian.rac.RacOrderServiceApplication- Started RacOrderServiceApplication in 5.349 seconds (JVM running for 6.077)
2020/06/28-10:20:02 [http-nio-8084-exec-2] INFO  com.zaxxer.hikari.HikariDataSource- HikariPool-1 - Starting...
2020/06/28-10:20:02 [http-nio-8084-exec-2] INFO  com.zaxxer.hikari.HikariDataSource- HikariPool-1 - Start completed.
2020/06/28-10:20:02 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==>  Preparing: SELECT * from sj_order where OrderNo like concat('%',?,'%') and OrderDate >= ? and OrderDate < ? and OrderState != 0 order by OrderDate desc limit ?, ? 
2020/06/28-10:20:02 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-28 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/28-10:20:02 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- <==      Total: 0
2020/06/28-10:20:04 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==>  Preparing: SELECT a.*, b.PERSONNAME audit_person_name, ph.ORGANIZATION hospital_name from (SELECT sr.*, pd.PERSONNAME collar_person_name from sj_returngoods as sr INNER JOIN pub_doctor as pd on sr.return_goods_no like concat('%',?,'%') and sr.return_goods_date >= ? and sr.return_goods_date < ? and sr.collar_person_id = pd.PERSONID ) as a left join pub_doctor as b on a.audit_person_id = b.PERSONID inner join pub_hospitalid ph on a.hospital_id = ph.HOSPITALID order by a.return_goods_date desc limit ?, ? 
2020/06/28-10:20:04 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-28 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/28-10:20:04 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- <==      Total: 1
2020/06/28-10:20:05 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==>  Preparing: select sr.*, dic.GoodsName, su.UnitName unit from sj_returngoodsdetail as sr inner join sj_goodsdictionary as dic on return_goods_no=? and dic.GoodsID = sr.goods_id left join sj_unit su on dic.UnitID = su.UnitID 
2020/06/28-10:20:05 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==> Parameters: 90160020623BS001(String)
2020/06/28-10:20:05 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- <==      Total: 1
2020/06/28-10:20:13 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==>  Preparing: select sr.*, dic.GoodsName, su.UnitName unit from sj_returngoodsdetail as sr inner join sj_goodsdictionary as dic on return_goods_no=? and dic.GoodsID = sr.goods_id left join sj_unit su on dic.UnitID = su.UnitID 
2020/06/28-10:20:13 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==> Parameters: 90160020623BS001(String)
2020/06/28-10:20:14 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- <==      Total: 1
2020/06/28-10:21:00 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==>  Preparing: SELECT a.*, b.PERSONNAME audit_person_name, ph.ORGANIZATION hospital_name from (SELECT sr.*, pd.PERSONNAME collar_person_name from sj_returngoods as sr INNER JOIN pub_doctor as pd on sr.return_goods_no like concat('%',?,'%') and sr.return_goods_date >= ? and sr.return_goods_date < ? and sr.collar_person_id = pd.PERSONID ) as a left join pub_doctor as b on a.audit_person_id = b.PERSONID inner join pub_hospitalid ph on a.hospital_id = ph.HOSPITALID order by a.return_goods_date desc limit ?, ? 
2020/06/28-10:21:00 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-28 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/28-10:21:00 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- <==      Total: 1
2020/06/28-10:21:03 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-10:21:22 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==>  Preparing: select sr.*, dic.GoodsName, su.UnitName unit from sj_returngoodsdetail as sr inner join sj_goodsdictionary as dic on return_goods_no=? and dic.GoodsID = sr.goods_id left join sj_unit su on dic.UnitID = su.UnitID 
2020/06/28-10:21:22 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==> Parameters: 90160020623BS001(String)
2020/06/28-10:21:22 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- <==      Total: 1
2020/06/28-10:23:12 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==>  Preparing: SELECT a.*, b.PERSONNAME audit_person_name, ph.ORGANIZATION hospital_name from (SELECT sr.*, pd.PERSONNAME collar_person_name from sj_returngoods as sr INNER JOIN pub_doctor as pd on sr.return_goods_no like concat('%',?,'%') and sr.return_goods_date >= ? and sr.return_goods_date < ? and sr.collar_person_id = pd.PERSONID ) as a left join pub_doctor as b on a.audit_person_id = b.PERSONID inner join pub_hospitalid ph on a.hospital_id = ph.HOSPITALID order by a.return_goods_date desc limit ?, ? 
2020/06/28-10:23:12 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-28 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/28-10:23:12 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- <==      Total: 1
2020/06/28-10:23:42 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==>  Preparing: SELECT a.*, b.PERSONNAME audit_person_name, ph.ORGANIZATION hospital_name from (SELECT sr.*, pd.PERSONNAME collar_person_name from sj_returngoods as sr INNER JOIN pub_doctor as pd on sr.return_goods_no like concat('%',?,'%') and sr.return_goods_date >= ? and sr.return_goods_date < ? and sr.collar_person_id = pd.PERSONID ) as a left join pub_doctor as b on a.audit_person_id = b.PERSONID inner join pub_hospitalid ph on a.hospital_id = ph.HOSPITALID order by a.return_goods_date desc limit ?, ? 
2020/06/28-10:23:42 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-28 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/28-10:23:42 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- <==      Total: 1
2020/06/28-10:23:46 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==>  Preparing: select sr.*, dic.GoodsName, su.UnitName unit from sj_returngoodsdetail as sr inner join sj_goodsdictionary as dic on return_goods_no=? and dic.GoodsID = sr.goods_id left join sj_unit su on dic.UnitID = su.UnitID 
2020/06/28-10:23:46 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==> Parameters: 90160020623BS001(String)
2020/06/28-10:23:46 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- <==      Total: 1
2020/06/28-10:24:43 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==>  Preparing: SELECT a.*, b.PERSONNAME audit_person_name, ph.ORGANIZATION hospital_name from (SELECT sr.*, pd.PERSONNAME collar_person_name from sj_returngoods as sr INNER JOIN pub_doctor as pd on sr.return_goods_no like concat('%',?,'%') and sr.return_goods_date >= ? and sr.return_goods_date < ? and sr.collar_person_id = pd.PERSONID ) as a left join pub_doctor as b on a.audit_person_id = b.PERSONID inner join pub_hospitalid ph on a.hospital_id = ph.HOSPITALID order by a.return_goods_date desc limit ?, ? 
2020/06/28-10:24:43 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-28 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/28-10:24:43 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- <==      Total: 1
2020/06/28-10:25:01 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-10:25:51 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==>  Preparing: SELECT a.*, b.PERSONNAME audit_person_name, ph.ORGANIZATION hospital_name from (SELECT sr.*, pd.PERSONNAME collar_person_name from sj_returngoods as sr INNER JOIN pub_doctor as pd on sr.return_goods_no like concat('%',?,'%') and sr.return_goods_date >= ? and sr.return_goods_date < ? and sr.collar_person_id = pd.PERSONID ) as a left join pub_doctor as b on a.audit_person_id = b.PERSONID inner join pub_hospitalid ph on a.hospital_id = ph.HOSPITALID order by a.return_goods_date desc limit ?, ? 
2020/06/28-10:25:51 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-28 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/28-10:25:51 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- <==      Total: 1
2020/06/28-10:26:03 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-10:26:50 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==>  Preparing: select sr.*, dic.GoodsName, su.UnitName unit from sj_returngoodsdetail as sr inner join sj_goodsdictionary as dic on return_goods_no=? and dic.GoodsID = sr.goods_id left join sj_unit su on dic.UnitID = su.UnitID 
2020/06/28-10:26:50 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==> Parameters: 90160020623BS001(String)
2020/06/28-10:26:50 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- <==      Total: 1
2020/06/28-10:29:04 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==>  Preparing: select sr.*, dic.GoodsName, su.UnitName unit from sj_returngoodsdetail as sr inner join sj_goodsdictionary as dic on return_goods_no=? and dic.GoodsID = sr.goods_id left join sj_unit su on dic.UnitID = su.UnitID 
2020/06/28-10:29:04 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==> Parameters: 90160020623BS001(String)
2020/06/28-10:29:04 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- <==      Total: 1
2020/06/28-10:29:28 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==>  Preparing: select sr.*, dic.GoodsName, su.UnitName unit from sj_returngoodsdetail as sr inner join sj_goodsdictionary as dic on return_goods_no=? and dic.GoodsID = sr.goods_id left join sj_unit su on dic.UnitID = su.UnitID 
2020/06/28-10:29:28 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==> Parameters: 90160020623BS001(String)
2020/06/28-10:29:28 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- <==      Total: 1
2020/06/28-10:29:42 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==>  Preparing: select sr.*, dic.GoodsName, su.UnitName unit from sj_returngoodsdetail as sr inner join sj_goodsdictionary as dic on return_goods_no=? and dic.GoodsID = sr.goods_id left join sj_unit su on dic.UnitID = su.UnitID 
2020/06/28-10:29:42 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==> Parameters: 90160020623BS001(String)
2020/06/28-10:29:42 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- <==      Total: 1
2020/06/28-10:29:44 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==>  Preparing: select sr.*, dic.GoodsName, su.UnitName unit from sj_returngoodsdetail as sr inner join sj_goodsdictionary as dic on return_goods_no=? and dic.GoodsID = sr.goods_id left join sj_unit su on dic.UnitID = su.UnitID 
2020/06/28-10:29:44 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==> Parameters: 90160020623BS001(String)
2020/06/28-10:29:44 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- <==      Total: 1
2020/06/28-10:29:47 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==>  Preparing: select sr.*, dic.GoodsName, su.UnitName unit from sj_returngoodsdetail as sr inner join sj_goodsdictionary as dic on return_goods_no=? and dic.GoodsID = sr.goods_id left join sj_unit su on dic.UnitID = su.UnitID 
2020/06/28-10:29:47 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==> Parameters: 90160020623BS001(String)
2020/06/28-10:29:47 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- <==      Total: 1
2020/06/28-10:29:52 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==>  Preparing: select sr.*, dic.GoodsName, su.UnitName unit from sj_returngoodsdetail as sr inner join sj_goodsdictionary as dic on return_goods_no=? and dic.GoodsID = sr.goods_id left join sj_unit su on dic.UnitID = su.UnitID 
2020/06/28-10:29:52 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==> Parameters: 90160020623BS001(String)
2020/06/28-10:29:52 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- <==      Total: 1
2020/06/28-10:30:01 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-10:31:03 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-10:35:01 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-10:36:03 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-10:40:01 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-10:41:03 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-10:45:01 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-10:46:03 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-10:50:01 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-10:51:03 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-10:55:01 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-10:56:03 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-11:00:01 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-11:01:03 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-11:05:01 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-11:06:03 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-11:10:01 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-11:11:03 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-11:15:01 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-11:16:03 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-11:20:01 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-11:21:03 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-11:25:01 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-11:26:03 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-11:30:01 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-11:31:03 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-11:35:01 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-11:36:03 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-11:40:01 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-11:41:03 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-11:45:01 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-11:46:03 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-11:50:01 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-11:51:03 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-11:55:01 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-11:56:03 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-12:00:01 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-12:01:03 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-12:05:01 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-12:06:03 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-12:10:01 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-12:11:03 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-12:15:01 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-12:16:03 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-12:20:01 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-12:21:03 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-12:25:01 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-12:26:03 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-12:30:01 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-12:31:03 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-12:35:01 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-12:36:03 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-12:40:01 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-12:41:03 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-12:41:04 [AMQP Connection 192.168.161.129:5672] WARN  com.rabbitmq.client.impl.ForgivingExceptionHandler- An unexpected connection driver error occured (Exception message: Connection reset)
2020/06/28-12:41:04 [AMQP Connection 192.168.161.129:5672] WARN  com.rabbitmq.client.impl.ForgivingExceptionHandler- An unexpected connection driver error occured (Exception message: Connection reset)
2020/06/28-12:41:04 [AMQP Connection 192.168.161.129:5672] ERROR org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Channel shutdown: connection error
2020/06/28-12:41:04 [AMQP Connection 192.168.161.129:5672] ERROR org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Channel shutdown: connection error
2020/06/28-12:41:04 [AMQP Connection 192.168.161.129:5672] ERROR org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Channel shutdown: connection error
2020/06/28-12:41:04 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer- Restarting Consumer@6b24ddd7: tags=[[amq.ctag-Lc-BHQm4FiSeOOETUUfJ5A]], channel=Cached Rabbit Channel: AMQChannel(amqp://admin@192.168.161.129:5672/,1), conn: Proxy@1657b017 Shared Rabbit Connection: SimpleConnection@3df77dfa [delegate=amqp://admin@192.168.161.129:5672/, localPort= 56889], acknowledgeMode=AUTO local queue size=0
2020/06/28-12:41:04 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Attempting to connect to: [192.168.161.129:5672]
2020/06/28-12:41:04 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer- Restarting Consumer@369ad7da: tags=[[amq.ctag-owLwvnkzD-Eu2FjA4uDxMQ]], channel=Cached Rabbit Channel: AMQChannel(amqp://admin@192.168.161.129:5672/,1), conn: Proxy@5ba184fc Shared Rabbit Connection: SimpleConnection@8af1c49 [delegate=amqp://admin@192.168.161.129:5672/, localPort= 53749], acknowledgeMode=AUTO local queue size=0
2020/06/28-12:41:04 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Attempting to connect to: [192.168.161.129:5672]
2020/06/28-13:30:24 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] INFO  org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer- Restarting Consumer@3feebf9c: tags=[[amq.ctag-Y2MTLdS4lQbrkLF5IGTJsA]], channel=Cached Rabbit Channel: AMQChannel(amqp://admin@192.168.161.129:5672/,2), conn: Proxy@5ba184fc Shared Rabbit Connection: null, acknowledgeMode=AUTO local queue size=0
2020/06/28-13:30:44 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] ERROR org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer- Failed to check/redeclare auto-delete queue(s).
org.springframework.amqp.AmqpConnectException: java.net.ConnectException: Connection timed out: connect
	at org.springframework.amqp.rabbit.support.RabbitExceptionTranslator.convertRabbitAccessException(RabbitExceptionTranslator.java:62) ~[spring-rabbit-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection(AbstractConnectionFactory.java:510) ~[spring-rabbit-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.amqp.rabbit.connection.CachingConnectionFactory.createConnection(CachingConnectionFactory.java:751) ~[spring-rabbit-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.amqp.rabbit.connection.CachingConnectionFactory.createBareChannel(CachingConnectionFactory.java:702) ~[spring-rabbit-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.amqp.rabbit.connection.CachingConnectionFactory.getCachedChannelProxy(CachingConnectionFactory.java:676) ~[spring-rabbit-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.amqp.rabbit.connection.CachingConnectionFactory.getChannel(CachingConnectionFactory.java:567) ~[spring-rabbit-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.amqp.rabbit.connection.CachingConnectionFactory.access$1600(CachingConnectionFactory.java:102) ~[spring-rabbit-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.amqp.rabbit.connection.CachingConnectionFactory$ChannelCachingConnectionProxy.createChannel(CachingConnectionFactory.java:1430) ~[spring-rabbit-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:2091) ~[spring-rabbit-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.amqp.rabbit.core.RabbitTemplate.execute(RabbitTemplate.java:2058) ~[spring-rabbit-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.amqp.rabbit.core.RabbitTemplate.execute(RabbitTemplate.java:2038) ~[spring-rabbit-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.amqp.rabbit.core.RabbitAdmin.getQueueInfo(RabbitAdmin.java:407) ~[spring-rabbit-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.amqp.rabbit.core.RabbitAdmin.getQueueProperties(RabbitAdmin.java:391) ~[spring-rabbit-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.attemptDeclarations(AbstractMessageListenerContainer.java:1820) ~[spring-rabbit-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.redeclareElementsIfNecessary(AbstractMessageListenerContainer.java:1801) ~[spring-rabbit-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.initialize(SimpleMessageListenerContainer.java:1337) [spring-rabbit-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1183) [spring-rabbit-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_231]
Caused by: java.net.ConnectException: Connection timed out: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method) ~[na:1.8.0_231]
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85) ~[na:1.8.0_231]
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350) ~[na:1.8.0_231]
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206) ~[na:1.8.0_231]
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188) ~[na:1.8.0_231]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[na:1.8.0_231]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[na:1.8.0_231]
	at java.net.Socket.connect(Socket.java:606) ~[na:1.8.0_231]
	at com.rabbitmq.client.impl.SocketFrameHandlerFactory.create(SocketFrameHandlerFactory.java:60) ~[amqp-client-5.7.3.jar:5.7.3]
	at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1113) ~[amqp-client-5.7.3.jar:5.7.3]
	at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1063) ~[amqp-client-5.7.3.jar:5.7.3]
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.connect(AbstractConnectionFactory.java:526) ~[spring-rabbit-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection(AbstractConnectionFactory.java:473) ~[spring-rabbit-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	... 16 common frames omitted
2020/06/28-13:30:44 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Attempting to connect to: [192.168.161.129:5672]
2020/06/28-13:30:44 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-2] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Attempting to connect to: [192.168.161.129:5672]
2020/06/28-13:30:44 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] ERROR org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer- Failed to check/redeclare auto-delete queue(s).
org.springframework.amqp.AmqpConnectException: java.net.ConnectException: Connection timed out: connect
	at org.springframework.amqp.rabbit.support.RabbitExceptionTranslator.convertRabbitAccessException(RabbitExceptionTranslator.java:62) ~[spring-rabbit-2.2.1.RELEASE.jar:2.2.1.RELEASE]
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection(AbstractConnectionFactory.java:510) ~[spring-rabbit-2.2.1.RELEASE.jar:2.2.1.RELEASE]
	at org.springframework.amqp.rabbit.connection.CachingConnectionFactory.createConnection(CachingConnectionFactory.java:751) ~[spring-rabbit-2.2.1.RELEASE.jar:2.2.1.RELEASE]
	at org.springframework.amqp.rabbit.connection.CachingConnectionFactory.createBareChannel(CachingConnectionFactory.java:702) ~[spring-rabbit-2.2.1.RELEASE.jar:2.2.1.RELEASE]
	at org.springframework.amqp.rabbit.connection.CachingConnectionFactory.getCachedChannelProxy(CachingConnectionFactory.java:676) ~[spring-rabbit-2.2.1.RELEASE.jar:2.2.1.RELEASE]
	at org.springframework.amqp.rabbit.connection.CachingConnectionFactory.getChannel(CachingConnectionFactory.java:567) ~[spring-rabbit-2.2.1.RELEASE.jar:2.2.1.RELEASE]
	at org.springframework.amqp.rabbit.connection.CachingConnectionFactory.access$1600(CachingConnectionFactory.java:102) ~[spring-rabbit-2.2.1.RELEASE.jar:2.2.1.RELEASE]
	at org.springframework.amqp.rabbit.connection.CachingConnectionFactory$ChannelCachingConnectionProxy.createChannel(CachingConnectionFactory.java:1430) ~[spring-rabbit-2.2.1.RELEASE.jar:2.2.1.RELEASE]
	at org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:2091) ~[spring-rabbit-2.2.1.RELEASE.jar:2.2.1.RELEASE]
	at org.springframework.amqp.rabbit.core.RabbitTemplate.execute(RabbitTemplate.java:2058) ~[spring-rabbit-2.2.1.RELEASE.jar:2.2.1.RELEASE]
	at org.springframework.amqp.rabbit.core.RabbitTemplate.execute(RabbitTemplate.java:2038) ~[spring-rabbit-2.2.1.RELEASE.jar:2.2.1.RELEASE]
	at org.springframework.amqp.rabbit.core.RabbitAdmin.getQueueInfo(RabbitAdmin.java:405) ~[spring-rabbit-2.2.1.RELEASE.jar:2.2.1.RELEASE]
	at org.springframework.amqp.rabbit.core.RabbitAdmin.getQueueProperties(RabbitAdmin.java:389) ~[spring-rabbit-2.2.1.RELEASE.jar:2.2.1.RELEASE]
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.attemptDeclarations(AbstractMessageListenerContainer.java:1820) ~[spring-rabbit-2.2.1.RELEASE.jar:2.2.1.RELEASE]
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.redeclareElementsIfNecessary(AbstractMessageListenerContainer.java:1801) ~[spring-rabbit-2.2.1.RELEASE.jar:2.2.1.RELEASE]
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.initialize(SimpleMessageListenerContainer.java:1337) [spring-rabbit-2.2.1.RELEASE.jar:2.2.1.RELEASE]
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1183) [spring-rabbit-2.2.1.RELEASE.jar:2.2.1.RELEASE]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_231]
Caused by: java.net.ConnectException: Connection timed out: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method) ~[na:1.8.0_231]
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85) ~[na:1.8.0_231]
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350) ~[na:1.8.0_231]
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206) ~[na:1.8.0_231]
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188) ~[na:1.8.0_231]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[na:1.8.0_231]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[na:1.8.0_231]
	at java.net.Socket.connect(Socket.java:606) ~[na:1.8.0_231]
	at com.rabbitmq.client.impl.SocketFrameHandlerFactory.create(SocketFrameHandlerFactory.java:60) ~[amqp-client-5.7.3.jar:5.7.3]
	at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1113) ~[amqp-client-5.7.3.jar:5.7.3]
	at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1063) ~[amqp-client-5.7.3.jar:5.7.3]
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.connect(AbstractConnectionFactory.java:526) ~[spring-rabbit-2.2.1.RELEASE.jar:2.2.1.RELEASE]
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection(AbstractConnectionFactory.java:473) ~[spring-rabbit-2.2.1.RELEASE.jar:2.2.1.RELEASE]
	... 16 common frames omitted
2020/06/28-13:30:44 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-2] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Created new connection: rabbitConnectionFactory#705a8dbc:2/SimpleConnection@2609cfe1 [delegate=amqp://admin@192.168.161.129:5672/, localPort= 62950]
2020/06/28-13:30:44 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Created new connection: rabbitConnectionFactory#5e5af8e1:2/SimpleConnection@30837467 [delegate=amqp://admin@192.168.161.129:5672/, localPort= 62949]
2020/06/28-13:30:52 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool- HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=49m55s477ms100µs200ns).
2020/06/28-13:34:21 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-13:35:23 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-13:38:07 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==>  Preparing: select sr.*, dic.GoodsName, su.UnitName unit from sj_returngoodsdetail as sr inner join sj_goodsdictionary as dic on return_goods_no=? and dic.GoodsID = sr.goods_id left join sj_unit su on dic.UnitID = su.UnitID 
2020/06/28-13:38:07 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==> Parameters: 90160020623BS001(String)
2020/06/28-13:38:07 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- <==      Total: 1
2020/06/28-13:39:21 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-13:40:23 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-13:40:37 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==>  Preparing: SELECT a.*, b.PERSONNAME audit_person_name, ph.ORGANIZATION hospital_name from (SELECT sr.*, pd.PERSONNAME collar_person_name from sj_returngoods as sr INNER JOIN pub_doctor as pd on sr.return_goods_no like concat('%',?,'%') and sr.return_goods_date >= ? and sr.return_goods_date < ? and sr.collar_person_id = pd.PERSONID ) as a left join pub_doctor as b on a.audit_person_id = b.PERSONID inner join pub_hospitalid ph on a.hospital_id = ph.HOSPITALID order by a.return_goods_date desc limit ?, ? 
2020/06/28-13:40:37 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-28 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/28-13:40:37 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- <==      Total: 1
2020/06/28-13:40:43 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==>  Preparing: select sr.*, dic.GoodsName, su.UnitName unit from sj_returngoodsdetail as sr inner join sj_goodsdictionary as dic on return_goods_no=? and dic.GoodsID = sr.goods_id left join sj_unit su on dic.UnitID = su.UnitID 
2020/06/28-13:40:43 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==> Parameters: 90160020623BS001(String)
2020/06/28-13:40:43 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- <==      Total: 1
2020/06/28-13:41:20 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==>  Preparing: SELECT a.*, b.PERSONNAME audit_person_name, ph.ORGANIZATION hospital_name from (SELECT sr.*, pd.PERSONNAME collar_person_name from sj_returngoods as sr INNER JOIN pub_doctor as pd on sr.return_goods_no like concat('%',?,'%') and sr.return_goods_date >= ? and sr.return_goods_date < ? and sr.collar_person_id = pd.PERSONID ) as a left join pub_doctor as b on a.audit_person_id = b.PERSONID inner join pub_hospitalid ph on a.hospital_id = ph.HOSPITALID order by a.return_goods_date desc limit ?, ? 
2020/06/28-13:41:20 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-28 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/28-13:41:20 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- <==      Total: 1
2020/06/28-13:43:52 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==>  Preparing: SELECT a.*, b.PERSONNAME audit_person_name, ph.ORGANIZATION hospital_name from (SELECT sr.*, pd.PERSONNAME collar_person_name from sj_returngoods as sr INNER JOIN pub_doctor as pd on sr.return_goods_no like concat('%',?,'%') and sr.return_goods_date >= ? and sr.return_goods_date < ? and sr.collar_person_id = pd.PERSONID ) as a left join pub_doctor as b on a.audit_person_id = b.PERSONID inner join pub_hospitalid ph on a.hospital_id = ph.HOSPITALID order by a.return_goods_date desc limit ?, ? 
2020/06/28-13:43:52 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-28 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/28-13:43:52 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- <==      Total: 1
2020/06/28-13:44:21 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-13:44:49 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==>  Preparing: SELECT a.*, b.PERSONNAME audit_person_name, ph.ORGANIZATION hospital_name from (SELECT sr.*, pd.PERSONNAME collar_person_name from sj_returngoods as sr INNER JOIN pub_doctor as pd on sr.return_goods_no like concat('%',?,'%') and sr.return_goods_date >= ? and sr.return_goods_date < ? and sr.collar_person_id = pd.PERSONID ) as a left join pub_doctor as b on a.audit_person_id = b.PERSONID inner join pub_hospitalid ph on a.hospital_id = ph.HOSPITALID order by a.return_goods_date desc limit ?, ? 
2020/06/28-13:44:49 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-28 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/28-13:44:49 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- <==      Total: 1
2020/06/28-13:45:23 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-13:47:13 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==>  Preparing: SELECT a.*, b.PERSONNAME audit_person_name, ph.ORGANIZATION hospital_name from (SELECT sr.*, pd.PERSONNAME collar_person_name from sj_returngoods as sr INNER JOIN pub_doctor as pd on sr.return_goods_no like concat('%',?,'%') and sr.return_goods_date >= ? and sr.return_goods_date < ? and sr.collar_person_id = pd.PERSONID ) as a left join pub_doctor as b on a.audit_person_id = b.PERSONID inner join pub_hospitalid ph on a.hospital_id = ph.HOSPITALID order by a.return_goods_date desc limit ?, ? 
2020/06/28-13:47:13 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-28 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/28-13:47:13 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- <==      Total: 1
2020/06/28-13:47:14 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==>  Preparing: select sr.*, dic.GoodsName, su.UnitName unit from sj_returngoodsdetail as sr inner join sj_goodsdictionary as dic on return_goods_no=? and dic.GoodsID = sr.goods_id left join sj_unit su on dic.UnitID = su.UnitID 
2020/06/28-13:47:14 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==> Parameters: 90160020623BS001(String)
2020/06/28-13:47:14 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- <==      Total: 1
2020/06/28-13:48:11 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==>  Preparing: SELECT a.*, b.PERSONNAME audit_person_name, ph.ORGANIZATION hospital_name from (SELECT sr.*, pd.PERSONNAME collar_person_name from sj_returngoods as sr INNER JOIN pub_doctor as pd on sr.return_goods_no like concat('%',?,'%') and sr.return_goods_date >= ? and sr.return_goods_date < ? and sr.collar_person_id = pd.PERSONID ) as a left join pub_doctor as b on a.audit_person_id = b.PERSONID inner join pub_hospitalid ph on a.hospital_id = ph.HOSPITALID order by a.return_goods_date desc limit ?, ? 
2020/06/28-13:48:11 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-28 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/28-13:48:11 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- <==      Total: 1
2020/06/28-13:48:12 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==>  Preparing: select sr.*, dic.GoodsName, su.UnitName unit from sj_returngoodsdetail as sr inner join sj_goodsdictionary as dic on return_goods_no=? and dic.GoodsID = sr.goods_id left join sj_unit su on dic.UnitID = su.UnitID 
2020/06/28-13:48:12 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==> Parameters: 90160020623BS001(String)
2020/06/28-13:48:12 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- <==      Total: 1
2020/06/28-13:49:21 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-13:49:38 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==>  Preparing: SELECT a.*, b.PERSONNAME audit_person_name, ph.ORGANIZATION hospital_name from (SELECT sr.*, pd.PERSONNAME collar_person_name from sj_returngoods as sr INNER JOIN pub_doctor as pd on sr.return_goods_no like concat('%',?,'%') and sr.return_goods_date >= ? and sr.return_goods_date < ? and sr.collar_person_id = pd.PERSONID ) as a left join pub_doctor as b on a.audit_person_id = b.PERSONID inner join pub_hospitalid ph on a.hospital_id = ph.HOSPITALID order by a.return_goods_date desc limit ?, ? 
2020/06/28-13:49:38 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-28 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/28-13:49:38 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- <==      Total: 1
2020/06/28-13:50:23 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-13:54:21 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-13:55:23 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-13:57:26 [main] INFO  com.huijian.rac.RacOrderServiceApplication- No active profile set, falling back to default profiles: default
2020/06/28-13:57:27 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Multiple Spring Data modules found, entering strict repository configuration mode!
2020/06/28-13:57:27 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020/06/28-13:57:27 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Finished Spring Data repository scanning in 14ms. Found 0 Redis repository interfaces.
2020/06/28-13:57:27 [main] INFO  org.springframework.cloud.context.scope.GenericScope- BeanFactory id=f3f23537-6900-3ad0-88d5-cec7769c130c
2020/06/28-13:57:27 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/28-13:57:27 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/28-13:57:27 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat initialized with port(s): 8084 (http)
2020/06/28-13:57:27 [main] INFO  org.apache.catalina.core.StandardService- Starting service [Tomcat]
2020/06/28-13:57:27 [main] INFO  org.apache.catalina.core.StandardEngine- Starting Servlet engine: [Apache Tomcat/9.0.29]
2020/06/28-13:57:27 [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]- Initializing Spring embedded WebApplicationContext
2020/06/28-13:57:27 [main] INFO  org.springframework.web.context.ContextLoader- Root WebApplicationContext: initialization completed in 1336 ms
2020/06/28-13:57:28 [main] WARN  com.netflix.config.sources.URLConfigurationSource- No URLs will be polled as dynamic configuration sources.
2020/06/28-13:57:28 [main] INFO  com.netflix.config.sources.URLConfigurationSource- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020/06/28-13:57:28 [main] WARN  com.netflix.config.sources.URLConfigurationSource- No URLs will be polled as dynamic configuration sources.
2020/06/28-13:57:28 [main] INFO  com.netflix.config.sources.URLConfigurationSource- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020/06/28-13:57:28 [main] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor- Initializing ExecutorService 'applicationTaskExecutor'
2020/06/28-13:57:29 [main] WARN  org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger- You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020/06/28-13:57:29 [main] WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger- Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020/06/28-13:57:29 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory- Setting initial instance status as: STARTING
2020/06/28-13:57:29 [main] INFO  com.netflix.discovery.DiscoveryClient- Initializing Eureka in region us-east-1
2020/06/28-13:57:30 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using JSON encoding codec LegacyJacksonJson
2020/06/28-13:57:30 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using JSON decoding codec LegacyJacksonJson
2020/06/28-13:57:30 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using XML encoding codec XStreamXml
2020/06/28-13:57:30 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using XML decoding codec XStreamXml
2020/06/28-13:57:30 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-13:57:30 [main] INFO  com.netflix.discovery.DiscoveryClient- Disable delta property : false
2020/06/28-13:57:30 [main] INFO  com.netflix.discovery.DiscoveryClient- Single vip registry refresh property : null
2020/06/28-13:57:30 [main] INFO  com.netflix.discovery.DiscoveryClient- Force full registry fetch : false
2020/06/28-13:57:30 [main] INFO  com.netflix.discovery.DiscoveryClient- Application is null : false
2020/06/28-13:57:30 [main] INFO  com.netflix.discovery.DiscoveryClient- Registered Applications size is zero : true
2020/06/28-13:57:30 [main] INFO  com.netflix.discovery.DiscoveryClient- Application version is -1: true
2020/06/28-13:57:30 [main] INFO  com.netflix.discovery.DiscoveryClient- Getting all instance registry info from the eureka server
2020/06/28-13:57:30 [main] INFO  com.netflix.discovery.DiscoveryClient- The response status is 200
2020/06/28-13:57:30 [main] INFO  com.netflix.discovery.DiscoveryClient- Starting heartbeat executor: renew interval is: 30
2020/06/28-13:57:30 [main] INFO  com.netflix.discovery.InstanceInfoReplicator- InstanceInfoReplicator onDemand update allowed rate per min is 4
2020/06/28-13:57:30 [main] INFO  com.netflix.discovery.DiscoveryClient- Discovery Client initialized at timestamp 1593323850572 with initial instances count: 2
2020/06/28-13:57:30 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry- Registering application RAC-ORDER-SERVICE with eureka with status UP
2020/06/28-13:57:30 [main] INFO  com.netflix.discovery.DiscoveryClient- Saw local status change event StatusChangeEvent [timestamp=1593323850574, current=UP, previous=STARTING]
2020/06/28-13:57:30 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-ORDER-SERVICE/MSI.mshome.net:rac-order-service:8084: registering service...
2020/06/28-13:57:30 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Attempting to connect to: [192.168.161.129:5672]
2020/06/28-13:57:30 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Created new connection: rabbitConnectionFactory#5679e96b:0/SimpleConnection@2342f1ff [delegate=amqp://admin@192.168.161.129:5672/, localPort= 63763]
2020/06/28-13:57:30 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-ORDER-SERVICE/MSI.mshome.net:rac-order-service:8084 - registration status: 204
2020/06/28-13:57:30 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat started on port(s): 8084 (http) with context path ''
2020/06/28-13:57:30 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration- Updating port to 8084
2020/06/28-13:57:30 [main] INFO  com.huijian.rac.RacOrderServiceApplication- Started RacOrderServiceApplication in 5.543 seconds (JVM running for 6.34)
2020/06/28-13:57:57 [http-nio-8084-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]- Initializing Spring DispatcherServlet 'dispatcherServlet'
2020/06/28-13:57:57 [http-nio-8084-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet- Initializing Servlet 'dispatcherServlet'
2020/06/28-13:57:57 [http-nio-8084-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet- Completed initialization in 4 ms
2020/06/28-13:57:57 [http-nio-8084-exec-1] INFO  com.zaxxer.hikari.HikariDataSource- HikariPool-1 - Starting...
2020/06/28-13:57:57 [http-nio-8084-exec-1] INFO  com.zaxxer.hikari.HikariDataSource- HikariPool-1 - Start completed.
2020/06/28-13:57:57 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==>  Preparing: SELECT a.*, b.PERSONNAME audit_person_name, ph.ORGANIZATION hospital_name from (SELECT sr.*, pd.PERSONNAME collar_person_name from sj_returngoods as sr INNER JOIN pub_doctor as pd on sr.return_goods_no like concat('%',?,'%') and sr.return_goods_date >= ? and sr.return_goods_date < ? and sr.collar_person_id = pd.PERSONID ) as a left join pub_doctor as b on a.audit_person_id = b.PERSONID inner join pub_hospitalid ph on a.hospital_id = ph.HOSPITALID order by a.return_goods_date desc limit ?, ? 
2020/06/28-13:57:57 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-28 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/28-13:57:58 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderReturnMapper.updateReturnGoodsState- ==>  Preparing: update sj_returngoods set return_goods_state = 1 where return_goods_no = ? 
2020/06/28-13:57:58 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderReturnMapper.updateReturnGoodsState- ==> Parameters: 90160020623BS001(String)
2020/06/28-13:57:58 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- <==      Total: 1
2020/06/28-13:57:58 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderReturnMapper.updateReturnGoodsState- <==    Updates: 1
2020/06/28-13:58:02 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==>  Preparing: SELECT a.*, b.PERSONNAME audit_person_name, ph.ORGANIZATION hospital_name from (SELECT sr.*, pd.PERSONNAME collar_person_name from sj_returngoods as sr INNER JOIN pub_doctor as pd on sr.return_goods_no like concat('%',?,'%') and sr.return_goods_date >= ? and sr.return_goods_date < ? and sr.collar_person_id = pd.PERSONID ) as a left join pub_doctor as b on a.audit_person_id = b.PERSONID inner join pub_hospitalid ph on a.hospital_id = ph.HOSPITALID order by a.return_goods_date desc limit ?, ? 
2020/06/28-13:58:02 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-28 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/28-13:58:02 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- <==      Total: 1
2020/06/28-13:58:11 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==>  Preparing: SELECT a.*, b.PERSONNAME audit_person_name, ph.ORGANIZATION hospital_name from (SELECT sr.*, pd.PERSONNAME collar_person_name from sj_returngoods as sr INNER JOIN pub_doctor as pd on sr.return_goods_no like concat('%',?,'%') and sr.return_goods_date >= ? and sr.return_goods_date < ? and sr.collar_person_id = pd.PERSONID ) as a left join pub_doctor as b on a.audit_person_id = b.PERSONID inner join pub_hospitalid ph on a.hospital_id = ph.HOSPITALID order by a.return_goods_date desc limit ?, ? 
2020/06/28-13:58:11 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-28 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/28-13:58:11 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- <==      Total: 1
2020/06/28-13:58:31 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==>  Preparing: SELECT a.*, b.PERSONNAME audit_person_name, ph.ORGANIZATION hospital_name from (SELECT sr.*, pd.PERSONNAME collar_person_name from sj_returngoods as sr INNER JOIN pub_doctor as pd on sr.return_goods_no like concat('%',?,'%') and sr.return_goods_date >= ? and sr.return_goods_date < ? and sr.collar_person_id = pd.PERSONID ) as a left join pub_doctor as b on a.audit_person_id = b.PERSONID inner join pub_hospitalid ph on a.hospital_id = ph.HOSPITALID order by a.return_goods_date desc limit ?, ? 
2020/06/28-13:58:31 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-28 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/28-13:58:31 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- <==      Total: 1
2020/06/28-13:58:33 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderReturnMapper.updateReturnGoodsState- ==>  Preparing: update sj_returngoods set return_goods_state = 1 where return_goods_no = ? 
2020/06/28-13:58:33 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderReturnMapper.updateReturnGoodsState- ==> Parameters: 90160020623BS001(String)
2020/06/28-13:58:33 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderReturnMapper.updateReturnGoodsState- <==    Updates: 1
2020/06/28-13:58:33 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==>  Preparing: SELECT a.*, b.PERSONNAME audit_person_name, ph.ORGANIZATION hospital_name from (SELECT sr.*, pd.PERSONNAME collar_person_name from sj_returngoods as sr INNER JOIN pub_doctor as pd on sr.return_goods_no like concat('%',?,'%') and sr.return_goods_date >= ? and sr.return_goods_date < ? and sr.collar_person_id = pd.PERSONID ) as a left join pub_doctor as b on a.audit_person_id = b.PERSONID inner join pub_hospitalid ph on a.hospital_id = ph.HOSPITALID order by a.return_goods_date desc limit ?, ? 
2020/06/28-13:58:33 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-28 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/28-13:58:33 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- <==      Total: 1
2020/06/28-14:00:23 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-14:02:30 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-14:04:10 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==>  Preparing: select sr.*, dic.GoodsName, su.UnitName unit from sj_returngoodsdetail as sr inner join sj_goodsdictionary as dic on return_goods_no=? and dic.GoodsID = sr.goods_id left join sj_unit su on dic.UnitID = su.UnitID 
2020/06/28-14:04:10 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==> Parameters: 90160020623BS001(String)
2020/06/28-14:04:10 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- <==      Total: 1
2020/06/28-14:04:14 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==>  Preparing: select sr.*, dic.GoodsName, su.UnitName unit from sj_returngoodsdetail as sr inner join sj_goodsdictionary as dic on return_goods_no=? and dic.GoodsID = sr.goods_id left join sj_unit su on dic.UnitID = su.UnitID 
2020/06/28-14:04:14 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==> Parameters: 90160020623BS001(String)
2020/06/28-14:04:14 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- <==      Total: 1
2020/06/28-14:04:18 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==>  Preparing: select sr.*, dic.GoodsName, su.UnitName unit from sj_returngoodsdetail as sr inner join sj_goodsdictionary as dic on return_goods_no=? and dic.GoodsID = sr.goods_id left join sj_unit su on dic.UnitID = su.UnitID 
2020/06/28-14:04:18 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==> Parameters: 90160020623BS001(String)
2020/06/28-14:04:18 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- <==      Total: 1
2020/06/28-14:04:19 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==>  Preparing: select sr.*, dic.GoodsName, su.UnitName unit from sj_returngoodsdetail as sr inner join sj_goodsdictionary as dic on return_goods_no=? and dic.GoodsID = sr.goods_id left join sj_unit su on dic.UnitID = su.UnitID 
2020/06/28-14:04:19 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==> Parameters: 90160020623BS001(String)
2020/06/28-14:04:19 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- <==      Total: 1
2020/06/28-14:04:22 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==>  Preparing: SELECT * from sj_order where OrderNo like concat('%',?,'%') and OrderDate >= ? and OrderDate < ? and OrderState != 0 order by OrderDate desc limit ?, ? 
2020/06/28-14:04:22 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-28 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/28-14:04:22 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- <==      Total: 0
2020/06/28-14:04:22 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==>  Preparing: SELECT a.*, b.PERSONNAME audit_person_name, ph.ORGANIZATION hospital_name from (SELECT sr.*, pd.PERSONNAME collar_person_name from sj_returngoods as sr INNER JOIN pub_doctor as pd on sr.return_goods_no like concat('%',?,'%') and sr.return_goods_date >= ? and sr.return_goods_date < ? and sr.collar_person_id = pd.PERSONID ) as a left join pub_doctor as b on a.audit_person_id = b.PERSONID inner join pub_hospitalid ph on a.hospital_id = ph.HOSPITALID order by a.return_goods_date desc limit ?, ? 
2020/06/28-14:04:22 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-28 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/28-14:04:22 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- <==      Total: 1
2020/06/28-14:04:23 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==>  Preparing: select sr.*, dic.GoodsName, su.UnitName unit from sj_returngoodsdetail as sr inner join sj_goodsdictionary as dic on return_goods_no=? and dic.GoodsID = sr.goods_id left join sj_unit su on dic.UnitID = su.UnitID 
2020/06/28-14:04:23 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==> Parameters: 90160020623BS001(String)
2020/06/28-14:04:23 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- <==      Total: 1
2020/06/28-14:04:25 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==>  Preparing: select sr.*, dic.GoodsName, su.UnitName unit from sj_returngoodsdetail as sr inner join sj_goodsdictionary as dic on return_goods_no=? and dic.GoodsID = sr.goods_id left join sj_unit su on dic.UnitID = su.UnitID 
2020/06/28-14:04:25 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==> Parameters: 90160020623BS001(String)
2020/06/28-14:04:25 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- <==      Total: 1
2020/06/28-14:05:19 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==>  Preparing: select sr.*, dic.GoodsName, su.UnitName unit from sj_returngoodsdetail as sr inner join sj_goodsdictionary as dic on return_goods_no=? and dic.GoodsID = sr.goods_id left join sj_unit su on dic.UnitID = su.UnitID 
2020/06/28-14:05:19 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==> Parameters: 90160020623BS001(String)
2020/06/28-14:05:19 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- <==      Total: 1
2020/06/28-14:05:19 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==>  Preparing: select sr.*, dic.GoodsName, su.UnitName unit from sj_returngoodsdetail as sr inner join sj_goodsdictionary as dic on return_goods_no=? and dic.GoodsID = sr.goods_id left join sj_unit su on dic.UnitID = su.UnitID 
2020/06/28-14:05:19 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==> Parameters: 90160020623BS001(String)
2020/06/28-14:05:19 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- <==      Total: 1
2020/06/28-14:05:23 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-14:05:59 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==>  Preparing: SELECT a.*, b.PERSONNAME audit_person_name, ph.ORGANIZATION hospital_name from (SELECT sr.*, pd.PERSONNAME collar_person_name from sj_returngoods as sr INNER JOIN pub_doctor as pd on sr.return_goods_no like concat('%',?,'%') and sr.return_goods_date >= ? and sr.return_goods_date < ? and sr.collar_person_id = pd.PERSONID ) as a left join pub_doctor as b on a.audit_person_id = b.PERSONID inner join pub_hospitalid ph on a.hospital_id = ph.HOSPITALID order by a.return_goods_date desc limit ?, ? 
2020/06/28-14:05:59 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-28 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/28-14:05:59 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- <==      Total: 1
2020/06/28-14:06:00 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==>  Preparing: select sr.*, dic.GoodsName, su.UnitName unit from sj_returngoodsdetail as sr inner join sj_goodsdictionary as dic on return_goods_no=? and dic.GoodsID = sr.goods_id left join sj_unit su on dic.UnitID = su.UnitID 
2020/06/28-14:06:00 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==> Parameters: 90160020623BS001(String)
2020/06/28-14:06:00 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- <==      Total: 1
2020/06/28-14:06:12 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==>  Preparing: select sr.*, dic.GoodsName, su.UnitName unit from sj_returngoodsdetail as sr inner join sj_goodsdictionary as dic on return_goods_no=? and dic.GoodsID = sr.goods_id left join sj_unit su on dic.UnitID = su.UnitID 
2020/06/28-14:06:12 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==> Parameters: 90160020623BS001(String)
2020/06/28-14:06:12 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- <==      Total: 1
2020/06/28-14:07:01 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==>  Preparing: select sr.*, dic.GoodsName, su.UnitName unit from sj_returngoodsdetail as sr inner join sj_goodsdictionary as dic on return_goods_no=? and dic.GoodsID = sr.goods_id left join sj_unit su on dic.UnitID = su.UnitID 
2020/06/28-14:07:01 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==> Parameters: 90160020623BS001(String)
2020/06/28-14:07:01 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- <==      Total: 1
2020/06/28-14:07:30 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-14:10:23 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-14:12:30 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-14:14:18 [main] INFO  com.huijian.rac.RacOrderServiceApplication- No active profile set, falling back to default profiles: default
2020/06/28-14:14:18 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Multiple Spring Data modules found, entering strict repository configuration mode!
2020/06/28-14:14:18 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020/06/28-14:14:18 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Finished Spring Data repository scanning in 13ms. Found 0 Redis repository interfaces.
2020/06/28-14:14:18 [main] INFO  org.springframework.cloud.context.scope.GenericScope- BeanFactory id=f3f23537-6900-3ad0-88d5-cec7769c130c
2020/06/28-14:14:18 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/28-14:14:18 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/28-14:14:18 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat initialized with port(s): 8084 (http)
2020/06/28-14:14:18 [main] INFO  org.apache.catalina.core.StandardService- Starting service [Tomcat]
2020/06/28-14:14:18 [main] INFO  org.apache.catalina.core.StandardEngine- Starting Servlet engine: [Apache Tomcat/9.0.29]
2020/06/28-14:14:19 [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]- Initializing Spring embedded WebApplicationContext
2020/06/28-14:14:19 [main] INFO  org.springframework.web.context.ContextLoader- Root WebApplicationContext: initialization completed in 960 ms
2020/06/28-14:14:19 [main] WARN  com.netflix.config.sources.URLConfigurationSource- No URLs will be polled as dynamic configuration sources.
2020/06/28-14:14:19 [main] INFO  com.netflix.config.sources.URLConfigurationSource- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020/06/28-14:14:19 [main] WARN  com.netflix.config.sources.URLConfigurationSource- No URLs will be polled as dynamic configuration sources.
2020/06/28-14:14:19 [main] INFO  com.netflix.config.sources.URLConfigurationSource- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020/06/28-14:14:19 [main] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor- Initializing ExecutorService 'applicationTaskExecutor'
2020/06/28-14:14:20 [main] WARN  org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger- You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020/06/28-14:14:20 [main] WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger- Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020/06/28-14:14:20 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory- Setting initial instance status as: STARTING
2020/06/28-14:14:20 [main] INFO  com.netflix.discovery.DiscoveryClient- Initializing Eureka in region us-east-1
2020/06/28-14:14:21 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using JSON encoding codec LegacyJacksonJson
2020/06/28-14:14:21 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using JSON decoding codec LegacyJacksonJson
2020/06/28-14:14:21 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using XML encoding codec XStreamXml
2020/06/28-14:14:21 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using XML decoding codec XStreamXml
2020/06/28-14:14:21 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-14:14:21 [main] INFO  com.netflix.discovery.DiscoveryClient- Disable delta property : false
2020/06/28-14:14:21 [main] INFO  com.netflix.discovery.DiscoveryClient- Single vip registry refresh property : null
2020/06/28-14:14:21 [main] INFO  com.netflix.discovery.DiscoveryClient- Force full registry fetch : false
2020/06/28-14:14:21 [main] INFO  com.netflix.discovery.DiscoveryClient- Application is null : false
2020/06/28-14:14:21 [main] INFO  com.netflix.discovery.DiscoveryClient- Registered Applications size is zero : true
2020/06/28-14:14:21 [main] INFO  com.netflix.discovery.DiscoveryClient- Application version is -1: true
2020/06/28-14:14:21 [main] INFO  com.netflix.discovery.DiscoveryClient- Getting all instance registry info from the eureka server
2020/06/28-14:14:21 [main] INFO  com.netflix.discovery.DiscoveryClient- The response status is 200
2020/06/28-14:14:21 [main] INFO  com.netflix.discovery.DiscoveryClient- Starting heartbeat executor: renew interval is: 30
2020/06/28-14:14:21 [main] INFO  com.netflix.discovery.InstanceInfoReplicator- InstanceInfoReplicator onDemand update allowed rate per min is 4
2020/06/28-14:14:21 [main] INFO  com.netflix.discovery.DiscoveryClient- Discovery Client initialized at timestamp 1593324861788 with initial instances count: 2
2020/06/28-14:14:21 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry- Registering application RAC-ORDER-SERVICE with eureka with status UP
2020/06/28-14:14:21 [main] INFO  com.netflix.discovery.DiscoveryClient- Saw local status change event StatusChangeEvent [timestamp=1593324861790, current=UP, previous=STARTING]
2020/06/28-14:14:21 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-ORDER-SERVICE/MSI.mshome.net:rac-order-service:8084: registering service...
2020/06/28-14:14:21 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Attempting to connect to: [192.168.161.129:5672]
2020/06/28-14:14:21 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Created new connection: rabbitConnectionFactory#7f353d99:0/SimpleConnection@2ef041bb [delegate=amqp://admin@192.168.161.129:5672/, localPort= 64579]
2020/06/28-14:14:21 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-ORDER-SERVICE/MSI.mshome.net:rac-order-service:8084 - registration status: 204
2020/06/28-14:14:21 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat started on port(s): 8084 (http) with context path ''
2020/06/28-14:14:21 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration- Updating port to 8084
2020/06/28-14:14:22 [main] INFO  com.huijian.rac.RacOrderServiceApplication- Started RacOrderServiceApplication in 5.191 seconds (JVM running for 5.984)
2020/06/28-14:14:24 [http-nio-8084-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]- Initializing Spring DispatcherServlet 'dispatcherServlet'
2020/06/28-14:14:24 [http-nio-8084-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet- Initializing Servlet 'dispatcherServlet'
2020/06/28-14:14:24 [http-nio-8084-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet- Completed initialization in 6 ms
2020/06/28-14:14:24 [http-nio-8084-exec-2] INFO  com.zaxxer.hikari.HikariDataSource- HikariPool-1 - Starting...
2020/06/28-14:14:25 [http-nio-8084-exec-2] INFO  com.zaxxer.hikari.HikariDataSource- HikariPool-1 - Start completed.
2020/06/28-14:14:25 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==>  Preparing: SELECT * from sj_order where OrderNo like concat('%',?,'%') and OrderDate >= ? and OrderDate < ? and OrderState != 0 order by OrderDate desc limit ?, ? 
2020/06/28-14:14:25 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-28 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/28-14:14:25 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==>  Preparing: SELECT a.*, b.PERSONNAME audit_person_name, ph.ORGANIZATION hospital_name from (SELECT sr.*, pd.PERSONNAME collar_person_name from sj_returngoods as sr INNER JOIN pub_doctor as pd on sr.return_goods_no like concat('%',?,'%') and sr.return_goods_date >= ? and sr.return_goods_date < ? and sr.collar_person_id = pd.PERSONID ) as a left join pub_doctor as b on a.audit_person_id = b.PERSONID inner join pub_hospitalid ph on a.hospital_id = ph.HOSPITALID order by a.return_goods_date desc limit ?, ? 
2020/06/28-14:14:25 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-28 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/28-14:14:25 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- <==      Total: 0
2020/06/28-14:14:25 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- <==      Total: 1
2020/06/28-14:14:26 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==>  Preparing: select sr.*, dic.GoodsName, su.UnitName unit from sj_returngoodsdetail as sr inner join sj_goodsdictionary as dic on return_goods_no=? and dic.GoodsID = sr.goods_id left join sj_unit su on dic.UnitID = su.UnitID 
2020/06/28-14:14:26 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==> Parameters: 90160020623BS001(String)
2020/06/28-14:14:26 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- <==      Total: 1
2020/06/28-14:14:29 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==>  Preparing: select sr.*, dic.GoodsName, su.UnitName unit from sj_returngoodsdetail as sr inner join sj_goodsdictionary as dic on return_goods_no=? and dic.GoodsID = sr.goods_id left join sj_unit su on dic.UnitID = su.UnitID 
2020/06/28-14:14:29 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==> Parameters: 90160020623BS001(String)
2020/06/28-14:14:29 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- <==      Total: 1
2020/06/28-14:14:33 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==>  Preparing: SELECT * from sj_order where OrderNo like concat('%',?,'%') and OrderDate >= ? and OrderDate < ? and OrderState != 0 order by OrderDate desc limit ?, ? 
2020/06/28-14:14:33 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-28 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/28-14:14:33 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- <==      Total: 0
2020/06/28-14:14:34 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==>  Preparing: SELECT a.*, b.PERSONNAME audit_person_name, ph.ORGANIZATION hospital_name from (SELECT sr.*, pd.PERSONNAME collar_person_name from sj_returngoods as sr INNER JOIN pub_doctor as pd on sr.return_goods_no like concat('%',?,'%') and sr.return_goods_date >= ? and sr.return_goods_date < ? and sr.collar_person_id = pd.PERSONID ) as a left join pub_doctor as b on a.audit_person_id = b.PERSONID inner join pub_hospitalid ph on a.hospital_id = ph.HOSPITALID order by a.return_goods_date desc limit ?, ? 
2020/06/28-14:14:34 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-28 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/28-14:14:34 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- <==      Total: 1
2020/06/28-14:14:36 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==>  Preparing: select sr.*, dic.GoodsName, su.UnitName unit from sj_returngoodsdetail as sr inner join sj_goodsdictionary as dic on return_goods_no=? and dic.GoodsID = sr.goods_id left join sj_unit su on dic.UnitID = su.UnitID 
2020/06/28-14:14:36 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==> Parameters: 90160020623BS001(String)
2020/06/28-14:14:36 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- <==      Total: 1
2020/06/28-14:15:23 [main] INFO  com.huijian.rac.RacOrderServiceApplication- No active profile set, falling back to default profiles: default
2020/06/28-14:15:23 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Multiple Spring Data modules found, entering strict repository configuration mode!
2020/06/28-14:15:23 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020/06/28-14:15:23 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Finished Spring Data repository scanning in 24ms. Found 0 Redis repository interfaces.
2020/06/28-14:15:24 [main] INFO  org.springframework.cloud.context.scope.GenericScope- BeanFactory id=f3f23537-6900-3ad0-88d5-cec7769c130c
2020/06/28-14:15:24 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/28-14:15:24 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/28-14:15:24 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat initialized with port(s): 8084 (http)
2020/06/28-14:15:24 [main] INFO  org.apache.catalina.core.StandardService- Starting service [Tomcat]
2020/06/28-14:15:24 [main] INFO  org.apache.catalina.core.StandardEngine- Starting Servlet engine: [Apache Tomcat/9.0.29]
2020/06/28-14:15:24 [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]- Initializing Spring embedded WebApplicationContext
2020/06/28-14:15:24 [main] INFO  org.springframework.web.context.ContextLoader- Root WebApplicationContext: initialization completed in 1181 ms
2020/06/28-14:15:24 [main] WARN  com.netflix.config.sources.URLConfigurationSource- No URLs will be polled as dynamic configuration sources.
2020/06/28-14:15:24 [main] INFO  com.netflix.config.sources.URLConfigurationSource- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020/06/28-14:15:24 [main] WARN  com.netflix.config.sources.URLConfigurationSource- No URLs will be polled as dynamic configuration sources.
2020/06/28-14:15:24 [main] INFO  com.netflix.config.sources.URLConfigurationSource- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020/06/28-14:15:25 [main] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor- Initializing ExecutorService 'applicationTaskExecutor'
2020/06/28-14:15:26 [main] WARN  org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger- You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020/06/28-14:15:26 [main] WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger- Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020/06/28-14:15:26 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory- Setting initial instance status as: STARTING
2020/06/28-14:15:27 [main] INFO  com.netflix.discovery.DiscoveryClient- Initializing Eureka in region us-east-1
2020/06/28-14:15:27 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using JSON encoding codec LegacyJacksonJson
2020/06/28-14:15:27 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using JSON decoding codec LegacyJacksonJson
2020/06/28-14:15:27 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using XML encoding codec XStreamXml
2020/06/28-14:15:27 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using XML decoding codec XStreamXml
2020/06/28-14:15:27 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-14:15:27 [main] INFO  com.netflix.discovery.DiscoveryClient- Disable delta property : false
2020/06/28-14:15:27 [main] INFO  com.netflix.discovery.DiscoveryClient- Single vip registry refresh property : null
2020/06/28-14:15:27 [main] INFO  com.netflix.discovery.DiscoveryClient- Force full registry fetch : false
2020/06/28-14:15:27 [main] INFO  com.netflix.discovery.DiscoveryClient- Application is null : false
2020/06/28-14:15:27 [main] INFO  com.netflix.discovery.DiscoveryClient- Registered Applications size is zero : true
2020/06/28-14:15:27 [main] INFO  com.netflix.discovery.DiscoveryClient- Application version is -1: true
2020/06/28-14:15:27 [main] INFO  com.netflix.discovery.DiscoveryClient- Getting all instance registry info from the eureka server
2020/06/28-14:15:28 [main] INFO  com.netflix.discovery.DiscoveryClient- The response status is 200
2020/06/28-14:15:28 [main] INFO  com.netflix.discovery.DiscoveryClient- Starting heartbeat executor: renew interval is: 30
2020/06/28-14:15:28 [main] INFO  com.netflix.discovery.InstanceInfoReplicator- InstanceInfoReplicator onDemand update allowed rate per min is 4
2020/06/28-14:15:28 [main] INFO  com.netflix.discovery.DiscoveryClient- Discovery Client initialized at timestamp 1593324928103 with initial instances count: 2
2020/06/28-14:15:28 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry- Registering application RAC-ORDER-SERVICE with eureka with status UP
2020/06/28-14:15:28 [main] INFO  com.netflix.discovery.DiscoveryClient- Saw local status change event StatusChangeEvent [timestamp=1593324928107, current=UP, previous=STARTING]
2020/06/28-14:15:28 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-ORDER-SERVICE/MSI.mshome.net:rac-order-service:8084: registering service...
2020/06/28-14:15:28 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Attempting to connect to: [192.168.161.129:5672]
2020/06/28-14:15:28 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Created new connection: rabbitConnectionFactory#623dcf2a:0/SimpleConnection@4efb13f1 [delegate=amqp://admin@192.168.161.129:5672/, localPort= 64707]
2020/06/28-14:15:28 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-ORDER-SERVICE/MSI.mshome.net:rac-order-service:8084 - registration status: 204
2020/06/28-14:15:28 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat started on port(s): 8084 (http) with context path ''
2020/06/28-14:15:28 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration- Updating port to 8084
2020/06/28-14:15:28 [main] INFO  com.huijian.rac.RacOrderServiceApplication- Started RacOrderServiceApplication in 6.725 seconds (JVM running for 7.454)
2020/06/28-14:15:29 [main] INFO  com.huijian.rac.RacStockServiceApplication- No active profile set, falling back to default profiles: default
2020/06/28-14:15:30 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Multiple Spring Data modules found, entering strict repository configuration mode!
2020/06/28-14:15:30 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Bootstrapping Spring Data repositories in DEFAULT mode.
2020/06/28-14:15:30 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Finished Spring Data repository scanning in 32ms. Found 0 repository interfaces.
2020/06/28-14:15:30 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'deliveryUnitMapper' and 'com.huijian.rac.mapper.DeliveryUnitMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-14:15:30 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'departMapper' and 'com.huijian.rac.mapper.DepartMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-14:15:30 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'discardDetailMapper' and 'com.huijian.rac.mapper.DiscardDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-14:15:30 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'discardMapper' and 'com.huijian.rac.mapper.DiscardMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-14:15:30 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsDictionaryMapper' and 'com.huijian.rac.mapper.GoodsDictionaryMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-14:15:30 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsRecordMapper' and 'com.huijian.rac.mapper.GoodsRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-14:15:30 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsSupplierMapper' and 'com.huijian.rac.mapper.GoodsSupplierMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-14:15:30 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'leaveStockListDetailMapper' and 'com.huijian.rac.mapper.LeaveStockListDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-14:15:30 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'materialMapper' and 'com.huijian.rac.mapper.MaterialMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-14:15:30 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'outboundRecordMapper' and 'com.huijian.rac.mapper.OutboundRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-14:15:30 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'outboundSecondRecordMapper' and 'com.huijian.rac.mapper.OutboundSecondRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-14:15:30 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'reagentMapper' and 'com.huijian.rac.mapper.ReagentMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-14:15:30 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'returnGoodsDetailMapper' and 'com.huijian.rac.mapper.ReturnGoodsDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-14:15:30 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'returnGoodsMapper' and 'com.huijian.rac.mapper.ReturnGoodsMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-14:15:30 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'secondGoodsRecordMapper' and 'com.huijian.rac.mapper.SecondGoodsRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-14:15:30 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'secondLeaveStockListDetailMapper' and 'com.huijian.rac.mapper.SecondLeaveStockListDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-14:15:30 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'unitMapper' and 'com.huijian.rac.mapper.UnitMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-14:15:30 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseMapper' and 'com.huijian.rac.mapper.WarehouseMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-14:15:30 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseRecordMapper' and 'com.huijian.rac.mapper.WarehouseRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-14:15:30 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseSecondMapper' and 'com.huijian.rac.mapper.WarehouseSecondMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-14:15:30 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseSecondRecordMapper' and 'com.huijian.rac.mapper.WarehouseSecondRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-14:15:30 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'departsMapper' and 'com.huijian.rac.mapper.DepartsMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-14:15:30 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsPackageDetailMapper' and 'com.huijian.rac.mapper.GoodsPackageDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-14:15:30 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsPackageMapper' and 'com.huijian.rac.mapper.GoodsPackageMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-14:15:30 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'hospitalMapper' and 'com.huijian.rac.mapper.HospitalMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-14:15:30 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'leaveStockListSecondMapper' and 'com.huijian.rac.mapper.LeaveStockListSecondMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-14:15:30 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderDetailMapper' and 'com.huijian.rac.mapper.OrderDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-14:15:30 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderMapper' and 'com.huijian.rac.mapper.OrderMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-14:15:30 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderOperateMapper' and 'com.huijian.rac.mapper.OrderOperateMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-14:15:30 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderReturnDetailMapper' and 'com.huijian.rac.mapper.OrderReturnDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-14:15:30 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderReturnMapper' and 'com.huijian.rac.mapper.OrderReturnMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-14:15:30 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderReviewMapper' and 'com.huijian.rac.mapper.OrderReviewMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-14:15:30 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- No MyBatis mapper was found in '[com.huijian.rac.mapper]' package. Please check your configuration.
2020/06/28-14:15:30 [main] INFO  org.springframework.cloud.context.scope.GenericScope- BeanFactory id=b2907805-f796-3a2c-9729-4f51ea31ae6e
2020/06/28-14:15:30 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/28-14:15:30 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'redisConfig' of type [com.huijian.rac.config.RedisConfig$$EnhancerBySpringCGLIB$$462d4d6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/28-14:15:30 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/28-14:15:31 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat initialized with port(s): 8083 (http)
2020/06/28-14:15:31 [main] INFO  org.apache.catalina.core.StandardService- Starting service [Tomcat]
2020/06/28-14:15:31 [main] INFO  org.apache.catalina.core.StandardEngine- Starting Servlet engine: [Apache Tomcat/9.0.27]
2020/06/28-14:15:31 [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]- Initializing Spring embedded WebApplicationContext
2020/06/28-14:15:31 [main] INFO  org.springframework.web.context.ContextLoader- Root WebApplicationContext: initialization completed in 1872 ms
2020/06/28-14:15:32 [main] WARN  com.netflix.config.sources.URLConfigurationSource- No URLs will be polled as dynamic configuration sources.
2020/06/28-14:15:32 [main] INFO  com.netflix.config.sources.URLConfigurationSource- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020/06/28-14:15:32 [main] WARN  com.netflix.config.sources.URLConfigurationSource- No URLs will be polled as dynamic configuration sources.
2020/06/28-14:15:32 [main] INFO  com.netflix.config.sources.URLConfigurationSource- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020/06/28-14:15:32 [main] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor- Initializing ExecutorService 'applicationTaskExecutor'
2020/06/28-14:15:34 [main] WARN  org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger- You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020/06/28-14:15:34 [main] WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger- Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020/06/28-14:15:34 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory- Setting initial instance status as: STARTING
2020/06/28-14:15:34 [main] INFO  com.netflix.discovery.DiscoveryClient- Initializing Eureka in region us-east-1
2020/06/28-14:15:34 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using JSON encoding codec LegacyJacksonJson
2020/06/28-14:15:34 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using JSON decoding codec LegacyJacksonJson
2020/06/28-14:15:34 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using XML encoding codec XStreamXml
2020/06/28-14:15:34 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using XML decoding codec XStreamXml
2020/06/28-14:15:35 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-14:15:35 [main] INFO  com.netflix.discovery.DiscoveryClient- Disable delta property : false
2020/06/28-14:15:35 [main] INFO  com.netflix.discovery.DiscoveryClient- Single vip registry refresh property : null
2020/06/28-14:15:35 [main] INFO  com.netflix.discovery.DiscoveryClient- Force full registry fetch : false
2020/06/28-14:15:35 [main] INFO  com.netflix.discovery.DiscoveryClient- Application is null : false
2020/06/28-14:15:35 [main] INFO  com.netflix.discovery.DiscoveryClient- Registered Applications size is zero : true
2020/06/28-14:15:35 [main] INFO  com.netflix.discovery.DiscoveryClient- Application version is -1: true
2020/06/28-14:15:35 [main] INFO  com.netflix.discovery.DiscoveryClient- Getting all instance registry info from the eureka server
2020/06/28-14:15:35 [main] INFO  com.netflix.discovery.DiscoveryClient- The response status is 200
2020/06/28-14:15:35 [main] INFO  com.netflix.discovery.DiscoveryClient- Starting heartbeat executor: renew interval is: 30
2020/06/28-14:15:35 [main] INFO  com.netflix.discovery.InstanceInfoReplicator- InstanceInfoReplicator onDemand update allowed rate per min is 4
2020/06/28-14:15:35 [main] INFO  com.netflix.discovery.DiscoveryClient- Discovery Client initialized at timestamp 1593324935588 with initial instances count: 2
2020/06/28-14:15:35 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry- Registering application RAC-STOCK-SERVICE with eureka with status UP
2020/06/28-14:15:35 [main] INFO  com.netflix.discovery.DiscoveryClient- Saw local status change event StatusChangeEvent [timestamp=1593324935592, current=UP, previous=STARTING]
2020/06/28-14:15:35 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-STOCK-SERVICE/MSI.mshome.net:rac-stock-service:8083: registering service...
2020/06/28-14:15:35 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Attempting to connect to: [192.168.161.129:5672]
2020/06/28-14:15:35 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Created new connection: rabbitConnectionFactory#7b477141:0/SimpleConnection@cae2a97 [delegate=amqp://admin@192.168.161.129:5672/, localPort= 64751]
2020/06/28-14:15:35 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-STOCK-SERVICE/MSI.mshome.net:rac-stock-service:8083 - registration status: 204
2020/06/28-14:15:35 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat started on port(s): 8083 (http) with context path ''
2020/06/28-14:15:35 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration- Updating port to 8083
2020/06/28-14:15:36 [main] INFO  com.huijian.rac.RacStockServiceApplication- Started RacStockServiceApplication in 8.231 seconds (JVM running for 9.122)
2020/06/28-14:15:46 [http-nio-8084-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]- Initializing Spring DispatcherServlet 'dispatcherServlet'
2020/06/28-14:15:46 [http-nio-8084-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet- Initializing Servlet 'dispatcherServlet'
2020/06/28-14:15:46 [http-nio-8084-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet- Completed initialization in 5 ms
2020/06/28-14:15:46 [http-nio-8084-exec-2] INFO  com.zaxxer.hikari.HikariDataSource- HikariPool-1 - Starting...
2020/06/28-14:15:47 [http-nio-8084-exec-2] INFO  com.zaxxer.hikari.HikariDataSource- HikariPool-1 - Start completed.
2020/06/28-14:15:47 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==>  Preparing: SELECT a.*, b.PERSONNAME audit_person_name, ph.ORGANIZATION hospital_name from (SELECT sr.*, pd.PERSONNAME collar_person_name from sj_returngoods as sr INNER JOIN pub_doctor as pd on sr.return_goods_no like concat('%',?,'%') and sr.return_goods_date >= ? and sr.return_goods_date < ? and sr.collar_person_id = pd.PERSONID ) as a left join pub_doctor as b on a.audit_person_id = b.PERSONID inner join pub_hospitalid ph on a.hospital_id = ph.HOSPITALID order by a.return_goods_date desc limit ?, ? 
2020/06/28-14:15:47 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-28 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/28-14:15:47 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- <==      Total: 1
2020/06/28-14:15:50 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==>  Preparing: select sr.*, dic.GoodsName, su.UnitName unit from sj_returngoodsdetail as sr inner join sj_goodsdictionary as dic on return_goods_no=? and dic.GoodsID = sr.goods_id left join sj_unit su on dic.UnitID = su.UnitID 
2020/06/28-14:15:50 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==> Parameters: 90160020623BS001(String)
2020/06/28-14:15:50 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- <==      Total: 1
2020/06/28-14:17:26 [main] INFO  com.huijian.rac.RacOrderServiceApplication- No active profile set, falling back to default profiles: default
2020/06/28-14:17:26 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Multiple Spring Data modules found, entering strict repository configuration mode!
2020/06/28-14:17:26 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020/06/28-14:17:26 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Finished Spring Data repository scanning in 14ms. Found 0 Redis repository interfaces.
2020/06/28-14:17:26 [main] INFO  org.springframework.cloud.context.scope.GenericScope- BeanFactory id=f3f23537-6900-3ad0-88d5-cec7769c130c
2020/06/28-14:17:26 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/28-14:17:26 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/28-14:17:26 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat initialized with port(s): 8084 (http)
2020/06/28-14:17:26 [main] INFO  org.apache.catalina.core.StandardService- Starting service [Tomcat]
2020/06/28-14:17:26 [main] INFO  org.apache.catalina.core.StandardEngine- Starting Servlet engine: [Apache Tomcat/9.0.29]
2020/06/28-14:17:27 [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]- Initializing Spring embedded WebApplicationContext
2020/06/28-14:17:27 [main] INFO  org.springframework.web.context.ContextLoader- Root WebApplicationContext: initialization completed in 981 ms
2020/06/28-14:17:27 [main] WARN  com.netflix.config.sources.URLConfigurationSource- No URLs will be polled as dynamic configuration sources.
2020/06/28-14:17:27 [main] INFO  com.netflix.config.sources.URLConfigurationSource- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020/06/28-14:17:27 [main] WARN  com.netflix.config.sources.URLConfigurationSource- No URLs will be polled as dynamic configuration sources.
2020/06/28-14:17:27 [main] INFO  com.netflix.config.sources.URLConfigurationSource- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020/06/28-14:17:27 [main] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor- Initializing ExecutorService 'applicationTaskExecutor'
2020/06/28-14:17:28 [main] WARN  org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger- You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020/06/28-14:17:28 [main] WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger- Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020/06/28-14:17:29 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory- Setting initial instance status as: STARTING
2020/06/28-14:17:29 [main] INFO  com.netflix.discovery.DiscoveryClient- Initializing Eureka in region us-east-1
2020/06/28-14:17:29 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using JSON encoding codec LegacyJacksonJson
2020/06/28-14:17:29 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using JSON decoding codec LegacyJacksonJson
2020/06/28-14:17:29 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using XML encoding codec XStreamXml
2020/06/28-14:17:29 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using XML decoding codec XStreamXml
2020/06/28-14:17:29 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-14:17:29 [main] INFO  com.netflix.discovery.DiscoveryClient- Disable delta property : false
2020/06/28-14:17:29 [main] INFO  com.netflix.discovery.DiscoveryClient- Single vip registry refresh property : null
2020/06/28-14:17:29 [main] INFO  com.netflix.discovery.DiscoveryClient- Force full registry fetch : false
2020/06/28-14:17:29 [main] INFO  com.netflix.discovery.DiscoveryClient- Application is null : false
2020/06/28-14:17:29 [main] INFO  com.netflix.discovery.DiscoveryClient- Registered Applications size is zero : true
2020/06/28-14:17:29 [main] INFO  com.netflix.discovery.DiscoveryClient- Application version is -1: true
2020/06/28-14:17:29 [main] INFO  com.netflix.discovery.DiscoveryClient- Getting all instance registry info from the eureka server
2020/06/28-14:17:29 [main] INFO  com.netflix.discovery.DiscoveryClient- The response status is 200
2020/06/28-14:17:29 [main] INFO  com.netflix.discovery.DiscoveryClient- Starting heartbeat executor: renew interval is: 30
2020/06/28-14:17:29 [main] INFO  com.netflix.discovery.InstanceInfoReplicator- InstanceInfoReplicator onDemand update allowed rate per min is 4
2020/06/28-14:17:29 [main] INFO  com.netflix.discovery.DiscoveryClient- Discovery Client initialized at timestamp 1593325049919 with initial instances count: 2
2020/06/28-14:17:29 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry- Registering application RAC-ORDER-SERVICE with eureka with status UP
2020/06/28-14:17:29 [main] INFO  com.netflix.discovery.DiscoveryClient- Saw local status change event StatusChangeEvent [timestamp=1593325049922, current=UP, previous=STARTING]
2020/06/28-14:17:29 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-ORDER-SERVICE/MSI.mshome.net:rac-order-service:8084: registering service...
2020/06/28-14:17:29 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Attempting to connect to: [192.168.161.129:5672]
2020/06/28-14:17:29 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Created new connection: rabbitConnectionFactory#58472096:0/SimpleConnection@5c33008f [delegate=amqp://admin@192.168.161.129:5672/, localPort= 64937]
2020/06/28-14:17:29 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-ORDER-SERVICE/MSI.mshome.net:rac-order-service:8084 - registration status: 204
2020/06/28-14:17:30 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat started on port(s): 8084 (http) with context path ''
2020/06/28-14:17:30 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration- Updating port to 8084
2020/06/28-14:17:30 [main] INFO  com.huijian.rac.RacOrderServiceApplication- Started RacOrderServiceApplication in 5.318 seconds (JVM running for 6.062)
2020/06/28-14:17:36 [http-nio-8084-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]- Initializing Spring DispatcherServlet 'dispatcherServlet'
2020/06/28-14:17:36 [http-nio-8084-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet- Initializing Servlet 'dispatcherServlet'
2020/06/28-14:17:36 [http-nio-8084-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet- Completed initialization in 6 ms
2020/06/28-14:17:36 [http-nio-8084-exec-3] INFO  com.zaxxer.hikari.HikariDataSource- HikariPool-1 - Starting...
2020/06/28-14:17:36 [http-nio-8084-exec-3] INFO  com.zaxxer.hikari.HikariDataSource- HikariPool-1 - Start completed.
2020/06/28-14:17:36 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==>  Preparing: SELECT * from sj_order where OrderNo like concat('%',?,'%') and OrderDate >= ? and OrderDate < ? and OrderState != 0 order by OrderDate desc limit ?, ? 
2020/06/28-14:17:37 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-28 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/28-14:17:37 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- <==      Total: 0
2020/06/28-14:17:37 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==>  Preparing: SELECT a.*, b.PERSONNAME audit_person_name, ph.ORGANIZATION hospital_name from (SELECT sr.*, pd.PERSONNAME collar_person_name from sj_returngoods as sr INNER JOIN pub_doctor as pd on sr.return_goods_no like concat('%',?,'%') and sr.return_goods_date >= ? and sr.return_goods_date < ? and sr.collar_person_id = pd.PERSONID ) as a left join pub_doctor as b on a.audit_person_id = b.PERSONID inner join pub_hospitalid ph on a.hospital_id = ph.HOSPITALID order by a.return_goods_date desc limit ?, ? 
2020/06/28-14:17:37 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-28 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/28-14:17:37 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- <==      Total: 1
2020/06/28-14:17:39 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==>  Preparing: select sr.*, dic.GoodsName, dic.UnitPrice unitPrice, su.UnitName unit from sj_returngoodsdetail as sr inner join sj_goodsdictionary as dic on return_goods_no=? and dic.GoodsID = sr.goods_id left join sj_unit su on dic.UnitID = su.UnitID 
2020/06/28-14:17:39 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==> Parameters: 90160020623BS001(String)
2020/06/28-14:17:40 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- <==      Total: 1
2020/06/28-14:17:48 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==>  Preparing: select sr.*, dic.GoodsName, dic.UnitPrice unitPrice, su.UnitName unit from sj_returngoodsdetail as sr inner join sj_goodsdictionary as dic on return_goods_no=? and dic.GoodsID = sr.goods_id left join sj_unit su on dic.UnitID = su.UnitID 
2020/06/28-14:17:48 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==> Parameters: 90160020623BS001(String)
2020/06/28-14:17:48 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- <==      Total: 1
2020/06/28-14:20:35 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-14:21:25 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==>  Preparing: SELECT a.*, b.PERSONNAME audit_person_name, ph.ORGANIZATION hospital_name from (SELECT sr.*, pd.PERSONNAME collar_person_name from sj_returngoods as sr INNER JOIN pub_doctor as pd on sr.return_goods_no like concat('%',?,'%') and sr.return_goods_date >= ? and sr.return_goods_date < ? and sr.collar_person_id = pd.PERSONID ) as a left join pub_doctor as b on a.audit_person_id = b.PERSONID inner join pub_hospitalid ph on a.hospital_id = ph.HOSPITALID order by a.return_goods_date desc limit ?, ? 
2020/06/28-14:21:25 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-28 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/28-14:21:25 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- <==      Total: 1
2020/06/28-14:21:38 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==>  Preparing: SELECT a.*, b.PERSONNAME audit_person_name, ph.ORGANIZATION hospital_name from (SELECT sr.*, pd.PERSONNAME collar_person_name from sj_returngoods as sr INNER JOIN pub_doctor as pd on sr.return_goods_no like concat('%',?,'%') and sr.return_goods_date >= ? and sr.return_goods_date < ? and sr.collar_person_id = pd.PERSONID ) as a left join pub_doctor as b on a.audit_person_id = b.PERSONID inner join pub_hospitalid ph on a.hospital_id = ph.HOSPITALID order by a.return_goods_date desc limit ?, ? 
2020/06/28-14:21:38 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-28 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/28-14:21:38 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- <==      Total: 1
2020/06/28-14:21:57 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==>  Preparing: SELECT * from sj_order where OrderNo like concat('%',?,'%') and OrderDate >= ? and OrderDate < ? and OrderState != 0 order by OrderDate desc limit ?, ? 
2020/06/28-14:21:57 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-28 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/28-14:21:57 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- <==      Total: 0
2020/06/28-14:21:57 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==>  Preparing: SELECT a.*, b.PERSONNAME audit_person_name, ph.ORGANIZATION hospital_name from (SELECT sr.*, pd.PERSONNAME collar_person_name from sj_returngoods as sr INNER JOIN pub_doctor as pd on sr.return_goods_no like concat('%',?,'%') and sr.return_goods_date >= ? and sr.return_goods_date < ? and sr.collar_person_id = pd.PERSONID ) as a left join pub_doctor as b on a.audit_person_id = b.PERSONID inner join pub_hospitalid ph on a.hospital_id = ph.HOSPITALID order by a.return_goods_date desc limit ?, ? 
2020/06/28-14:21:57 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-28 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/28-14:21:57 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- <==      Total: 1
2020/06/28-14:21:57 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==>  Preparing: select sr.*, dic.GoodsName, dic.UnitPrice unitPrice, su.UnitName unit from sj_returngoodsdetail as sr inner join sj_goodsdictionary as dic on return_goods_no=? and dic.GoodsID = sr.goods_id left join sj_unit su on dic.UnitID = su.UnitID 
2020/06/28-14:21:57 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==> Parameters: 90160020623BS001(String)
2020/06/28-14:21:57 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- <==      Total: 1
2020/06/28-14:22:05 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==>  Preparing: select sr.*, dic.GoodsName, dic.UnitPrice unitPrice, su.UnitName unit from sj_returngoodsdetail as sr inner join sj_goodsdictionary as dic on return_goods_no=? and dic.GoodsID = sr.goods_id left join sj_unit su on dic.UnitID = su.UnitID 
2020/06/28-14:22:05 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==> Parameters: 90160020623BS001(String)
2020/06/28-14:22:05 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- <==      Total: 1
2020/06/28-14:22:29 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-14:22:50 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==>  Preparing: SELECT * from sj_order where OrderNo like concat('%',?,'%') and OrderDate >= ? and OrderDate < ? and OrderState != 0 order by OrderDate desc limit ?, ? 
2020/06/28-14:22:50 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-28 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/28-14:22:50 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- <==      Total: 0
2020/06/28-14:22:50 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==>  Preparing: SELECT a.*, b.PERSONNAME audit_person_name, ph.ORGANIZATION hospital_name from (SELECT sr.*, pd.PERSONNAME collar_person_name from sj_returngoods as sr INNER JOIN pub_doctor as pd on sr.return_goods_no like concat('%',?,'%') and sr.return_goods_date >= ? and sr.return_goods_date < ? and sr.collar_person_id = pd.PERSONID ) as a left join pub_doctor as b on a.audit_person_id = b.PERSONID inner join pub_hospitalid ph on a.hospital_id = ph.HOSPITALID order by a.return_goods_date desc limit ?, ? 
2020/06/28-14:22:50 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-28 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/28-14:22:50 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- <==      Total: 1
2020/06/28-14:22:51 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==>  Preparing: select sr.*, dic.GoodsName, dic.UnitPrice unitPrice, su.UnitName unit from sj_returngoodsdetail as sr inner join sj_goodsdictionary as dic on return_goods_no=? and dic.GoodsID = sr.goods_id left join sj_unit su on dic.UnitID = su.UnitID 
2020/06/28-14:22:51 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==> Parameters: 90160020623BS001(String)
2020/06/28-14:22:51 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- <==      Total: 1
2020/06/28-14:22:52 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==>  Preparing: select sr.*, dic.GoodsName, dic.UnitPrice unitPrice, su.UnitName unit from sj_returngoodsdetail as sr inner join sj_goodsdictionary as dic on return_goods_no=? and dic.GoodsID = sr.goods_id left join sj_unit su on dic.UnitID = su.UnitID 
2020/06/28-14:22:52 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==> Parameters: 90160020623BS001(String)
2020/06/28-14:22:52 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- <==      Total: 1
2020/06/28-14:24:22 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==>  Preparing: SELECT a.*, b.PERSONNAME audit_person_name, ph.ORGANIZATION hospital_name from (SELECT sr.*, pd.PERSONNAME collar_person_name from sj_returngoods as sr INNER JOIN pub_doctor as pd on sr.return_goods_no like concat('%',?,'%') and sr.return_goods_date >= ? and sr.return_goods_date < ? and sr.collar_person_id = pd.PERSONID ) as a left join pub_doctor as b on a.audit_person_id = b.PERSONID inner join pub_hospitalid ph on a.hospital_id = ph.HOSPITALID order by a.return_goods_date desc limit ?, ? 
2020/06/28-14:24:22 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-28 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/28-14:24:22 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- <==      Total: 1
2020/06/28-14:24:30 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==>  Preparing: select sr.*, dic.GoodsName, dic.UnitPrice unitPrice, su.UnitName unit from sj_returngoodsdetail as sr inner join sj_goodsdictionary as dic on return_goods_no=? and dic.GoodsID = sr.goods_id left join sj_unit su on dic.UnitID = su.UnitID 
2020/06/28-14:24:30 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==> Parameters: 90160020623BS001(String)
2020/06/28-14:24:30 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- <==      Total: 1
2020/06/28-14:25:03 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==>  Preparing: SELECT a.*, b.PERSONNAME audit_person_name, ph.ORGANIZATION hospital_name from (SELECT sr.*, pd.PERSONNAME collar_person_name from sj_returngoods as sr INNER JOIN pub_doctor as pd on sr.return_goods_no like concat('%',?,'%') and sr.return_goods_date >= ? and sr.return_goods_date < ? and sr.collar_person_id = pd.PERSONID ) as a left join pub_doctor as b on a.audit_person_id = b.PERSONID inner join pub_hospitalid ph on a.hospital_id = ph.HOSPITALID order by a.return_goods_date desc limit ?, ? 
2020/06/28-14:25:03 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-28 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/28-14:25:03 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- <==      Total: 1
2020/06/28-14:25:05 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==>  Preparing: select sr.*, dic.GoodsName, dic.UnitPrice unitPrice, su.UnitName unit from sj_returngoodsdetail as sr inner join sj_goodsdictionary as dic on return_goods_no=? and dic.GoodsID = sr.goods_id left join sj_unit su on dic.UnitID = su.UnitID 
2020/06/28-14:25:05 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==> Parameters: 90160020623BS001(String)
2020/06/28-14:25:05 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- <==      Total: 1
2020/06/28-14:25:05 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==>  Preparing: select sr.*, dic.GoodsName, dic.UnitPrice unitPrice, su.UnitName unit from sj_returngoodsdetail as sr inner join sj_goodsdictionary as dic on return_goods_no=? and dic.GoodsID = sr.goods_id left join sj_unit su on dic.UnitID = su.UnitID 
2020/06/28-14:25:05 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==> Parameters: 90160020623BS001(String)
2020/06/28-14:25:05 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- <==      Total: 1
2020/06/28-14:25:35 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-14:27:29 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-14:30:35 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-14:32:15 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==>  Preparing: SELECT a.*, b.PERSONNAME audit_person_name, ph.ORGANIZATION hospital_name from (SELECT sr.*, pd.PERSONNAME collar_person_name from sj_returngoods as sr INNER JOIN pub_doctor as pd on sr.return_goods_no like concat('%',?,'%') and sr.return_goods_date >= ? and sr.return_goods_date < ? and sr.collar_person_id = pd.PERSONID ) as a left join pub_doctor as b on a.audit_person_id = b.PERSONID inner join pub_hospitalid ph on a.hospital_id = ph.HOSPITALID order by a.return_goods_date desc limit ?, ? 
2020/06/28-14:32:15 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-28 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/28-14:32:15 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- <==      Total: 1
2020/06/28-14:32:29 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==>  Preparing: SELECT * from sj_order where OrderNo like concat('%',?,'%') and OrderDate >= ? and OrderDate < ? and OrderState != 0 order by OrderDate desc limit ?, ? 
2020/06/28-14:32:29 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-28 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/28-14:32:29 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- <==      Total: 0
2020/06/28-14:32:29 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-14:32:29 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==>  Preparing: SELECT a.*, b.PERSONNAME audit_person_name, ph.ORGANIZATION hospital_name from (SELECT sr.*, pd.PERSONNAME collar_person_name from sj_returngoods as sr INNER JOIN pub_doctor as pd on sr.return_goods_no like concat('%',?,'%') and sr.return_goods_date >= ? and sr.return_goods_date < ? and sr.collar_person_id = pd.PERSONID ) as a left join pub_doctor as b on a.audit_person_id = b.PERSONID inner join pub_hospitalid ph on a.hospital_id = ph.HOSPITALID order by a.return_goods_date desc limit ?, ? 
2020/06/28-14:32:29 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-28 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/28-14:32:29 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- <==      Total: 1
2020/06/28-14:32:30 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==>  Preparing: select sr.*, dic.GoodsName, dic.UnitPrice unitPrice, su.UnitName unit from sj_returngoodsdetail as sr inner join sj_goodsdictionary as dic on return_goods_no=? and dic.GoodsID = sr.goods_id left join sj_unit su on dic.UnitID = su.UnitID 
2020/06/28-14:32:30 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==> Parameters: 90160020623BS001(String)
2020/06/28-14:32:30 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- <==      Total: 1
2020/06/28-14:32:31 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==>  Preparing: select sr.*, dic.GoodsName, dic.UnitPrice unitPrice, su.UnitName unit from sj_returngoodsdetail as sr inner join sj_goodsdictionary as dic on return_goods_no=? and dic.GoodsID = sr.goods_id left join sj_unit su on dic.UnitID = su.UnitID 
2020/06/28-14:32:31 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==> Parameters: 90160020623BS001(String)
2020/06/28-14:32:31 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- <==      Total: 1
2020/06/28-14:33:07 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==>  Preparing: SELECT a.*, b.PERSONNAME audit_person_name, ph.ORGANIZATION hospital_name from (SELECT sr.*, pd.PERSONNAME collar_person_name from sj_returngoods as sr INNER JOIN pub_doctor as pd on sr.return_goods_no like concat('%',?,'%') and sr.return_goods_date >= ? and sr.return_goods_date < ? and sr.collar_person_id = pd.PERSONID ) as a left join pub_doctor as b on a.audit_person_id = b.PERSONID inner join pub_hospitalid ph on a.hospital_id = ph.HOSPITALID order by a.return_goods_date desc limit ?, ? 
2020/06/28-14:33:07 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-28 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/28-14:33:07 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- <==      Total: 1
2020/06/28-14:33:16 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==>  Preparing: SELECT a.*, b.PERSONNAME audit_person_name, ph.ORGANIZATION hospital_name from (SELECT sr.*, pd.PERSONNAME collar_person_name from sj_returngoods as sr INNER JOIN pub_doctor as pd on sr.return_goods_no like concat('%',?,'%') and sr.return_goods_date >= ? and sr.return_goods_date < ? and sr.collar_person_id = pd.PERSONID ) as a left join pub_doctor as b on a.audit_person_id = b.PERSONID inner join pub_hospitalid ph on a.hospital_id = ph.HOSPITALID order by a.return_goods_date desc limit ?, ? 
2020/06/28-14:33:16 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-28 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/28-14:33:16 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- <==      Total: 1
2020/06/28-14:33:26 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==>  Preparing: SELECT * from sj_order where OrderNo like concat('%',?,'%') and OrderDate >= ? and OrderDate < ? and OrderState != 0 order by OrderDate desc limit ?, ? 
2020/06/28-14:33:26 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-28 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/28-14:33:26 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- <==      Total: 0
2020/06/28-14:33:26 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==>  Preparing: SELECT a.*, b.PERSONNAME audit_person_name, ph.ORGANIZATION hospital_name from (SELECT sr.*, pd.PERSONNAME collar_person_name from sj_returngoods as sr INNER JOIN pub_doctor as pd on sr.return_goods_no like concat('%',?,'%') and sr.return_goods_date >= ? and sr.return_goods_date < ? and sr.collar_person_id = pd.PERSONID ) as a left join pub_doctor as b on a.audit_person_id = b.PERSONID inner join pub_hospitalid ph on a.hospital_id = ph.HOSPITALID order by a.return_goods_date desc limit ?, ? 
2020/06/28-14:33:26 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-28 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/28-14:33:26 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- <==      Total: 1
2020/06/28-14:33:27 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==>  Preparing: select sr.*, dic.GoodsName, dic.UnitPrice unitPrice, su.UnitName unit from sj_returngoodsdetail as sr inner join sj_goodsdictionary as dic on return_goods_no=? and dic.GoodsID = sr.goods_id left join sj_unit su on dic.UnitID = su.UnitID 
2020/06/28-14:33:27 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==> Parameters: 90160020623BS001(String)
2020/06/28-14:33:27 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- <==      Total: 1
2020/06/28-14:33:28 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==>  Preparing: select sr.*, dic.GoodsName, dic.UnitPrice unitPrice, su.UnitName unit from sj_returngoodsdetail as sr inner join sj_goodsdictionary as dic on return_goods_no=? and dic.GoodsID = sr.goods_id left join sj_unit su on dic.UnitID = su.UnitID 
2020/06/28-14:33:28 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==> Parameters: 90160020623BS001(String)
2020/06/28-14:33:28 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- <==      Total: 1
2020/06/28-14:34:02 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==>  Preparing: SELECT a.*, b.PERSONNAME audit_person_name, ph.ORGANIZATION hospital_name from (SELECT sr.*, pd.PERSONNAME collar_person_name from sj_returngoods as sr INNER JOIN pub_doctor as pd on sr.return_goods_no like concat('%',?,'%') and sr.return_goods_date >= ? and sr.return_goods_date < ? and sr.collar_person_id = pd.PERSONID ) as a left join pub_doctor as b on a.audit_person_id = b.PERSONID inner join pub_hospitalid ph on a.hospital_id = ph.HOSPITALID order by a.return_goods_date desc limit ?, ? 
2020/06/28-14:34:02 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-28 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/28-14:34:02 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- <==      Total: 1
2020/06/28-14:34:06 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==>  Preparing: SELECT * from sj_order where OrderNo like concat('%',?,'%') and OrderDate >= ? and OrderDate < ? and OrderState != 0 order by OrderDate desc limit ?, ? 
2020/06/28-14:34:06 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-28 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/28-14:34:06 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- <==      Total: 0
2020/06/28-14:34:06 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==>  Preparing: SELECT a.*, b.PERSONNAME audit_person_name, ph.ORGANIZATION hospital_name from (SELECT sr.*, pd.PERSONNAME collar_person_name from sj_returngoods as sr INNER JOIN pub_doctor as pd on sr.return_goods_no like concat('%',?,'%') and sr.return_goods_date >= ? and sr.return_goods_date < ? and sr.collar_person_id = pd.PERSONID ) as a left join pub_doctor as b on a.audit_person_id = b.PERSONID inner join pub_hospitalid ph on a.hospital_id = ph.HOSPITALID order by a.return_goods_date desc limit ?, ? 
2020/06/28-14:34:06 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-28 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/28-14:34:06 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- <==      Total: 1
2020/06/28-14:34:08 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==>  Preparing: select sr.*, dic.GoodsName, dic.UnitPrice unitPrice, su.UnitName unit from sj_returngoodsdetail as sr inner join sj_goodsdictionary as dic on return_goods_no=? and dic.GoodsID = sr.goods_id left join sj_unit su on dic.UnitID = su.UnitID 
2020/06/28-14:34:08 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==> Parameters: 90160020623BS001(String)
2020/06/28-14:34:08 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- <==      Total: 1
2020/06/28-14:34:14 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==>  Preparing: select sr.*, dic.GoodsName, dic.UnitPrice unitPrice, su.UnitName unit from sj_returngoodsdetail as sr inner join sj_goodsdictionary as dic on return_goods_no=? and dic.GoodsID = sr.goods_id left join sj_unit su on dic.UnitID = su.UnitID 
2020/06/28-14:34:14 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==> Parameters: 90160020623BS001(String)
2020/06/28-14:34:14 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- <==      Total: 1
2020/06/28-14:34:35 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==>  Preparing: SELECT a.*, b.PERSONNAME audit_person_name, ph.ORGANIZATION hospital_name from (SELECT sr.*, pd.PERSONNAME collar_person_name from sj_returngoods as sr INNER JOIN pub_doctor as pd on sr.return_goods_no like concat('%',?,'%') and sr.return_goods_date >= ? and sr.return_goods_date < ? and sr.collar_person_id = pd.PERSONID ) as a left join pub_doctor as b on a.audit_person_id = b.PERSONID inner join pub_hospitalid ph on a.hospital_id = ph.HOSPITALID order by a.return_goods_date desc limit ?, ? 
2020/06/28-14:34:35 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-28 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/28-14:34:35 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- <==      Total: 1
2020/06/28-14:34:36 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==>  Preparing: select sr.*, dic.GoodsName, dic.UnitPrice unitPrice, su.UnitName unit from sj_returngoodsdetail as sr inner join sj_goodsdictionary as dic on return_goods_no=? and dic.GoodsID = sr.goods_id left join sj_unit su on dic.UnitID = su.UnitID 
2020/06/28-14:34:36 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==> Parameters: 90160020623BS001(String)
2020/06/28-14:34:36 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- <==      Total: 1
2020/06/28-14:35:32 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==>  Preparing: select sr.*, dic.GoodsName, dic.UnitPrice unitPrice, su.UnitName unit from sj_returngoodsdetail as sr inner join sj_goodsdictionary as dic on return_goods_no=? and dic.GoodsID = sr.goods_id left join sj_unit su on dic.UnitID = su.UnitID 
2020/06/28-14:35:32 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==> Parameters: 90160020623BS001(String)
2020/06/28-14:35:32 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- <==      Total: 1
2020/06/28-14:35:35 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-14:35:35 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==>  Preparing: SELECT * from sj_order where OrderNo like concat('%',?,'%') and OrderDate >= ? and OrderDate < ? and OrderState != 0 order by OrderDate desc limit ?, ? 
2020/06/28-14:35:35 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-28 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/28-14:35:35 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- <==      Total: 0
2020/06/28-14:35:36 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==>  Preparing: SELECT a.*, b.PERSONNAME audit_person_name, ph.ORGANIZATION hospital_name from (SELECT sr.*, pd.PERSONNAME collar_person_name from sj_returngoods as sr INNER JOIN pub_doctor as pd on sr.return_goods_no like concat('%',?,'%') and sr.return_goods_date >= ? and sr.return_goods_date < ? and sr.collar_person_id = pd.PERSONID ) as a left join pub_doctor as b on a.audit_person_id = b.PERSONID inner join pub_hospitalid ph on a.hospital_id = ph.HOSPITALID order by a.return_goods_date desc limit ?, ? 
2020/06/28-14:35:36 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-28 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/28-14:35:36 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- <==      Total: 1
2020/06/28-14:35:37 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==>  Preparing: select sr.*, dic.GoodsName, dic.UnitPrice unitPrice, su.UnitName unit from sj_returngoodsdetail as sr inner join sj_goodsdictionary as dic on return_goods_no=? and dic.GoodsID = sr.goods_id left join sj_unit su on dic.UnitID = su.UnitID 
2020/06/28-14:35:37 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==> Parameters: 90160020623BS001(String)
2020/06/28-14:35:37 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- <==      Total: 1
2020/06/28-14:36:48 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==>  Preparing: SELECT a.*, b.PERSONNAME audit_person_name, ph.ORGANIZATION hospital_name from (SELECT sr.*, pd.PERSONNAME collar_person_name from sj_returngoods as sr INNER JOIN pub_doctor as pd on sr.return_goods_no like concat('%',?,'%') and sr.return_goods_date >= ? and sr.return_goods_date < ? and sr.collar_person_id = pd.PERSONID ) as a left join pub_doctor as b on a.audit_person_id = b.PERSONID inner join pub_hospitalid ph on a.hospital_id = ph.HOSPITALID order by a.return_goods_date desc limit ?, ? 
2020/06/28-14:36:48 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-28 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/28-14:36:48 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- <==      Total: 1
2020/06/28-14:36:49 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==>  Preparing: select sr.*, dic.GoodsName, dic.UnitPrice unitPrice, su.UnitName unit from sj_returngoodsdetail as sr inner join sj_goodsdictionary as dic on return_goods_no=? and dic.GoodsID = sr.goods_id left join sj_unit su on dic.UnitID = su.UnitID 
2020/06/28-14:36:49 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==> Parameters: 90160020623BS001(String)
2020/06/28-14:36:49 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- <==      Total: 1
2020/06/28-14:36:50 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==>  Preparing: select sr.*, dic.GoodsName, dic.UnitPrice unitPrice, su.UnitName unit from sj_returngoodsdetail as sr inner join sj_goodsdictionary as dic on return_goods_no=? and dic.GoodsID = sr.goods_id left join sj_unit su on dic.UnitID = su.UnitID 
2020/06/28-14:36:50 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==> Parameters: 90160020623BS001(String)
2020/06/28-14:36:50 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- <==      Total: 1
2020/06/28-14:37:09 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==>  Preparing: SELECT a.*, b.PERSONNAME audit_person_name, ph.ORGANIZATION hospital_name from (SELECT sr.*, pd.PERSONNAME collar_person_name from sj_returngoods as sr INNER JOIN pub_doctor as pd on sr.return_goods_no like concat('%',?,'%') and sr.return_goods_date >= ? and sr.return_goods_date < ? and sr.collar_person_id = pd.PERSONID ) as a left join pub_doctor as b on a.audit_person_id = b.PERSONID inner join pub_hospitalid ph on a.hospital_id = ph.HOSPITALID order by a.return_goods_date desc limit ?, ? 
2020/06/28-14:37:09 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-28 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/28-14:37:09 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- <==      Total: 1
2020/06/28-14:37:10 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==>  Preparing: select sr.*, dic.GoodsName, dic.UnitPrice unitPrice, su.UnitName unit from sj_returngoodsdetail as sr inner join sj_goodsdictionary as dic on return_goods_no=? and dic.GoodsID = sr.goods_id left join sj_unit su on dic.UnitID = su.UnitID 
2020/06/28-14:37:10 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==> Parameters: 90160020623BS001(String)
2020/06/28-14:37:10 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- <==      Total: 1
2020/06/28-14:37:11 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==>  Preparing: select sr.*, dic.GoodsName, dic.UnitPrice unitPrice, su.UnitName unit from sj_returngoodsdetail as sr inner join sj_goodsdictionary as dic on return_goods_no=? and dic.GoodsID = sr.goods_id left join sj_unit su on dic.UnitID = su.UnitID 
2020/06/28-14:37:11 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==> Parameters: 90160020623BS001(String)
2020/06/28-14:37:11 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- <==      Total: 1
2020/06/28-14:37:29 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-14:39:28 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==>  Preparing: SELECT a.*, b.PERSONNAME audit_person_name, ph.ORGANIZATION hospital_name from (SELECT sr.*, pd.PERSONNAME collar_person_name from sj_returngoods as sr INNER JOIN pub_doctor as pd on sr.return_goods_no like concat('%',?,'%') and sr.return_goods_date >= ? and sr.return_goods_date < ? and sr.collar_person_id = pd.PERSONID ) as a left join pub_doctor as b on a.audit_person_id = b.PERSONID inner join pub_hospitalid ph on a.hospital_id = ph.HOSPITALID order by a.return_goods_date desc limit ?, ? 
2020/06/28-14:39:28 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-28 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/28-14:39:28 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- <==      Total: 1
2020/06/28-14:39:30 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==>  Preparing: select sr.*, dic.GoodsName, dic.UnitPrice unitPrice, su.UnitName unit from sj_returngoodsdetail as sr inner join sj_goodsdictionary as dic on return_goods_no=? and dic.GoodsID = sr.goods_id left join sj_unit su on dic.UnitID = su.UnitID 
2020/06/28-14:39:30 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==> Parameters: 90160020623BS001(String)
2020/06/28-14:39:30 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- <==      Total: 1
2020/06/28-14:39:33 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==>  Preparing: select sr.*, dic.GoodsName, dic.UnitPrice unitPrice, su.UnitName unit from sj_returngoodsdetail as sr inner join sj_goodsdictionary as dic on return_goods_no=? and dic.GoodsID = sr.goods_id left join sj_unit su on dic.UnitID = su.UnitID 
2020/06/28-14:39:33 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==> Parameters: 90160020623BS001(String)
2020/06/28-14:39:33 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- <==      Total: 1
2020/06/28-14:39:34 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==>  Preparing: select sr.*, dic.GoodsName, dic.UnitPrice unitPrice, su.UnitName unit from sj_returngoodsdetail as sr inner join sj_goodsdictionary as dic on return_goods_no=? and dic.GoodsID = sr.goods_id left join sj_unit su on dic.UnitID = su.UnitID 
2020/06/28-14:39:34 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==> Parameters: 90160020623BS001(String)
2020/06/28-14:39:34 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- <==      Total: 1
2020/06/28-14:39:49 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==>  Preparing: SELECT a.*, b.PERSONNAME audit_person_name, ph.ORGANIZATION hospital_name from (SELECT sr.*, pd.PERSONNAME collar_person_name from sj_returngoods as sr INNER JOIN pub_doctor as pd on sr.return_goods_no like concat('%',?,'%') and sr.return_goods_date >= ? and sr.return_goods_date < ? and sr.collar_person_id = pd.PERSONID ) as a left join pub_doctor as b on a.audit_person_id = b.PERSONID inner join pub_hospitalid ph on a.hospital_id = ph.HOSPITALID order by a.return_goods_date desc limit ?, ? 
2020/06/28-14:39:49 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-28 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/28-14:39:49 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- <==      Total: 1
2020/06/28-14:40:35 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-14:42:29 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-14:45:35 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-14:46:18 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==>  Preparing: SELECT a.*, b.PERSONNAME audit_person_name, ph.ORGANIZATION hospital_name from (SELECT sr.*, pd.PERSONNAME collar_person_name from sj_returngoods as sr INNER JOIN pub_doctor as pd on sr.return_goods_no like concat('%',?,'%') and sr.return_goods_date >= ? and sr.return_goods_date < ? and sr.collar_person_id = pd.PERSONID ) as a left join pub_doctor as b on a.audit_person_id = b.PERSONID inner join pub_hospitalid ph on a.hospital_id = ph.HOSPITALID order by a.return_goods_date desc limit ?, ? 
2020/06/28-14:46:18 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-28 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/28-14:46:18 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- <==      Total: 1
2020/06/28-14:47:29 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-14:47:33 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==>  Preparing: SELECT a.*, b.PERSONNAME audit_person_name, ph.ORGANIZATION hospital_name from (SELECT sr.*, pd.PERSONNAME collar_person_name from sj_returngoods as sr INNER JOIN pub_doctor as pd on sr.return_goods_no like concat('%',?,'%') and sr.return_goods_date >= ? and sr.return_goods_date < ? and sr.collar_person_id = pd.PERSONID ) as a left join pub_doctor as b on a.audit_person_id = b.PERSONID inner join pub_hospitalid ph on a.hospital_id = ph.HOSPITALID order by a.return_goods_date desc limit ?, ? 
2020/06/28-14:47:33 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-28 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/28-14:47:33 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- <==      Total: 1
2020/06/28-14:48:29 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==>  Preparing: SELECT a.*, b.PERSONNAME audit_person_name, ph.ORGANIZATION hospital_name from (SELECT sr.*, pd.PERSONNAME collar_person_name from sj_returngoods as sr INNER JOIN pub_doctor as pd on sr.return_goods_no like concat('%',?,'%') and sr.return_goods_date >= ? and sr.return_goods_date < ? and sr.collar_person_id = pd.PERSONID ) as a left join pub_doctor as b on a.audit_person_id = b.PERSONID inner join pub_hospitalid ph on a.hospital_id = ph.HOSPITALID order by a.return_goods_date desc limit ?, ? 
2020/06/28-14:48:29 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-28 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/28-14:48:29 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- <==      Total: 1
2020/06/28-14:48:55 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==>  Preparing: SELECT a.*, b.PERSONNAME audit_person_name, ph.ORGANIZATION hospital_name from (SELECT sr.*, pd.PERSONNAME collar_person_name from sj_returngoods as sr INNER JOIN pub_doctor as pd on sr.return_goods_no like concat('%',?,'%') and sr.return_goods_date >= ? and sr.return_goods_date < ? and sr.collar_person_id = pd.PERSONID ) as a left join pub_doctor as b on a.audit_person_id = b.PERSONID inner join pub_hospitalid ph on a.hospital_id = ph.HOSPITALID order by a.return_goods_date desc limit ?, ? 
2020/06/28-14:48:55 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-28 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/28-14:48:55 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- <==      Total: 1
2020/06/28-14:49:16 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==>  Preparing: SELECT a.*, b.PERSONNAME audit_person_name, ph.ORGANIZATION hospital_name from (SELECT sr.*, pd.PERSONNAME collar_person_name from sj_returngoods as sr INNER JOIN pub_doctor as pd on sr.return_goods_no like concat('%',?,'%') and sr.return_goods_date >= ? and sr.return_goods_date < ? and sr.collar_person_id = pd.PERSONID ) as a left join pub_doctor as b on a.audit_person_id = b.PERSONID inner join pub_hospitalid ph on a.hospital_id = ph.HOSPITALID order by a.return_goods_date desc limit ?, ? 
2020/06/28-14:49:16 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-28 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/28-14:49:16 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- <==      Total: 1
2020/06/28-14:49:22 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==>  Preparing: SELECT * from sj_order where OrderNo like concat('%',?,'%') and OrderDate >= ? and OrderDate < ? and OrderState != 0 order by OrderDate desc limit ?, ? 
2020/06/28-14:49:22 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-28 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/28-14:49:22 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- <==      Total: 0
2020/06/28-14:49:23 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==>  Preparing: SELECT a.*, b.PERSONNAME audit_person_name, ph.ORGANIZATION hospital_name from (SELECT sr.*, pd.PERSONNAME collar_person_name from sj_returngoods as sr INNER JOIN pub_doctor as pd on sr.return_goods_no like concat('%',?,'%') and sr.return_goods_date >= ? and sr.return_goods_date < ? and sr.collar_person_id = pd.PERSONID ) as a left join pub_doctor as b on a.audit_person_id = b.PERSONID inner join pub_hospitalid ph on a.hospital_id = ph.HOSPITALID order by a.return_goods_date desc limit ?, ? 
2020/06/28-14:49:23 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-28 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/28-14:49:23 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- <==      Total: 1
2020/06/28-14:49:24 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==>  Preparing: select sr.*, dic.GoodsName, dic.UnitPrice unitPrice, su.UnitName unit from sj_returngoodsdetail as sr inner join sj_goodsdictionary as dic on return_goods_no=? and dic.GoodsID = sr.goods_id left join sj_unit su on dic.UnitID = su.UnitID 
2020/06/28-14:49:24 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==> Parameters: 90160020623BS001(String)
2020/06/28-14:49:24 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- <==      Total: 1
2020/06/28-14:49:47 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==>  Preparing: SELECT a.*, b.PERSONNAME audit_person_name, ph.ORGANIZATION hospital_name from (SELECT sr.*, pd.PERSONNAME collar_person_name from sj_returngoods as sr INNER JOIN pub_doctor as pd on sr.return_goods_no like concat('%',?,'%') and sr.return_goods_date >= ? and sr.return_goods_date < ? and sr.collar_person_id = pd.PERSONID ) as a left join pub_doctor as b on a.audit_person_id = b.PERSONID inner join pub_hospitalid ph on a.hospital_id = ph.HOSPITALID order by a.return_goods_date desc limit ?, ? 
2020/06/28-14:49:47 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-28 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/28-14:49:47 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- <==      Total: 1
2020/06/28-14:49:53 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==>  Preparing: select sr.*, dic.GoodsName, dic.UnitPrice unitPrice, su.UnitName unit from sj_returngoodsdetail as sr inner join sj_goodsdictionary as dic on return_goods_no=? and dic.GoodsID = sr.goods_id left join sj_unit su on dic.UnitID = su.UnitID 
2020/06/28-14:49:53 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==> Parameters: 90160020623BS001(String)
2020/06/28-14:49:53 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- <==      Total: 1
2020/06/28-14:49:54 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==>  Preparing: select sr.*, dic.GoodsName, dic.UnitPrice unitPrice, su.UnitName unit from sj_returngoodsdetail as sr inner join sj_goodsdictionary as dic on return_goods_no=? and dic.GoodsID = sr.goods_id left join sj_unit su on dic.UnitID = su.UnitID 
2020/06/28-14:49:54 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==> Parameters: 90160020623BS001(String)
2020/06/28-14:49:54 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- <==      Total: 1
2020/06/28-14:50:02 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==>  Preparing: SELECT * from sj_order where OrderNo like concat('%',?,'%') and OrderDate >= ? and OrderDate < ? and OrderState != 0 order by OrderDate desc limit ?, ? 
2020/06/28-14:50:02 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-28 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/28-14:50:02 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- <==      Total: 0
2020/06/28-14:50:04 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==>  Preparing: SELECT a.*, b.PERSONNAME audit_person_name, ph.ORGANIZATION hospital_name from (SELECT sr.*, pd.PERSONNAME collar_person_name from sj_returngoods as sr INNER JOIN pub_doctor as pd on sr.return_goods_no like concat('%',?,'%') and sr.return_goods_date >= ? and sr.return_goods_date < ? and sr.collar_person_id = pd.PERSONID ) as a left join pub_doctor as b on a.audit_person_id = b.PERSONID inner join pub_hospitalid ph on a.hospital_id = ph.HOSPITALID order by a.return_goods_date desc limit ?, ? 
2020/06/28-14:50:04 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-28 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/28-14:50:04 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- <==      Total: 1
2020/06/28-14:50:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==>  Preparing: select sr.*, dic.GoodsName, dic.UnitPrice unitPrice, su.UnitName unit from sj_returngoodsdetail as sr inner join sj_goodsdictionary as dic on return_goods_no=? and dic.GoodsID = sr.goods_id left join sj_unit su on dic.UnitID = su.UnitID 
2020/06/28-14:50:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==> Parameters: 90160020623BS001(String)
2020/06/28-14:50:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- <==      Total: 1
2020/06/28-14:50:05 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==>  Preparing: select sr.*, dic.GoodsName, dic.UnitPrice unitPrice, su.UnitName unit from sj_returngoodsdetail as sr inner join sj_goodsdictionary as dic on return_goods_no=? and dic.GoodsID = sr.goods_id left join sj_unit su on dic.UnitID = su.UnitID 
2020/06/28-14:50:05 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==> Parameters: 90160020623BS001(String)
2020/06/28-14:50:05 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- <==      Total: 1
2020/06/28-14:50:30 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==>  Preparing: SELECT a.*, b.PERSONNAME audit_person_name, ph.ORGANIZATION hospital_name from (SELECT sr.*, pd.PERSONNAME collar_person_name from sj_returngoods as sr INNER JOIN pub_doctor as pd on sr.return_goods_no like concat('%',?,'%') and sr.return_goods_date >= ? and sr.return_goods_date < ? and sr.collar_person_id = pd.PERSONID ) as a left join pub_doctor as b on a.audit_person_id = b.PERSONID inner join pub_hospitalid ph on a.hospital_id = ph.HOSPITALID order by a.return_goods_date desc limit ?, ? 
2020/06/28-14:50:30 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-28 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/28-14:50:30 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- <==      Total: 1
2020/06/28-14:50:35 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-14:51:11 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==>  Preparing: select sr.*, dic.GoodsName, dic.UnitPrice unitPrice, su.UnitName unit from sj_returngoodsdetail as sr inner join sj_goodsdictionary as dic on return_goods_no=? and dic.GoodsID = sr.goods_id left join sj_unit su on dic.UnitID = su.UnitID 
2020/06/28-14:51:11 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==> Parameters: 90160020623BS001(String)
2020/06/28-14:51:11 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- <==      Total: 1
2020/06/28-14:52:04 [http-nio-8083-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]- Initializing Spring DispatcherServlet 'dispatcherServlet'
2020/06/28-14:52:04 [http-nio-8083-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet- Initializing Servlet 'dispatcherServlet'
2020/06/28-14:52:04 [http-nio-8083-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet- Completed initialization in 9 ms
2020/06/28-14:52:04 [http-nio-8083-exec-1] ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]- Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.binding.BindingException: Parameter 'hospitalID' not found. Available parameters are [param5, size, keywords, endDate, start, param3, param4, param1, startDate, param2]] with root cause
org.apache.ibatis.binding.BindingException: Parameter 'hospitalID' not found. Available parameters are [param5, size, keywords, endDate, start, param3, param4, param1, startDate, param2]
	at org.apache.ibatis.binding.MapperMethod$ParamMap.get(MapperMethod.java:212) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.reflection.wrapper.MapWrapper.get(MapWrapper.java:45) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.reflection.MetaObject.getValue(MetaObject.java:122) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.executor.BaseExecutor.createCacheKey(BaseExecutor.java:219) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.executor.CachingExecutor.createCacheKey(CachingExecutor.java:146) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:82) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140) ~[mybatis-3.5.3.jar:3.5.3]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_231]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_231]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_231]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_231]
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426) ~[mybatis-spring-2.0.3.jar:2.0.3]
	at com.sun.proxy.$Proxy93.selectList(Unknown Source) ~[na:na]
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:223) ~[mybatis-spring-2.0.3.jar:2.0.3]
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:93) ~[mybatis-3.5.3.jar:3.5.3]
	at com.sun.proxy.$Proxy123.getReturnGoodsByPage(Unknown Source) ~[na:na]
	at com.huijian.rac.service.ReturnGoodsService.getReturnGoodsByPage(ReturnGoodsService.java:48) ~[classes/:na]
	at com.huijian.rac.controller.ReturnGoodsController.getReturnGoodsByPage(ReturnGoodsController.java:62) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_231]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_231]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_231]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_231]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_231]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_231]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_231]
2020/06/28-14:52:29 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-14:54:08 [main] INFO  com.huijian.rac.RacStockServiceApplication- No active profile set, falling back to default profiles: default
2020/06/28-14:54:09 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Multiple Spring Data modules found, entering strict repository configuration mode!
2020/06/28-14:54:09 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Bootstrapping Spring Data repositories in DEFAULT mode.
2020/06/28-14:54:09 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Finished Spring Data repository scanning in 21ms. Found 0 repository interfaces.
2020/06/28-14:54:09 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'deliveryUnitMapper' and 'com.huijian.rac.mapper.DeliveryUnitMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-14:54:09 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'departMapper' and 'com.huijian.rac.mapper.DepartMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-14:54:09 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'discardDetailMapper' and 'com.huijian.rac.mapper.DiscardDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-14:54:09 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'discardMapper' and 'com.huijian.rac.mapper.DiscardMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-14:54:09 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsDictionaryMapper' and 'com.huijian.rac.mapper.GoodsDictionaryMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-14:54:09 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsRecordMapper' and 'com.huijian.rac.mapper.GoodsRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-14:54:09 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsSupplierMapper' and 'com.huijian.rac.mapper.GoodsSupplierMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-14:54:09 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'leaveStockListDetailMapper' and 'com.huijian.rac.mapper.LeaveStockListDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-14:54:09 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'materialMapper' and 'com.huijian.rac.mapper.MaterialMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-14:54:09 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'outboundRecordMapper' and 'com.huijian.rac.mapper.OutboundRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-14:54:09 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'outboundSecondRecordMapper' and 'com.huijian.rac.mapper.OutboundSecondRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-14:54:09 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'reagentMapper' and 'com.huijian.rac.mapper.ReagentMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-14:54:09 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'returnGoodsDetailMapper' and 'com.huijian.rac.mapper.ReturnGoodsDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-14:54:09 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'returnGoodsMapper' and 'com.huijian.rac.mapper.ReturnGoodsMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-14:54:09 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'secondGoodsRecordMapper' and 'com.huijian.rac.mapper.SecondGoodsRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-14:54:09 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'secondLeaveStockListDetailMapper' and 'com.huijian.rac.mapper.SecondLeaveStockListDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-14:54:09 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'unitMapper' and 'com.huijian.rac.mapper.UnitMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-14:54:09 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseMapper' and 'com.huijian.rac.mapper.WarehouseMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-14:54:09 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseRecordMapper' and 'com.huijian.rac.mapper.WarehouseRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-14:54:09 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseSecondMapper' and 'com.huijian.rac.mapper.WarehouseSecondMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-14:54:09 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseSecondRecordMapper' and 'com.huijian.rac.mapper.WarehouseSecondRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-14:54:09 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'departsMapper' and 'com.huijian.rac.mapper.DepartsMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-14:54:09 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsPackageDetailMapper' and 'com.huijian.rac.mapper.GoodsPackageDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-14:54:09 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsPackageMapper' and 'com.huijian.rac.mapper.GoodsPackageMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-14:54:09 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'hospitalMapper' and 'com.huijian.rac.mapper.HospitalMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-14:54:09 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'leaveStockListSecondMapper' and 'com.huijian.rac.mapper.LeaveStockListSecondMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-14:54:09 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderDetailMapper' and 'com.huijian.rac.mapper.OrderDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-14:54:09 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderMapper' and 'com.huijian.rac.mapper.OrderMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-14:54:09 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderOperateMapper' and 'com.huijian.rac.mapper.OrderOperateMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-14:54:09 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderReturnDetailMapper' and 'com.huijian.rac.mapper.OrderReturnDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-14:54:09 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderReturnMapper' and 'com.huijian.rac.mapper.OrderReturnMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-14:54:09 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderReviewMapper' and 'com.huijian.rac.mapper.OrderReviewMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-14:54:09 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- No MyBatis mapper was found in '[com.huijian.rac.mapper]' package. Please check your configuration.
2020/06/28-14:54:09 [main] INFO  org.springframework.cloud.context.scope.GenericScope- BeanFactory id=b2907805-f796-3a2c-9729-4f51ea31ae6e
2020/06/28-14:54:09 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/28-14:54:09 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'redisConfig' of type [com.huijian.rac.config.RedisConfig$$EnhancerBySpringCGLIB$$21194923] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/28-14:54:09 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/28-14:54:09 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat initialized with port(s): 8083 (http)
2020/06/28-14:54:09 [main] INFO  org.apache.catalina.core.StandardService- Starting service [Tomcat]
2020/06/28-14:54:09 [main] INFO  org.apache.catalina.core.StandardEngine- Starting Servlet engine: [Apache Tomcat/9.0.27]
2020/06/28-14:54:09 [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]- Initializing Spring embedded WebApplicationContext
2020/06/28-14:54:09 [main] INFO  org.springframework.web.context.ContextLoader- Root WebApplicationContext: initialization completed in 1286 ms
2020/06/28-14:54:10 [main] WARN  com.netflix.config.sources.URLConfigurationSource- No URLs will be polled as dynamic configuration sources.
2020/06/28-14:54:10 [main] INFO  com.netflix.config.sources.URLConfigurationSource- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020/06/28-14:54:10 [main] WARN  com.netflix.config.sources.URLConfigurationSource- No URLs will be polled as dynamic configuration sources.
2020/06/28-14:54:10 [main] INFO  com.netflix.config.sources.URLConfigurationSource- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020/06/28-14:54:10 [main] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor- Initializing ExecutorService 'applicationTaskExecutor'
2020/06/28-14:54:11 [main] WARN  org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger- You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020/06/28-14:54:11 [main] WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger- Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020/06/28-14:54:12 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory- Setting initial instance status as: STARTING
2020/06/28-14:54:12 [main] INFO  com.netflix.discovery.DiscoveryClient- Initializing Eureka in region us-east-1
2020/06/28-14:54:12 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using JSON encoding codec LegacyJacksonJson
2020/06/28-14:54:12 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using JSON decoding codec LegacyJacksonJson
2020/06/28-14:54:12 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using XML encoding codec XStreamXml
2020/06/28-14:54:12 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using XML decoding codec XStreamXml
2020/06/28-14:54:12 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-14:54:12 [main] INFO  com.netflix.discovery.DiscoveryClient- Disable delta property : false
2020/06/28-14:54:12 [main] INFO  com.netflix.discovery.DiscoveryClient- Single vip registry refresh property : null
2020/06/28-14:54:12 [main] INFO  com.netflix.discovery.DiscoveryClient- Force full registry fetch : false
2020/06/28-14:54:12 [main] INFO  com.netflix.discovery.DiscoveryClient- Application is null : false
2020/06/28-14:54:12 [main] INFO  com.netflix.discovery.DiscoveryClient- Registered Applications size is zero : true
2020/06/28-14:54:12 [main] INFO  com.netflix.discovery.DiscoveryClient- Application version is -1: true
2020/06/28-14:54:12 [main] INFO  com.netflix.discovery.DiscoveryClient- Getting all instance registry info from the eureka server
2020/06/28-14:54:12 [main] INFO  com.netflix.discovery.DiscoveryClient- The response status is 200
2020/06/28-14:54:12 [main] INFO  com.netflix.discovery.DiscoveryClient- Starting heartbeat executor: renew interval is: 30
2020/06/28-14:54:12 [main] INFO  com.netflix.discovery.InstanceInfoReplicator- InstanceInfoReplicator onDemand update allowed rate per min is 4
2020/06/28-14:54:12 [main] INFO  com.netflix.discovery.DiscoveryClient- Discovery Client initialized at timestamp 1593327252827 with initial instances count: 2
2020/06/28-14:54:12 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry- Registering application RAC-STOCK-SERVICE with eureka with status UP
2020/06/28-14:54:12 [main] INFO  com.netflix.discovery.DiscoveryClient- Saw local status change event StatusChangeEvent [timestamp=1593327252830, current=UP, previous=STARTING]
2020/06/28-14:54:12 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-STOCK-SERVICE/MSI.mshome.net:rac-stock-service:8083: registering service...
2020/06/28-14:54:12 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Attempting to connect to: [192.168.161.129:5672]
2020/06/28-14:54:12 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Created new connection: rabbitConnectionFactory#1acb74ad:0/SimpleConnection@53ba7997 [delegate=amqp://admin@192.168.161.129:5672/, localPort= 51165]
2020/06/28-14:54:12 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-STOCK-SERVICE/MSI.mshome.net:rac-stock-service:8083 - registration status: 204
2020/06/28-14:54:13 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat started on port(s): 8083 (http) with context path ''
2020/06/28-14:54:13 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration- Updating port to 8083
2020/06/28-14:54:13 [main] INFO  com.huijian.rac.RacStockServiceApplication- Started RacStockServiceApplication in 5.812 seconds (JVM running for 6.533)
2020/06/28-14:54:47 [http-nio-8083-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]- Initializing Spring DispatcherServlet 'dispatcherServlet'
2020/06/28-14:54:47 [http-nio-8083-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet- Initializing Servlet 'dispatcherServlet'
2020/06/28-14:54:47 [http-nio-8083-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet- Completed initialization in 5 ms
2020/06/28-14:54:47 [http-nio-8083-exec-1] INFO  com.zaxxer.hikari.HikariDataSource- HikariPool-1 - Starting...
2020/06/28-14:54:48 [http-nio-8083-exec-1] INFO  com.zaxxer.hikari.HikariDataSource- HikariPool-1 - Start completed.
2020/06/28-14:54:48 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.ReturnGoodsMapper.getReturnGoodsByPage- ==>  Preparing: SELECT a.*, b.PERSONNAME audit_person_name from (SELECT sr.*, pd.PERSONNAME collar_person_name from sj_returngoods as sr INNER JOIN pub_doctor as pd on sr.return_goods_no like concat('%',?,'%') and sr.return_goods_date >= ? and sr.return_goods_date < ? and sr.collar_person_id = pd.PERSONID and sr.hospital_id = ?) as a left join pub_doctor as b on a.audit_person_id = b.PERSONID order by a.return_goods_date desc limit ?, ? 
2020/06/28-14:54:48 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.ReturnGoodsMapper.getReturnGoodsByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-28 23:59:59.0(Timestamp), 901600(String), 0(Integer), 10(Integer)
2020/06/28-14:54:48 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.ReturnGoodsMapper.getReturnGoodsByPage- <==      Total: 1
2020/06/28-14:55:31 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.ReturnGoodsMapper.getReturnGoodsByPage- ==>  Preparing: SELECT a.*, b.PERSONNAME audit_person_name from (SELECT sr.*, pd.PERSONNAME collar_person_name from sj_returngoods as sr INNER JOIN pub_doctor as pd on sr.return_goods_no like concat('%',?,'%') and sr.return_goods_date >= ? and sr.return_goods_date < ? and sr.collar_person_id = pd.PERSONID and sr.hospital_id = ?) as a left join pub_doctor as b on a.audit_person_id = b.PERSONID order by a.return_goods_date desc limit ?, ? 
2020/06/28-14:55:31 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.ReturnGoodsMapper.getReturnGoodsByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-28 23:59:59.0(Timestamp), 901600(String), 0(Integer), 10(Integer)
2020/06/28-14:55:31 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.ReturnGoodsMapper.getReturnGoodsByPage- <==      Total: 2
2020/06/28-14:55:38 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==>  Preparing: SELECT a.*, b.PERSONNAME audit_person_name, ph.ORGANIZATION hospital_name from (SELECT sr.*, pd.PERSONNAME collar_person_name from sj_returngoods as sr INNER JOIN pub_doctor as pd on sr.return_goods_no like concat('%',?,'%') and sr.return_goods_date >= ? and sr.return_goods_date < ? and sr.collar_person_id = pd.PERSONID ) as a left join pub_doctor as b on a.audit_person_id = b.PERSONID inner join pub_hospitalid ph on a.hospital_id = ph.HOSPITALID order by a.return_goods_date desc limit ?, ? 
2020/06/28-14:55:38 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-28 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/28-14:55:38 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- <==      Total: 2
2020/06/28-14:55:41 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==>  Preparing: select sr.*, dic.GoodsName, dic.UnitPrice unitPrice, su.UnitName unit from sj_returngoodsdetail as sr inner join sj_goodsdictionary as dic on return_goods_no=? and dic.GoodsID = sr.goods_id left join sj_unit su on dic.UnitID = su.UnitID 
2020/06/28-14:55:41 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==> Parameters: 90160020623BS001(String)
2020/06/28-14:55:41 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- <==      Total: 1
2020/06/28-14:55:42 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==>  Preparing: select sr.*, dic.GoodsName, dic.UnitPrice unitPrice, su.UnitName unit from sj_returngoodsdetail as sr inner join sj_goodsdictionary as dic on return_goods_no=? and dic.GoodsID = sr.goods_id left join sj_unit su on dic.UnitID = su.UnitID 
2020/06/28-14:55:42 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==> Parameters: 90160020624BS001(String)
2020/06/28-14:55:42 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- <==      Total: 1
2020/06/28-14:55:43 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==>  Preparing: select sr.*, dic.GoodsName, dic.UnitPrice unitPrice, su.UnitName unit from sj_returngoodsdetail as sr inner join sj_goodsdictionary as dic on return_goods_no=? and dic.GoodsID = sr.goods_id left join sj_unit su on dic.UnitID = su.UnitID 
2020/06/28-14:55:43 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==> Parameters: 90160020623BS001(String)
2020/06/28-14:55:43 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- <==      Total: 1
2020/06/28-14:55:43 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==>  Preparing: select sr.*, dic.GoodsName, dic.UnitPrice unitPrice, su.UnitName unit from sj_returngoodsdetail as sr inner join sj_goodsdictionary as dic on return_goods_no=? and dic.GoodsID = sr.goods_id left join sj_unit su on dic.UnitID = su.UnitID 
2020/06/28-14:55:43 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==> Parameters: 90160020624BS001(String)
2020/06/28-14:55:43 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- <==      Total: 1
2020/06/28-14:57:29 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-14:59:12 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-15:02:29 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-15:03:25 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==>  Preparing: select sr.*, dic.GoodsName, dic.UnitPrice unitPrice, su.UnitName unit from sj_returngoodsdetail as sr inner join sj_goodsdictionary as dic on return_goods_no=? and dic.GoodsID = sr.goods_id left join sj_unit su on dic.UnitID = su.UnitID 
2020/06/28-15:03:25 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==> Parameters: 90160020624BS001(String)
2020/06/28-15:03:25 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- <==      Total: 1
2020/06/28-15:04:12 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-15:05:17 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==>  Preparing: select sr.*, dic.GoodsName, dic.UnitPrice unitPrice, su.UnitName unit from sj_returngoodsdetail as sr inner join sj_goodsdictionary as dic on return_goods_no=? and dic.GoodsID = sr.goods_id left join sj_unit su on dic.UnitID = su.UnitID 
2020/06/28-15:05:17 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==> Parameters: 90160020624BS001(String)
2020/06/28-15:05:17 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- <==      Total: 1
2020/06/28-15:05:17 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==>  Preparing: select sr.*, dic.GoodsName, dic.UnitPrice unitPrice, su.UnitName unit from sj_returngoodsdetail as sr inner join sj_goodsdictionary as dic on return_goods_no=? and dic.GoodsID = sr.goods_id left join sj_unit su on dic.UnitID = su.UnitID 
2020/06/28-15:05:17 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==> Parameters: 90160020624BS001(String)
2020/06/28-15:05:18 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- <==      Total: 1
2020/06/28-15:07:22 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==>  Preparing: select sr.*, dic.GoodsName, dic.UnitPrice unitPrice, su.UnitName unit from sj_returngoodsdetail as sr inner join sj_goodsdictionary as dic on return_goods_no=? and dic.GoodsID = sr.goods_id left join sj_unit su on dic.UnitID = su.UnitID 
2020/06/28-15:07:22 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==> Parameters: 90160020623BS001(String)
2020/06/28-15:07:22 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- <==      Total: 1
2020/06/28-15:07:23 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==>  Preparing: select sr.*, dic.GoodsName, dic.UnitPrice unitPrice, su.UnitName unit from sj_returngoodsdetail as sr inner join sj_goodsdictionary as dic on return_goods_no=? and dic.GoodsID = sr.goods_id left join sj_unit su on dic.UnitID = su.UnitID 
2020/06/28-15:07:23 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==> Parameters: 90160020624BS001(String)
2020/06/28-15:07:23 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- <==      Total: 1
2020/06/28-15:07:24 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==>  Preparing: select sr.*, dic.GoodsName, dic.UnitPrice unitPrice, su.UnitName unit from sj_returngoodsdetail as sr inner join sj_goodsdictionary as dic on return_goods_no=? and dic.GoodsID = sr.goods_id left join sj_unit su on dic.UnitID = su.UnitID 
2020/06/28-15:07:24 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==> Parameters: 90160020624BS001(String)
2020/06/28-15:07:24 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- <==      Total: 1
2020/06/28-15:07:29 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==>  Preparing: select sr.*, dic.GoodsName, dic.UnitPrice unitPrice, su.UnitName unit from sj_returngoodsdetail as sr inner join sj_goodsdictionary as dic on return_goods_no=? and dic.GoodsID = sr.goods_id left join sj_unit su on dic.UnitID = su.UnitID 
2020/06/28-15:07:29 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==> Parameters: 90160020623BS001(String)
2020/06/28-15:07:29 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- <==      Total: 1
2020/06/28-15:07:29 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-15:07:30 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==>  Preparing: select sr.*, dic.GoodsName, dic.UnitPrice unitPrice, su.UnitName unit from sj_returngoodsdetail as sr inner join sj_goodsdictionary as dic on return_goods_no=? and dic.GoodsID = sr.goods_id left join sj_unit su on dic.UnitID = su.UnitID 
2020/06/28-15:07:30 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==> Parameters: 90160020623BS001(String)
2020/06/28-15:07:30 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- <==      Total: 1
2020/06/28-15:07:36 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==>  Preparing: select sr.*, dic.GoodsName, dic.UnitPrice unitPrice, su.UnitName unit from sj_returngoodsdetail as sr inner join sj_goodsdictionary as dic on return_goods_no=? and dic.GoodsID = sr.goods_id left join sj_unit su on dic.UnitID = su.UnitID 
2020/06/28-15:07:36 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==> Parameters: 90160020624BS001(String)
2020/06/28-15:07:36 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- <==      Total: 1
2020/06/28-15:07:38 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==>  Preparing: select sr.*, dic.GoodsName, dic.UnitPrice unitPrice, su.UnitName unit from sj_returngoodsdetail as sr inner join sj_goodsdictionary as dic on return_goods_no=? and dic.GoodsID = sr.goods_id left join sj_unit su on dic.UnitID = su.UnitID 
2020/06/28-15:07:38 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==> Parameters: 90160020623BS001(String)
2020/06/28-15:07:38 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- <==      Total: 1
2020/06/28-15:07:40 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==>  Preparing: select sr.*, dic.GoodsName, dic.UnitPrice unitPrice, su.UnitName unit from sj_returngoodsdetail as sr inner join sj_goodsdictionary as dic on return_goods_no=? and dic.GoodsID = sr.goods_id left join sj_unit su on dic.UnitID = su.UnitID 
2020/06/28-15:07:40 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==> Parameters: 90160020623BS001(String)
2020/06/28-15:07:40 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- <==      Total: 1
2020/06/28-15:07:42 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==>  Preparing: SELECT * from sj_order where OrderNo like concat('%',?,'%') and OrderDate >= ? and OrderDate < ? and OrderState != 0 order by OrderDate desc limit ?, ? 
2020/06/28-15:07:42 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-28 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/28-15:07:42 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- <==      Total: 0
2020/06/28-15:07:43 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==>  Preparing: SELECT a.*, b.PERSONNAME audit_person_name, ph.ORGANIZATION hospital_name from (SELECT sr.*, pd.PERSONNAME collar_person_name from sj_returngoods as sr INNER JOIN pub_doctor as pd on sr.return_goods_no like concat('%',?,'%') and sr.return_goods_date >= ? and sr.return_goods_date < ? and sr.collar_person_id = pd.PERSONID ) as a left join pub_doctor as b on a.audit_person_id = b.PERSONID inner join pub_hospitalid ph on a.hospital_id = ph.HOSPITALID order by a.return_goods_date desc limit ?, ? 
2020/06/28-15:07:43 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-28 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/28-15:07:43 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- <==      Total: 2
2020/06/28-15:07:43 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==>  Preparing: select sr.*, dic.GoodsName, dic.UnitPrice unitPrice, su.UnitName unit from sj_returngoodsdetail as sr inner join sj_goodsdictionary as dic on return_goods_no=? and dic.GoodsID = sr.goods_id left join sj_unit su on dic.UnitID = su.UnitID 
2020/06/28-15:07:43 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==> Parameters: 90160020624BS001(String)
2020/06/28-15:07:44 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- <==      Total: 1
2020/06/28-15:07:45 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==>  Preparing: select sr.*, dic.GoodsName, dic.UnitPrice unitPrice, su.UnitName unit from sj_returngoodsdetail as sr inner join sj_goodsdictionary as dic on return_goods_no=? and dic.GoodsID = sr.goods_id left join sj_unit su on dic.UnitID = su.UnitID 
2020/06/28-15:07:45 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==> Parameters: 90160020623BS001(String)
2020/06/28-15:07:45 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- <==      Total: 1
2020/06/28-15:08:24 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==>  Preparing: SELECT * from sj_order where OrderNo like concat('%',?,'%') and OrderDate >= ? and OrderDate < ? and OrderState != 0 order by OrderDate desc limit ?, ? 
2020/06/28-15:08:24 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-28 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/28-15:08:24 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- <==      Total: 0
2020/06/28-15:08:24 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==>  Preparing: SELECT a.*, b.PERSONNAME audit_person_name, ph.ORGANIZATION hospital_name from (SELECT sr.*, pd.PERSONNAME collar_person_name from sj_returngoods as sr INNER JOIN pub_doctor as pd on sr.return_goods_no like concat('%',?,'%') and sr.return_goods_date >= ? and sr.return_goods_date < ? and sr.collar_person_id = pd.PERSONID ) as a left join pub_doctor as b on a.audit_person_id = b.PERSONID inner join pub_hospitalid ph on a.hospital_id = ph.HOSPITALID order by a.return_goods_date desc limit ?, ? 
2020/06/28-15:08:24 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-28 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/28-15:08:24 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- <==      Total: 2
2020/06/28-15:08:25 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==>  Preparing: select sr.*, dic.GoodsName, dic.UnitPrice unitPrice, su.UnitName unit from sj_returngoodsdetail as sr inner join sj_goodsdictionary as dic on return_goods_no=? and dic.GoodsID = sr.goods_id left join sj_unit su on dic.UnitID = su.UnitID 
2020/06/28-15:08:25 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==> Parameters: 90160020624BS001(String)
2020/06/28-15:08:25 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- <==      Total: 1
2020/06/28-15:08:26 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==>  Preparing: select sr.*, dic.GoodsName, dic.UnitPrice unitPrice, su.UnitName unit from sj_returngoodsdetail as sr inner join sj_goodsdictionary as dic on return_goods_no=? and dic.GoodsID = sr.goods_id left join sj_unit su on dic.UnitID = su.UnitID 
2020/06/28-15:08:26 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==> Parameters: 90160020624BS001(String)
2020/06/28-15:08:26 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- <==      Total: 1
2020/06/28-15:08:27 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==>  Preparing: select sr.*, dic.GoodsName, dic.UnitPrice unitPrice, su.UnitName unit from sj_returngoodsdetail as sr inner join sj_goodsdictionary as dic on return_goods_no=? and dic.GoodsID = sr.goods_id left join sj_unit su on dic.UnitID = su.UnitID 
2020/06/28-15:08:27 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==> Parameters: 90160020623BS001(String)
2020/06/28-15:08:27 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==>  Preparing: select sr.*, dic.GoodsName, dic.UnitPrice unitPrice, su.UnitName unit from sj_returngoodsdetail as sr inner join sj_goodsdictionary as dic on return_goods_no=? and dic.GoodsID = sr.goods_id left join sj_unit su on dic.UnitID = su.UnitID 
2020/06/28-15:08:27 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==> Parameters: 90160020623BS001(String)
2020/06/28-15:08:27 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- <==      Total: 1
2020/06/28-15:08:27 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- <==      Total: 1
2020/06/28-15:08:43 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==>  Preparing: select sr.*, dic.GoodsName, dic.UnitPrice unitPrice, su.UnitName unit from sj_returngoodsdetail as sr inner join sj_goodsdictionary as dic on return_goods_no=? and dic.GoodsID = sr.goods_id left join sj_unit su on dic.UnitID = su.UnitID 
2020/06/28-15:08:43 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==> Parameters: 90160020623BS001(String)
2020/06/28-15:08:43 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==>  Preparing: select sr.*, dic.GoodsName, dic.UnitPrice unitPrice, su.UnitName unit from sj_returngoodsdetail as sr inner join sj_goodsdictionary as dic on return_goods_no=? and dic.GoodsID = sr.goods_id left join sj_unit su on dic.UnitID = su.UnitID 
2020/06/28-15:08:43 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==> Parameters: 90160020623BS001(String)
2020/06/28-15:08:43 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- <==      Total: 1
2020/06/28-15:08:43 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- <==      Total: 1
2020/06/28-15:09:05 [http-nio-8084-exec-21] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==>  Preparing: SELECT a.*, b.PERSONNAME audit_person_name, ph.ORGANIZATION hospital_name from (SELECT sr.*, pd.PERSONNAME collar_person_name from sj_returngoods as sr INNER JOIN pub_doctor as pd on sr.return_goods_no like concat('%',?,'%') and sr.return_goods_date >= ? and sr.return_goods_date < ? and sr.collar_person_id = pd.PERSONID ) as a left join pub_doctor as b on a.audit_person_id = b.PERSONID inner join pub_hospitalid ph on a.hospital_id = ph.HOSPITALID order by a.return_goods_date desc limit ?, ? 
2020/06/28-15:09:05 [http-nio-8084-exec-21] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-28 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/28-15:09:05 [http-nio-8084-exec-21] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- <==      Total: 2
2020/06/28-15:09:06 [http-nio-8084-exec-11] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==>  Preparing: select sr.*, dic.GoodsName, dic.UnitPrice unitPrice, su.UnitName unit from sj_returngoodsdetail as sr inner join sj_goodsdictionary as dic on return_goods_no=? and dic.GoodsID = sr.goods_id left join sj_unit su on dic.UnitID = su.UnitID 
2020/06/28-15:09:06 [http-nio-8084-exec-11] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==> Parameters: 90160020623BS001(String)
2020/06/28-15:09:06 [http-nio-8084-exec-11] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- <==      Total: 1
2020/06/28-15:09:06 [http-nio-8084-exec-30] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==>  Preparing: select sr.*, dic.GoodsName, dic.UnitPrice unitPrice, su.UnitName unit from sj_returngoodsdetail as sr inner join sj_goodsdictionary as dic on return_goods_no=? and dic.GoodsID = sr.goods_id left join sj_unit su on dic.UnitID = su.UnitID 
2020/06/28-15:09:06 [http-nio-8084-exec-30] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==> Parameters: 90160020623BS001(String)
2020/06/28-15:09:06 [http-nio-8084-exec-30] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- <==      Total: 1
2020/06/28-15:09:10 [http-nio-8084-exec-26] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==>  Preparing: SELECT a.*, b.PERSONNAME audit_person_name, ph.ORGANIZATION hospital_name from (SELECT sr.*, pd.PERSONNAME collar_person_name from sj_returngoods as sr INNER JOIN pub_doctor as pd on sr.return_goods_no like concat('%',?,'%') and sr.return_goods_date >= ? and sr.return_goods_date < ? and sr.collar_person_id = pd.PERSONID ) as a left join pub_doctor as b on a.audit_person_id = b.PERSONID inner join pub_hospitalid ph on a.hospital_id = ph.HOSPITALID order by a.return_goods_date desc limit ?, ? 
2020/06/28-15:09:10 [http-nio-8084-exec-26] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-28 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/28-15:09:10 [http-nio-8084-exec-26] DEBUG com.huijian.rac.mapper.OrderReturnMapper.getReturnGoodsByPage- <==      Total: 2
2020/06/28-15:09:12 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-15:09:16 [http-nio-8084-exec-36] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==>  Preparing: select sr.*, dic.GoodsName, dic.UnitPrice unitPrice, su.UnitName unit from sj_returngoodsdetail as sr inner join sj_goodsdictionary as dic on return_goods_no=? and dic.GoodsID = sr.goods_id left join sj_unit su on dic.UnitID = su.UnitID 
2020/06/28-15:09:16 [http-nio-8084-exec-36] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==> Parameters: 90160020623BS001(String)
2020/06/28-15:09:16 [http-nio-8084-exec-36] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- <==      Total: 1
2020/06/28-15:09:17 [http-nio-8084-exec-41] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==>  Preparing: select sr.*, dic.GoodsName, dic.UnitPrice unitPrice, su.UnitName unit from sj_returngoodsdetail as sr inner join sj_goodsdictionary as dic on return_goods_no=? and dic.GoodsID = sr.goods_id left join sj_unit su on dic.UnitID = su.UnitID 
2020/06/28-15:09:17 [http-nio-8084-exec-41] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- ==> Parameters: 90160020624BS001(String)
2020/06/28-15:09:17 [http-nio-8084-exec-41] DEBUG com.huijian.rac.mapper.OrderReturnDetailMapper.inquiryByID- <==      Total: 1
2020/06/28-15:10:28 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.OutboundRecordMapper.getOutboundRecordByPage- ==>  Preparing: SELECT * from sj_leavestocklist where LeaveStockNo like concat('%',?,'%') and LeaveStock >= ? and LeaveStock < ? order by LeaveStockNo desc limit ?, ? 
2020/06/28-15:10:28 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.OutboundRecordMapper.getOutboundRecordByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-28 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/28-15:10:28 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.OutboundRecordMapper.getOutboundRecordByPage- <==      Total: 1
2020/06/28-15:10:29 [http-nio-8083-exec-6] INFO  com.netflix.config.ChainedDynamicProperty- Flipping property: rac-order-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020/06/28-15:10:29 [http-nio-8083-exec-6] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer- Shutdown hook installed for: NFLoadBalancer-PingTimer-rac-order-service
2020/06/28-15:10:29 [http-nio-8083-exec-6] INFO  com.netflix.loadbalancer.BaseLoadBalancer- Client: rac-order-service instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=rac-order-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020/06/28-15:10:29 [http-nio-8083-exec-6] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer- Using serverListUpdater PollingServerListUpdater
2020/06/28-15:10:29 [http-nio-8083-exec-6] INFO  com.netflix.config.ChainedDynamicProperty- Flipping property: rac-order-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020/06/28-15:10:29 [http-nio-8083-exec-6] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer- DynamicServerListLoadBalancer for client rac-order-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=rac-order-service,current list of Servers=[MSI.mshome.net:8084],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:MSI.mshome.net:8084;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 GMT+08:00 1970;	First connection made: Thu Jan 01 08:00:00 GMT+08:00 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@29d70785
2020/06/28-15:10:29 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==>  Preparing: select OrderState from sj_order where OrderNo = ? 
2020/06/28-15:10:29 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==> Parameters: 9016002000027(String)
2020/06/28-15:10:29 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- <==      Total: 1
2020/06/28-15:10:30 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty- Flipping property: rac-order-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020/06/28-15:12:29 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-15:14:12 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-15:17:11 [http-nio-8083-exec-8] DEBUG com.huijian.rac.mapper.LeaveStockListDetailMapper.inquiryLeaveStockListDetail- ==>  Preparing: select * from sj_leavestocklistdetail where LeaveStockNo = ? 
2020/06/28-15:17:11 [http-nio-8083-exec-8] DEBUG com.huijian.rac.mapper.LeaveStockListDetailMapper.inquiryLeaveStockListDetail- ==> Parameters: 202000013(Integer)
2020/06/28-15:17:11 [http-nio-8083-exec-8] DEBUG com.huijian.rac.mapper.LeaveStockListDetailMapper.inquiryLeaveStockListDetail- <==      Total: 0
2020/06/28-15:17:18 [http-nio-8083-exec-10] DEBUG com.huijian.rac.mapper.LeaveStockListDetailMapper.inquiryLeaveStockListDetail- ==>  Preparing: select * from sj_leavestocklistdetail where LeaveStockNo = ? 
2020/06/28-15:17:18 [http-nio-8083-exec-10] DEBUG com.huijian.rac.mapper.LeaveStockListDetailMapper.inquiryLeaveStockListDetail- ==> Parameters: 202000013(Integer)
2020/06/28-15:17:18 [http-nio-8083-exec-10] DEBUG com.huijian.rac.mapper.LeaveStockListDetailMapper.inquiryLeaveStockListDetail- <==      Total: 0
2020/06/28-15:17:19 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.LeaveStockListDetailMapper.inquiryLeaveStockListDetail- ==>  Preparing: select * from sj_leavestocklistdetail where LeaveStockNo = ? 
2020/06/28-15:17:19 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.LeaveStockListDetailMapper.inquiryLeaveStockListDetail- ==> Parameters: 202000013(Integer)
2020/06/28-15:17:19 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.LeaveStockListDetailMapper.inquiryLeaveStockListDetail- <==      Total: 0
2020/06/28-15:17:25 [http-nio-8083-exec-7] DEBUG com.huijian.rac.mapper.LeaveStockListDetailMapper.inquiryLeaveStockListDetail- ==>  Preparing: select * from sj_leavestocklistdetail where LeaveStockNo = ? 
2020/06/28-15:17:25 [http-nio-8083-exec-7] DEBUG com.huijian.rac.mapper.LeaveStockListDetailMapper.inquiryLeaveStockListDetail- ==> Parameters: 202000013(Integer)
2020/06/28-15:17:25 [http-nio-8083-exec-7] DEBUG com.huijian.rac.mapper.LeaveStockListDetailMapper.inquiryLeaveStockListDetail- <==      Total: 0
2020/06/28-15:17:29 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-15:19:05 [http-nio-8084-exec-21] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==>  Preparing: select count(*) from sj_order where YEAR(OrderDate)=YEAR(NOW()); 
2020/06/28-15:19:05 [http-nio-8084-exec-21] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==> Parameters: 
2020/06/28-15:19:05 [http-nio-8084-exec-11] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==>  Preparing: select * from pub_depart where HOSPITALID=? 
2020/06/28-15:19:05 [http-nio-8084-exec-11] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==> Parameters: 901600(String)
2020/06/28-15:19:05 [http-nio-8084-exec-21] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- <==      Total: 1
2020/06/28-15:19:05 [http-nio-8084-exec-11] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- <==      Total: 22
2020/06/28-15:19:12 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-15:19:23 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- ==>  Preparing: select sg.*, su.UnitName from sj_goodsdictionary sg INNER join sj_unit su on GoodsName like concat('%',?,'%') and sg.UnitID = su.UnitID 
2020/06/28-15:19:23 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- ==> Parameters: 1(String)
2020/06/28-15:19:23 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- <==      Total: 11
2020/06/28-15:19:23 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-15:19:23 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-15:19:24 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-15:19:24 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-15:19:24 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 1(Integer), 901600(String)
2020/06/28-15:19:24 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-15:19:24 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-15:19:24 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-15:19:24 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-15:19:24 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-15:19:24 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 10(Integer), 901600(String)
2020/06/28-15:19:24 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-15:19:24 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-15:19:24 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-15:19:24 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-15:19:24 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-15:19:24 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 11(Integer), 901600(String)
2020/06/28-15:19:24 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-15:19:24 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-15:19:24 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 2(Integer)
2020/06/28-15:19:24 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-15:19:24 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-15:19:24 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 12(Integer), 901600(String)
2020/06/28-15:19:24 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-15:19:24 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-15:19:24 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-15:19:24 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-15:19:24 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-15:19:24 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 13(Integer), 901600(String)
2020/06/28-15:19:24 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-15:19:24 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-15:19:24 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-15:19:24 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-15:19:24 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-15:19:24 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 14(Integer), 901600(String)
2020/06/28-15:19:24 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-15:19:24 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-15:19:24 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 2(Integer)
2020/06/28-15:19:24 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-15:19:24 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-15:19:24 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 15(Integer), 901600(String)
2020/06/28-15:19:24 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-15:19:24 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-15:19:24 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-15:19:24 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-15:19:24 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-15:19:24 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 16(Integer), 901600(String)
2020/06/28-15:19:24 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-15:19:24 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-15:19:24 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-15:19:24 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-15:19:24 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-15:19:24 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 17(Integer), 901600(String)
2020/06/28-15:19:24 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-15:19:24 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-15:19:24 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 2(Integer)
2020/06/28-15:19:24 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-15:19:24 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-15:19:24 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 18(Integer), 901600(String)
2020/06/28-15:19:24 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-15:19:24 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-15:19:24 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-15:19:24 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-15:19:24 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-15:19:24 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 19(Integer), 901600(String)
2020/06/28-15:19:24 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-15:19:24 [http-nio-8084-exec-30] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- ==>  Preparing: select * from sj_order where HospitalID = ? order by OrderDate DESC limit 1; 
2020/06/28-15:19:24 [http-nio-8084-exec-30] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- ==> Parameters: 901600(String)
2020/06/28-15:19:24 [http-nio-8084-exec-30] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- <==      Total: 1
2020/06/28-15:19:24 [http-nio-8084-exec-30] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- ==>  Preparing: select * from sj_orderdetail where OrderNo = ? and GoodsID in ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) 
2020/06/28-15:19:24 [http-nio-8084-exec-30] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- ==> Parameters: 9016002000038(String), 1(Integer), 10(Integer), 11(Integer), 12(Integer), 13(Integer), 14(Integer), 15(Integer), 16(Integer), 17(Integer), 18(Integer), 19(Integer)
2020/06/28-15:19:24 [http-nio-8084-exec-30] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- <==      Total: 1
2020/06/28-15:19:24 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- ==>  Preparing: select * from sj_secondleavestocklistdetail where HospitalID = ? and GoodsID in ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) and now() >= DATE_SUB(CURDATE(), INTERVAL 12 month) 
2020/06/28-15:19:24 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- ==> Parameters: 901600(String), 1(Integer), 10(Integer), 11(Integer), 12(Integer), 13(Integer), 14(Integer), 15(Integer), 16(Integer), 17(Integer), 18(Integer), 19(Integer)
2020/06/28-15:19:24 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- <==      Total: 5
2020/06/28-15:19:24 [http-nio-8083-exec-9] ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]- Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.IndexOutOfBoundsException: Index: 1, Size: 1] with root cause
java.lang.IndexOutOfBoundsException: Index: 1, Size: 1
	at java.util.ArrayList.rangeCheck(ArrayList.java:657) ~[na:1.8.0_231]
	at java.util.ArrayList.get(ArrayList.java:433) ~[na:1.8.0_231]
	at com.huijian.rac.controller.GoodsDictionaryController.inquiryDetail(GoodsDictionaryController.java:228) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_231]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_231]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_231]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_231]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_231]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_231]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_231]
2020/06/28-15:21:49 [main] INFO  com.huijian.rac.RacStockServiceApplication- No active profile set, falling back to default profiles: default
2020/06/28-15:21:50 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Multiple Spring Data modules found, entering strict repository configuration mode!
2020/06/28-15:21:50 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Bootstrapping Spring Data repositories in DEFAULT mode.
2020/06/28-15:21:50 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Finished Spring Data repository scanning in 22ms. Found 0 repository interfaces.
2020/06/28-15:21:50 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'deliveryUnitMapper' and 'com.huijian.rac.mapper.DeliveryUnitMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-15:21:50 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'departMapper' and 'com.huijian.rac.mapper.DepartMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-15:21:50 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'discardDetailMapper' and 'com.huijian.rac.mapper.DiscardDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-15:21:50 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'discardMapper' and 'com.huijian.rac.mapper.DiscardMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-15:21:50 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsDictionaryMapper' and 'com.huijian.rac.mapper.GoodsDictionaryMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-15:21:50 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsRecordMapper' and 'com.huijian.rac.mapper.GoodsRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-15:21:50 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsSupplierMapper' and 'com.huijian.rac.mapper.GoodsSupplierMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-15:21:50 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'leaveStockListDetailMapper' and 'com.huijian.rac.mapper.LeaveStockListDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-15:21:50 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'materialMapper' and 'com.huijian.rac.mapper.MaterialMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-15:21:50 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'outboundRecordMapper' and 'com.huijian.rac.mapper.OutboundRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-15:21:50 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'outboundSecondRecordMapper' and 'com.huijian.rac.mapper.OutboundSecondRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-15:21:50 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'reagentMapper' and 'com.huijian.rac.mapper.ReagentMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-15:21:50 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'returnGoodsDetailMapper' and 'com.huijian.rac.mapper.ReturnGoodsDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-15:21:50 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'returnGoodsMapper' and 'com.huijian.rac.mapper.ReturnGoodsMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-15:21:50 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'secondGoodsRecordMapper' and 'com.huijian.rac.mapper.SecondGoodsRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-15:21:50 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'secondLeaveStockListDetailMapper' and 'com.huijian.rac.mapper.SecondLeaveStockListDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-15:21:50 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'unitMapper' and 'com.huijian.rac.mapper.UnitMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-15:21:50 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseMapper' and 'com.huijian.rac.mapper.WarehouseMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-15:21:50 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseRecordMapper' and 'com.huijian.rac.mapper.WarehouseRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-15:21:50 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseSecondMapper' and 'com.huijian.rac.mapper.WarehouseSecondMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-15:21:50 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseSecondRecordMapper' and 'com.huijian.rac.mapper.WarehouseSecondRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-15:21:50 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'departsMapper' and 'com.huijian.rac.mapper.DepartsMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-15:21:50 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsPackageDetailMapper' and 'com.huijian.rac.mapper.GoodsPackageDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-15:21:50 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsPackageMapper' and 'com.huijian.rac.mapper.GoodsPackageMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-15:21:50 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'hospitalMapper' and 'com.huijian.rac.mapper.HospitalMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-15:21:50 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'leaveStockListSecondMapper' and 'com.huijian.rac.mapper.LeaveStockListSecondMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-15:21:50 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderDetailMapper' and 'com.huijian.rac.mapper.OrderDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-15:21:50 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderMapper' and 'com.huijian.rac.mapper.OrderMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-15:21:50 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderOperateMapper' and 'com.huijian.rac.mapper.OrderOperateMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-15:21:50 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderReturnDetailMapper' and 'com.huijian.rac.mapper.OrderReturnDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-15:21:50 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderReturnMapper' and 'com.huijian.rac.mapper.OrderReturnMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-15:21:50 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderReviewMapper' and 'com.huijian.rac.mapper.OrderReviewMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-15:21:50 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- No MyBatis mapper was found in '[com.huijian.rac.mapper]' package. Please check your configuration.
2020/06/28-15:21:50 [main] INFO  org.springframework.cloud.context.scope.GenericScope- BeanFactory id=b2907805-f796-3a2c-9729-4f51ea31ae6e
2020/06/28-15:21:50 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/28-15:21:50 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'redisConfig' of type [com.huijian.rac.config.RedisConfig$$EnhancerBySpringCGLIB$$ce71a5a7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/28-15:21:50 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/28-15:21:51 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat initialized with port(s): 8083 (http)
2020/06/28-15:21:51 [main] INFO  org.apache.catalina.core.StandardService- Starting service [Tomcat]
2020/06/28-15:21:51 [main] INFO  org.apache.catalina.core.StandardEngine- Starting Servlet engine: [Apache Tomcat/9.0.27]
2020/06/28-15:21:51 [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]- Initializing Spring embedded WebApplicationContext
2020/06/28-15:21:51 [main] INFO  org.springframework.web.context.ContextLoader- Root WebApplicationContext: initialization completed in 1707 ms
2020/06/28-15:21:52 [main] WARN  com.netflix.config.sources.URLConfigurationSource- No URLs will be polled as dynamic configuration sources.
2020/06/28-15:21:52 [main] INFO  com.netflix.config.sources.URLConfigurationSource- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020/06/28-15:21:52 [main] WARN  com.netflix.config.sources.URLConfigurationSource- No URLs will be polled as dynamic configuration sources.
2020/06/28-15:21:52 [main] INFO  com.netflix.config.sources.URLConfigurationSource- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020/06/28-15:21:52 [main] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor- Initializing ExecutorService 'applicationTaskExecutor'
2020/06/28-15:21:53 [main] WARN  org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger- You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020/06/28-15:21:53 [main] WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger- Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020/06/28-15:21:53 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory- Setting initial instance status as: STARTING
2020/06/28-15:21:53 [main] INFO  com.netflix.discovery.DiscoveryClient- Initializing Eureka in region us-east-1
2020/06/28-15:21:54 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using JSON encoding codec LegacyJacksonJson
2020/06/28-15:21:54 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using JSON decoding codec LegacyJacksonJson
2020/06/28-15:21:54 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using XML encoding codec XStreamXml
2020/06/28-15:21:54 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using XML decoding codec XStreamXml
2020/06/28-15:21:54 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-15:21:54 [main] INFO  com.netflix.discovery.DiscoveryClient- Disable delta property : false
2020/06/28-15:21:54 [main] INFO  com.netflix.discovery.DiscoveryClient- Single vip registry refresh property : null
2020/06/28-15:21:54 [main] INFO  com.netflix.discovery.DiscoveryClient- Force full registry fetch : false
2020/06/28-15:21:54 [main] INFO  com.netflix.discovery.DiscoveryClient- Application is null : false
2020/06/28-15:21:54 [main] INFO  com.netflix.discovery.DiscoveryClient- Registered Applications size is zero : true
2020/06/28-15:21:54 [main] INFO  com.netflix.discovery.DiscoveryClient- Application version is -1: true
2020/06/28-15:21:54 [main] INFO  com.netflix.discovery.DiscoveryClient- Getting all instance registry info from the eureka server
2020/06/28-15:21:54 [main] INFO  com.netflix.discovery.DiscoveryClient- The response status is 200
2020/06/28-15:21:54 [main] INFO  com.netflix.discovery.DiscoveryClient- Starting heartbeat executor: renew interval is: 30
2020/06/28-15:21:54 [main] INFO  com.netflix.discovery.InstanceInfoReplicator- InstanceInfoReplicator onDemand update allowed rate per min is 4
2020/06/28-15:21:54 [main] INFO  com.netflix.discovery.DiscoveryClient- Discovery Client initialized at timestamp 1593328914879 with initial instances count: 2
2020/06/28-15:21:54 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry- Registering application RAC-STOCK-SERVICE with eureka with status UP
2020/06/28-15:21:54 [main] INFO  com.netflix.discovery.DiscoveryClient- Saw local status change event StatusChangeEvent [timestamp=1593328914882, current=UP, previous=STARTING]
2020/06/28-15:21:54 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-STOCK-SERVICE/MSI.mshome.net:rac-stock-service:8083: registering service...
2020/06/28-15:21:54 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Attempting to connect to: [192.168.161.129:5672]
2020/06/28-15:21:54 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Created new connection: rabbitConnectionFactory#365cef67:0/SimpleConnection@219dd935 [delegate=amqp://admin@192.168.161.129:5672/, localPort= 53568]
2020/06/28-15:21:55 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-STOCK-SERVICE/MSI.mshome.net:rac-stock-service:8083 - registration status: 204
2020/06/28-15:21:55 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat started on port(s): 8083 (http) with context path ''
2020/06/28-15:21:55 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration- Updating port to 8083
2020/06/28-15:21:55 [main] INFO  com.huijian.rac.RacStockServiceApplication- Started RacStockServiceApplication in 7.054 seconds (JVM running for 8.398)
2020/06/28-15:22:01 [http-nio-8084-exec-36] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==>  Preparing: select count(*) from sj_order where YEAR(OrderDate)=YEAR(NOW()); 
2020/06/28-15:22:01 [http-nio-8084-exec-36] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==> Parameters: 
2020/06/28-15:22:01 [http-nio-8084-exec-36] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- <==      Total: 1
2020/06/28-15:22:02 [http-nio-8083-exec-2] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]- Initializing Spring DispatcherServlet 'dispatcherServlet'
2020/06/28-15:22:02 [http-nio-8083-exec-2] INFO  org.springframework.web.servlet.DispatcherServlet- Initializing Servlet 'dispatcherServlet'
2020/06/28-15:22:02 [http-nio-8083-exec-2] INFO  org.springframework.web.servlet.DispatcherServlet- Completed initialization in 8 ms
2020/06/28-15:22:02 [http-nio-8084-exec-41] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==>  Preparing: select * from pub_depart where HOSPITALID=? 
2020/06/28-15:22:02 [http-nio-8084-exec-41] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==> Parameters: 901600(String)
2020/06/28-15:22:02 [http-nio-8084-exec-41] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- <==      Total: 22
2020/06/28-15:22:19 [http-nio-8083-exec-1] INFO  com.zaxxer.hikari.HikariDataSource- HikariPool-1 - Starting...
2020/06/28-15:22:19 [http-nio-8083-exec-1] INFO  com.zaxxer.hikari.HikariDataSource- HikariPool-1 - Start completed.
2020/06/28-15:22:19 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- ==>  Preparing: select sg.*, su.UnitName from sj_goodsdictionary sg INNER join sj_unit su on GoodsName like concat('%',?,'%') and sg.UnitID = su.UnitID 
2020/06/28-15:22:19 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- ==> Parameters: 1(String)
2020/06/28-15:22:19 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- <==      Total: 11
2020/06/28-15:22:19 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-15:22:19 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-15:22:19 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-15:22:19 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-15:22:19 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 1(Integer), 901600(String)
2020/06/28-15:22:19 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-15:22:19 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-15:22:19 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-15:22:19 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-15:22:19 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-15:22:19 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 10(Integer), 901600(String)
2020/06/28-15:22:19 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-15:22:19 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-15:22:19 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-15:22:19 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-15:22:19 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-15:22:19 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 11(Integer), 901600(String)
2020/06/28-15:22:19 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-15:22:19 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-15:22:19 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 2(Integer)
2020/06/28-15:22:19 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-15:22:19 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-15:22:19 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 12(Integer), 901600(String)
2020/06/28-15:22:19 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-15:22:19 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-15:22:19 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-15:22:19 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-15:22:19 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-15:22:19 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 13(Integer), 901600(String)
2020/06/28-15:22:19 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-15:22:19 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-15:22:19 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-15:22:19 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-15:22:19 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-15:22:19 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 14(Integer), 901600(String)
2020/06/28-15:22:19 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-15:22:19 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-15:22:19 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 2(Integer)
2020/06/28-15:22:19 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-15:22:19 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-15:22:19 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 15(Integer), 901600(String)
2020/06/28-15:22:19 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-15:22:19 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-15:22:19 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-15:22:19 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-15:22:19 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-15:22:19 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 16(Integer), 901600(String)
2020/06/28-15:22:19 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-15:22:19 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-15:22:19 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-15:22:19 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-15:22:19 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-15:22:19 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 17(Integer), 901600(String)
2020/06/28-15:22:19 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-15:22:19 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-15:22:19 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 2(Integer)
2020/06/28-15:22:19 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-15:22:19 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-15:22:19 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 18(Integer), 901600(String)
2020/06/28-15:22:19 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-15:22:19 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-15:22:19 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-15:22:19 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-15:22:19 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-15:22:19 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 19(Integer), 901600(String)
2020/06/28-15:22:19 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-15:22:29 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-15:22:39 [http-nio-8083-exec-1] INFO  com.netflix.config.ChainedDynamicProperty- Flipping property: rac-order-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020/06/28-15:22:39 [http-nio-8083-exec-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer- Shutdown hook installed for: NFLoadBalancer-PingTimer-rac-order-service
2020/06/28-15:22:39 [http-nio-8083-exec-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer- Client: rac-order-service instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=rac-order-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020/06/28-15:22:39 [http-nio-8083-exec-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer- Using serverListUpdater PollingServerListUpdater
2020/06/28-15:22:39 [http-nio-8083-exec-1] INFO  com.netflix.config.ChainedDynamicProperty- Flipping property: rac-order-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020/06/28-15:22:39 [http-nio-8083-exec-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer- DynamicServerListLoadBalancer for client rac-order-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=rac-order-service,current list of Servers=[MSI.mshome.net:8084],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:MSI.mshome.net:8084;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 GMT+08:00 1970;	First connection made: Thu Jan 01 08:00:00 GMT+08:00 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@24755c0c
2020/06/28-15:22:39 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- ==>  Preparing: select * from sj_order where HospitalID = ? order by OrderDate DESC limit 1; 
2020/06/28-15:22:39 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- ==> Parameters: 901600(String)
2020/06/28-15:22:39 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- <==      Total: 1
2020/06/28-15:22:39 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- ==>  Preparing: select * from sj_orderdetail where OrderNo = ? and GoodsID in ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) 
2020/06/28-15:22:39 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- ==> Parameters: 9016002000038(String), 1(Integer), 10(Integer), 11(Integer), 12(Integer), 13(Integer), 14(Integer), 15(Integer), 16(Integer), 17(Integer), 18(Integer), 19(Integer)
2020/06/28-15:22:39 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- <==      Total: 1
2020/06/28-15:22:50 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty- Flipping property: rac-order-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020/06/28-15:22:50 [http-nio-8084-exec-31] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- ==>  Preparing: select * from sj_secondleavestocklistdetail where HospitalID = ? and GoodsID in ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) and now() >= DATE_SUB(CURDATE(), INTERVAL 12 month) 
2020/06/28-15:22:50 [http-nio-8084-exec-31] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- ==> Parameters: 901600(String), 1(Integer), 10(Integer), 11(Integer), 12(Integer), 13(Integer), 14(Integer), 15(Integer), 16(Integer), 17(Integer), 18(Integer), 19(Integer)
2020/06/28-15:22:50 [http-nio-8084-exec-31] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- <==      Total: 5
2020/06/28-15:23:30 [http-nio-8084-exec-11] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==>  Preparing: select * from pub_depart where HOSPITALID=? 
2020/06/28-15:23:30 [http-nio-8084-exec-30] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==>  Preparing: SELECT * from sj_order where OrderNo like concat('%',?,'%') and OrderDate >= ? and OrderDate < ? and OrderState != 0 order by OrderDate desc limit ?, ? 
2020/06/28-15:23:30 [http-nio-8084-exec-11] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==> Parameters: 901600(String)
2020/06/28-15:23:30 [http-nio-8084-exec-30] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-28 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/28-15:23:30 [http-nio-8084-exec-30] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- <==      Total: 0
2020/06/28-15:23:30 [http-nio-8084-exec-11] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- <==      Total: 22
2020/06/28-15:23:32 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==>  Preparing: select count(*) from sj_order where YEAR(OrderDate)=YEAR(NOW()); 
2020/06/28-15:23:32 [http-nio-8084-exec-14] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==>  Preparing: select * from pub_depart where HOSPITALID=? 
2020/06/28-15:23:32 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==> Parameters: 
2020/06/28-15:23:32 [http-nio-8084-exec-14] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==> Parameters: 901600(String)
2020/06/28-15:23:32 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- <==      Total: 1
2020/06/28-15:23:32 [http-nio-8084-exec-14] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- <==      Total: 22
2020/06/28-15:23:41 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool- HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=50s463ms101µs700ns).
2020/06/28-15:23:41 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- ==>  Preparing: select sg.*, su.UnitName from sj_goodsdictionary sg INNER join sj_unit su on GoodsName like concat('%',?,'%') and sg.UnitID = su.UnitID 
2020/06/28-15:23:41 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- ==> Parameters: iphone12(String)
2020/06/28-15:23:41 [http-nio-8083-exec-1] ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]- Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.IndexOutOfBoundsException: Index: 1, Size: 1] with root cause
java.lang.IndexOutOfBoundsException: Index: 1, Size: 1
	at java.util.ArrayList.rangeCheck(ArrayList.java:657) ~[na:1.8.0_231]
	at java.util.ArrayList.get(ArrayList.java:433) ~[na:1.8.0_231]
	at com.huijian.rac.controller.GoodsDictionaryController.inquiryDetail(GoodsDictionaryController.java:228) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_231]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_231]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_231]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_231]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_231]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_231]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_231]
2020/06/28-15:23:41 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- <==      Total: 1
2020/06/28-15:23:41 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-15:23:41 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-15:23:41 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-15:23:41 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-15:23:41 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 1(Integer), 901600(String)
2020/06/28-15:23:41 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-15:25:10 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool- HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m28s734ms240µs700ns).
2020/06/28-15:25:10 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- ==>  Preparing: select sg.*, su.UnitName from sj_goodsdictionary sg INNER join sj_unit su on GoodsName like concat('%',?,'%') and sg.UnitID = su.UnitID 
2020/06/28-15:25:10 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- ==> Parameters: 1(String)
2020/06/28-15:25:10 [http-nio-8084-exec-36] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- ==>  Preparing: select * from sj_order where HospitalID = ? order by OrderDate DESC limit 1; 
2020/06/28-15:25:10 [http-nio-8084-exec-36] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- ==> Parameters: 901600(String)
2020/06/28-15:25:10 [http-nio-8084-exec-36] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- <==      Total: 1
2020/06/28-15:25:10 [http-nio-8084-exec-36] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- ==>  Preparing: select * from sj_orderdetail where OrderNo = ? and GoodsID in ( ? ) 
2020/06/28-15:25:10 [http-nio-8084-exec-36] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- ==> Parameters: 9016002000038(String), 1(Integer)
2020/06/28-15:25:10 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- <==      Total: 11
2020/06/28-15:25:10 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-15:25:10 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-15:25:10 [http-nio-8084-exec-36] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- <==      Total: 1
2020/06/28-15:25:10 [http-nio-8084-exec-41] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- ==>  Preparing: select * from sj_secondleavestocklistdetail where HospitalID = ? and GoodsID in ( ? ) and now() >= DATE_SUB(CURDATE(), INTERVAL 12 month) 
2020/06/28-15:25:10 [http-nio-8084-exec-41] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- ==> Parameters: 901600(String), 1(Integer)
2020/06/28-15:25:10 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-15:25:10 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-15:25:10 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 1(Integer), 901600(String)
2020/06/28-15:25:10 [http-nio-8084-exec-41] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- <==      Total: 1
2020/06/28-15:25:10 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-15:25:10 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-15:25:10 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-15:25:10 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-15:25:10 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-15:25:10 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 10(Integer), 901600(String)
2020/06/28-15:25:10 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-15:25:10 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-15:25:10 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-15:25:10 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-15:25:10 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-15:25:10 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 11(Integer), 901600(String)
2020/06/28-15:25:10 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-15:25:10 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-15:25:10 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 2(Integer)
2020/06/28-15:25:10 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-15:25:10 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-15:25:10 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 12(Integer), 901600(String)
2020/06/28-15:25:10 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-15:25:10 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-15:25:10 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-15:25:10 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-15:25:10 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-15:25:10 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 13(Integer), 901600(String)
2020/06/28-15:25:10 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-15:25:10 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-15:25:10 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-15:25:10 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-15:25:10 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-15:25:10 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 14(Integer), 901600(String)
2020/06/28-15:25:10 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-15:25:10 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-15:25:10 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 2(Integer)
2020/06/28-15:25:10 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-15:25:10 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-15:25:10 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 15(Integer), 901600(String)
2020/06/28-15:25:10 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-15:25:10 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-15:25:10 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-15:25:10 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-15:25:10 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-15:25:10 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 16(Integer), 901600(String)
2020/06/28-15:25:10 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-15:25:10 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-15:25:10 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-15:25:10 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-15:25:10 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-15:25:10 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 17(Integer), 901600(String)
2020/06/28-15:25:10 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-15:25:10 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-15:25:10 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 2(Integer)
2020/06/28-15:25:10 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-15:25:10 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-15:25:10 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 18(Integer), 901600(String)
2020/06/28-15:25:10 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-15:25:10 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-15:25:10 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-15:25:10 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-15:25:10 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-15:25:10 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 19(Integer), 901600(String)
2020/06/28-15:25:10 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-15:27:12 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool- HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=2m2s528ms865µs).
2020/06/28-15:27:12 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-15:27:13 [http-nio-8084-exec-31] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- ==>  Preparing: select * from sj_order where HospitalID = ? order by OrderDate DESC limit 1; 
2020/06/28-15:27:13 [http-nio-8084-exec-31] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- ==> Parameters: 901600(String)
2020/06/28-15:27:13 [http-nio-8084-exec-31] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- <==      Total: 1
2020/06/28-15:27:13 [http-nio-8084-exec-31] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- ==>  Preparing: select * from sj_orderdetail where OrderNo = ? and GoodsID in ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) 
2020/06/28-15:27:13 [http-nio-8084-exec-31] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- ==> Parameters: 9016002000038(String), 1(Integer), 10(Integer), 11(Integer), 12(Integer), 13(Integer), 14(Integer), 15(Integer), 16(Integer), 17(Integer), 18(Integer), 19(Integer)
2020/06/28-15:27:13 [http-nio-8084-exec-31] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- <==      Total: 1
2020/06/28-15:27:29 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-15:32:29 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-15:37:29 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-15:42:29 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-15:47:29 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-15:52:29 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-15:57:21 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool- HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=30m9s275ms222µs900ns).
2020/06/28-15:57:21 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-15:57:21 [AMQP Connection 192.168.161.129:5672] WARN  com.rabbitmq.client.impl.ForgivingExceptionHandler- An unexpected connection driver error occured (Exception message: Connection reset)
2020/06/28-15:57:21 [AMQP Connection 192.168.161.129:5672] ERROR org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Channel shutdown: connection error
2020/06/28-15:57:21 [AMQP Connection 192.168.161.129:5672] ERROR org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Channel shutdown: connection error
2020/06/28-15:57:21 [http-nio-8084-exec-30] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- ==>  Preparing: select * from sj_secondleavestocklistdetail where HospitalID = ? and GoodsID in ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) and now() >= DATE_SUB(CURDATE(), INTERVAL 12 month) 
2020/06/28-15:57:21 [http-nio-8084-exec-30] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- ==> Parameters: 901600(String), 1(Integer), 10(Integer), 11(Integer), 12(Integer), 13(Integer), 14(Integer), 15(Integer), 16(Integer), 17(Integer), 18(Integer), 19(Integer)
2020/06/28-15:57:21 [Thread-31] INFO  com.netflix.loadbalancer.PollingServerListUpdater- Shutting down the Executor Pool for PollingServerListUpdater
2020/06/28-15:57:21 [SpringContextShutdownHook] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry- Unregistering application RAC-STOCK-SERVICE with eureka with status DOWN
2020/06/28-15:57:21 [SpringContextShutdownHook] WARN  com.netflix.discovery.DiscoveryClient- Saw local status change event StatusChangeEvent [timestamp=1593331041935, current=DOWN, previous=UP]
2020/06/28-15:57:21 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-STOCK-SERVICE/MSI.mshome.net:rac-stock-service:8083: registering service...
2020/06/28-15:57:21 [SpringContextShutdownHook] INFO  org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer- Waiting for workers to finish.
2020/06/28-15:57:21 [SpringContextShutdownHook] INFO  org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer- Successfully waited for workers to finish.
2020/06/28-15:57:21 [SpringContextShutdownHook] INFO  org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer- Waiting for workers to finish.
2020/06/28-15:57:21 [SpringContextShutdownHook] INFO  org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer- Successfully waited for workers to finish.
2020/06/28-15:57:21 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-STOCK-SERVICE/MSI.mshome.net:rac-stock-service:8083 - registration status: 204
2020/06/28-15:57:21 [SpringContextShutdownHook] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor- Shutting down ExecutorService 'applicationTaskExecutor'
2020/06/28-15:57:21 [SpringContextShutdownHook] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer- Shutdown hook removed for: NFLoadBalancer-PingTimer-rac-order-service
2020/06/28-15:57:21 [SpringContextShutdownHook] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer- Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82) ~[na:1.8.0_231]
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239) ~[na:1.8.0_231]
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70) ~[netflix-commons-util-0.1.1.jar:na]
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:632) [ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:883) [ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:285) [ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_231]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_231]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_231]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_231]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:339) [spring-beans-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:273) [spring-beans-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571) [spring-beans-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543) [spring-beans-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1072) [spring-beans-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504) [spring-beans-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1065) [spring-beans-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060) [spring-context-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029) [spring-context-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:978) [spring-context-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:92) [spring-cloud-context-2.2.0.RELEASE.jar:2.2.0.RELEASE]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258) [spring-beans-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571) [spring-beans-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543) [spring-beans-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1072) [spring-beans-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504) [spring-beans-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1065) [spring-beans-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060) [spring-context-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029) [spring-context-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:948) [spring-context-5.2.1.RELEASE.jar:5.2.1.RELEASE]
2020/06/28-15:57:21 [SpringContextShutdownHook] INFO  org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer- Shutdown ignored - container is not active already
2020/06/28-15:57:21 [SpringContextShutdownHook] INFO  org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer- Shutdown ignored - container is not active already
2020/06/28-15:57:21 [SpringContextShutdownHook] INFO  com.netflix.discovery.DiscoveryClient- Shutting down DiscoveryClient ...
2020/06/28-15:57:21 [http-nio-8084-exec-30] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- <==      Total: 5
2020/06/28-15:57:24 [SpringContextShutdownHook] INFO  com.netflix.discovery.DiscoveryClient- Unregistering ...
2020/06/28-15:57:24 [SpringContextShutdownHook] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-STOCK-SERVICE/MSI.mshome.net:rac-stock-service:8083 - deregister  status: 200
2020/06/28-15:57:24 [SpringContextShutdownHook] INFO  com.netflix.discovery.DiscoveryClient- Completed shut down of DiscoveryClient
2020/06/28-15:57:24 [SpringContextShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource- HikariPool-1 - Shutdown initiated...
2020/06/28-15:57:24 [SpringContextShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource- HikariPool-1 - Shutdown completed.
2020/06/28-15:57:32 [main] INFO  com.huijian.rac.RacOrderServiceApplication- No active profile set, falling back to default profiles: default
2020/06/28-15:57:32 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Multiple Spring Data modules found, entering strict repository configuration mode!
2020/06/28-15:57:32 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020/06/28-15:57:32 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Finished Spring Data repository scanning in 13ms. Found 0 Redis repository interfaces.
2020/06/28-15:57:32 [main] INFO  org.springframework.cloud.context.scope.GenericScope- BeanFactory id=f3f23537-6900-3ad0-88d5-cec7769c130c
2020/06/28-15:57:32 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/28-15:57:33 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/28-15:57:33 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat initialized with port(s): 8084 (http)
2020/06/28-15:57:33 [main] INFO  org.apache.catalina.core.StandardService- Starting service [Tomcat]
2020/06/28-15:57:33 [main] INFO  org.apache.catalina.core.StandardEngine- Starting Servlet engine: [Apache Tomcat/9.0.29]
2020/06/28-15:57:33 [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]- Initializing Spring embedded WebApplicationContext
2020/06/28-15:57:33 [main] INFO  org.springframework.web.context.ContextLoader- Root WebApplicationContext: initialization completed in 1050 ms
2020/06/28-15:57:33 [main] WARN  com.netflix.config.sources.URLConfigurationSource- No URLs will be polled as dynamic configuration sources.
2020/06/28-15:57:33 [main] INFO  com.netflix.config.sources.URLConfigurationSource- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020/06/28-15:57:33 [main] WARN  com.netflix.config.sources.URLConfigurationSource- No URLs will be polled as dynamic configuration sources.
2020/06/28-15:57:33 [main] INFO  com.netflix.config.sources.URLConfigurationSource- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020/06/28-15:57:33 [main] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor- Initializing ExecutorService 'applicationTaskExecutor'
2020/06/28-15:57:35 [main] WARN  org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger- You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020/06/28-15:57:35 [main] WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger- Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020/06/28-15:57:35 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory- Setting initial instance status as: STARTING
2020/06/28-15:57:35 [main] INFO  com.netflix.discovery.DiscoveryClient- Initializing Eureka in region us-east-1
2020/06/28-15:57:35 [main] INFO  com.huijian.rac.RacStockServiceApplication- No active profile set, falling back to default profiles: default
2020/06/28-15:57:36 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using JSON encoding codec LegacyJacksonJson
2020/06/28-15:57:36 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using JSON decoding codec LegacyJacksonJson
2020/06/28-15:57:36 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using XML encoding codec XStreamXml
2020/06/28-15:57:36 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using XML decoding codec XStreamXml
2020/06/28-15:57:36 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-15:57:36 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Multiple Spring Data modules found, entering strict repository configuration mode!
2020/06/28-15:57:36 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Bootstrapping Spring Data repositories in DEFAULT mode.
2020/06/28-15:57:36 [main] INFO  com.netflix.discovery.DiscoveryClient- Disable delta property : false
2020/06/28-15:57:36 [main] INFO  com.netflix.discovery.DiscoveryClient- Single vip registry refresh property : null
2020/06/28-15:57:36 [main] INFO  com.netflix.discovery.DiscoveryClient- Force full registry fetch : false
2020/06/28-15:57:36 [main] INFO  com.netflix.discovery.DiscoveryClient- Application is null : false
2020/06/28-15:57:36 [main] INFO  com.netflix.discovery.DiscoveryClient- Registered Applications size is zero : true
2020/06/28-15:57:36 [main] INFO  com.netflix.discovery.DiscoveryClient- Application version is -1: true
2020/06/28-15:57:36 [main] INFO  com.netflix.discovery.DiscoveryClient- Getting all instance registry info from the eureka server
2020/06/28-15:57:36 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Finished Spring Data repository scanning in 26ms. Found 0 repository interfaces.
2020/06/28-15:57:36 [main] INFO  com.netflix.discovery.DiscoveryClient- The response status is 200
2020/06/28-15:57:36 [main] INFO  com.netflix.discovery.DiscoveryClient- Starting heartbeat executor: renew interval is: 30
2020/06/28-15:57:36 [main] INFO  com.netflix.discovery.InstanceInfoReplicator- InstanceInfoReplicator onDemand update allowed rate per min is 4
2020/06/28-15:57:36 [main] INFO  com.netflix.discovery.DiscoveryClient- Discovery Client initialized at timestamp 1593331056869 with initial instances count: 2
2020/06/28-15:57:36 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry- Registering application RAC-ORDER-SERVICE with eureka with status UP
2020/06/28-15:57:36 [main] INFO  com.netflix.discovery.DiscoveryClient- Saw local status change event StatusChangeEvent [timestamp=1593331056872, current=UP, previous=STARTING]
2020/06/28-15:57:36 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-ORDER-SERVICE/MSI.mshome.net:rac-order-service:8084: registering service...
2020/06/28-15:57:36 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Attempting to connect to: [192.168.161.129:5672]
2020/06/28-15:57:36 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Created new connection: rabbitConnectionFactory#4c6007fb:0/SimpleConnection@11148dc2 [delegate=amqp://admin@192.168.161.129:5672/, localPort= 49677]
2020/06/28-15:57:36 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-ORDER-SERVICE/MSI.mshome.net:rac-order-service:8084 - registration status: 204
2020/06/28-15:57:36 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat started on port(s): 8084 (http) with context path ''
2020/06/28-15:57:37 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration- Updating port to 8084
2020/06/28-15:57:37 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'deliveryUnitMapper' and 'com.huijian.rac.mapper.DeliveryUnitMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-15:57:37 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'departMapper' and 'com.huijian.rac.mapper.DepartMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-15:57:37 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'discardDetailMapper' and 'com.huijian.rac.mapper.DiscardDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-15:57:37 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'discardMapper' and 'com.huijian.rac.mapper.DiscardMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-15:57:37 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsDictionaryMapper' and 'com.huijian.rac.mapper.GoodsDictionaryMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-15:57:37 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsRecordMapper' and 'com.huijian.rac.mapper.GoodsRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-15:57:37 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsSupplierMapper' and 'com.huijian.rac.mapper.GoodsSupplierMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-15:57:37 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'leaveStockListDetailMapper' and 'com.huijian.rac.mapper.LeaveStockListDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-15:57:37 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'materialMapper' and 'com.huijian.rac.mapper.MaterialMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-15:57:37 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'outboundRecordMapper' and 'com.huijian.rac.mapper.OutboundRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-15:57:37 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'outboundSecondRecordMapper' and 'com.huijian.rac.mapper.OutboundSecondRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-15:57:37 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'reagentMapper' and 'com.huijian.rac.mapper.ReagentMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-15:57:37 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'returnGoodsDetailMapper' and 'com.huijian.rac.mapper.ReturnGoodsDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-15:57:37 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'returnGoodsMapper' and 'com.huijian.rac.mapper.ReturnGoodsMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-15:57:37 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'secondGoodsRecordMapper' and 'com.huijian.rac.mapper.SecondGoodsRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-15:57:37 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'secondLeaveStockListDetailMapper' and 'com.huijian.rac.mapper.SecondLeaveStockListDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-15:57:37 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'unitMapper' and 'com.huijian.rac.mapper.UnitMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-15:57:37 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseMapper' and 'com.huijian.rac.mapper.WarehouseMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-15:57:37 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseRecordMapper' and 'com.huijian.rac.mapper.WarehouseRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-15:57:37 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseSecondMapper' and 'com.huijian.rac.mapper.WarehouseSecondMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-15:57:37 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseSecondRecordMapper' and 'com.huijian.rac.mapper.WarehouseSecondRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-15:57:37 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'departsMapper' and 'com.huijian.rac.mapper.DepartsMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-15:57:37 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsPackageDetailMapper' and 'com.huijian.rac.mapper.GoodsPackageDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-15:57:37 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsPackageMapper' and 'com.huijian.rac.mapper.GoodsPackageMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-15:57:37 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'hospitalMapper' and 'com.huijian.rac.mapper.HospitalMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-15:57:37 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'leaveStockListSecondMapper' and 'com.huijian.rac.mapper.LeaveStockListSecondMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-15:57:37 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderDetailMapper' and 'com.huijian.rac.mapper.OrderDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-15:57:37 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderMapper' and 'com.huijian.rac.mapper.OrderMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-15:57:37 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderOperateMapper' and 'com.huijian.rac.mapper.OrderOperateMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-15:57:37 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderReturnDetailMapper' and 'com.huijian.rac.mapper.OrderReturnDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-15:57:37 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderReturnMapper' and 'com.huijian.rac.mapper.OrderReturnMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-15:57:37 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderReviewMapper' and 'com.huijian.rac.mapper.OrderReviewMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-15:57:37 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- No MyBatis mapper was found in '[com.huijian.rac.mapper]' package. Please check your configuration.
2020/06/28-15:57:37 [main] INFO  org.springframework.cloud.context.scope.GenericScope- BeanFactory id=b2907805-f796-3a2c-9729-4f51ea31ae6e
2020/06/28-15:57:37 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/28-15:57:37 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'redisConfig' of type [com.huijian.rac.config.RedisConfig$$EnhancerBySpringCGLIB$$4dd18bb2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/28-15:57:37 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/28-15:57:37 [main] INFO  com.huijian.rac.RacOrderServiceApplication- Started RacOrderServiceApplication in 6.282 seconds (JVM running for 6.984)
2020/06/28-15:57:37 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat initialized with port(s): 8083 (http)
2020/06/28-15:57:37 [main] INFO  org.apache.catalina.core.StandardService- Starting service [Tomcat]
2020/06/28-15:57:37 [main] INFO  org.apache.catalina.core.StandardEngine- Starting Servlet engine: [Apache Tomcat/9.0.27]
2020/06/28-15:57:37 [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]- Initializing Spring embedded WebApplicationContext
2020/06/28-15:57:37 [main] INFO  org.springframework.web.context.ContextLoader- Root WebApplicationContext: initialization completed in 2045 ms
2020/06/28-15:57:39 [main] WARN  com.netflix.config.sources.URLConfigurationSource- No URLs will be polled as dynamic configuration sources.
2020/06/28-15:57:39 [main] INFO  com.netflix.config.sources.URLConfigurationSource- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020/06/28-15:57:39 [main] WARN  com.netflix.config.sources.URLConfigurationSource- No URLs will be polled as dynamic configuration sources.
2020/06/28-15:57:39 [main] INFO  com.netflix.config.sources.URLConfigurationSource- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020/06/28-15:57:39 [main] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor- Initializing ExecutorService 'applicationTaskExecutor'
2020/06/28-15:57:40 [main] WARN  org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger- You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020/06/28-15:57:40 [main] WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger- Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020/06/28-15:57:40 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory- Setting initial instance status as: STARTING
2020/06/28-15:57:40 [main] INFO  com.netflix.discovery.DiscoveryClient- Initializing Eureka in region us-east-1
2020/06/28-15:57:41 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using JSON encoding codec LegacyJacksonJson
2020/06/28-15:57:41 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using JSON decoding codec LegacyJacksonJson
2020/06/28-15:57:41 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using XML encoding codec XStreamXml
2020/06/28-15:57:41 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using XML decoding codec XStreamXml
2020/06/28-15:57:41 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-15:57:41 [main] INFO  com.netflix.discovery.DiscoveryClient- Disable delta property : false
2020/06/28-15:57:41 [main] INFO  com.netflix.discovery.DiscoveryClient- Single vip registry refresh property : null
2020/06/28-15:57:41 [main] INFO  com.netflix.discovery.DiscoveryClient- Force full registry fetch : false
2020/06/28-15:57:41 [main] INFO  com.netflix.discovery.DiscoveryClient- Application is null : false
2020/06/28-15:57:41 [main] INFO  com.netflix.discovery.DiscoveryClient- Registered Applications size is zero : true
2020/06/28-15:57:41 [main] INFO  com.netflix.discovery.DiscoveryClient- Application version is -1: true
2020/06/28-15:57:41 [main] INFO  com.netflix.discovery.DiscoveryClient- Getting all instance registry info from the eureka server
2020/06/28-15:57:41 [main] INFO  com.netflix.discovery.DiscoveryClient- The response status is 200
2020/06/28-15:57:41 [main] INFO  com.netflix.discovery.DiscoveryClient- Starting heartbeat executor: renew interval is: 30
2020/06/28-15:57:41 [main] INFO  com.netflix.discovery.InstanceInfoReplicator- InstanceInfoReplicator onDemand update allowed rate per min is 4
2020/06/28-15:57:41 [main] INFO  com.netflix.discovery.DiscoveryClient- Discovery Client initialized at timestamp 1593331061871 with initial instances count: 2
2020/06/28-15:57:41 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry- Registering application RAC-STOCK-SERVICE with eureka with status UP
2020/06/28-15:57:41 [main] INFO  com.netflix.discovery.DiscoveryClient- Saw local status change event StatusChangeEvent [timestamp=1593331061874, current=UP, previous=STARTING]
2020/06/28-15:57:41 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-STOCK-SERVICE/MSI.mshome.net:rac-stock-service:8083: registering service...
2020/06/28-15:57:41 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Attempting to connect to: [192.168.161.129:5672]
2020/06/28-15:57:41 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Created new connection: rabbitConnectionFactory#2cd4e16a:0/SimpleConnection@32d0d7eb [delegate=amqp://admin@192.168.161.129:5672/, localPort= 49697]
2020/06/28-15:57:41 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-STOCK-SERVICE/MSI.mshome.net:rac-stock-service:8083 - registration status: 204
2020/06/28-15:57:41 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat started on port(s): 8083 (http) with context path ''
2020/06/28-15:57:41 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration- Updating port to 8083
2020/06/28-15:57:42 [main] INFO  com.huijian.rac.RacStockServiceApplication- Started RacStockServiceApplication in 7.599 seconds (JVM running for 8.432)
2020/06/28-15:57:53 [http-nio-8084-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]- Initializing Spring DispatcherServlet 'dispatcherServlet'
2020/06/28-15:57:53 [http-nio-8084-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet- Initializing Servlet 'dispatcherServlet'
2020/06/28-15:57:53 [http-nio-8084-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet- Completed initialization in 8 ms
2020/06/28-15:57:53 [http-nio-8084-exec-1] INFO  com.zaxxer.hikari.HikariDataSource- HikariPool-1 - Starting...
2020/06/28-15:57:53 [http-nio-8083-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]- Initializing Spring DispatcherServlet 'dispatcherServlet'
2020/06/28-15:57:53 [http-nio-8083-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet- Initializing Servlet 'dispatcherServlet'
2020/06/28-15:57:53 [http-nio-8083-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet- Completed initialization in 11 ms
2020/06/28-15:57:54 [http-nio-8084-exec-1] INFO  com.zaxxer.hikari.HikariDataSource- HikariPool-1 - Start completed.
2020/06/28-15:57:54 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==>  Preparing: select count(*) from sj_order where YEAR(OrderDate)=YEAR(NOW()); 
2020/06/28-15:57:54 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==> Parameters: 
2020/06/28-15:57:54 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- <==      Total: 1
2020/06/28-15:57:54 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==>  Preparing: select * from pub_depart where HOSPITALID=? 
2020/06/28-15:57:54 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==> Parameters: 901600(String)
2020/06/28-15:57:54 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- <==      Total: 22
2020/06/28-15:58:03 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==>  Preparing: select count(*) from sj_order where YEAR(OrderDate)=YEAR(NOW()); 
2020/06/28-15:58:03 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==> Parameters: 
2020/06/28-15:58:03 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==>  Preparing: select * from pub_depart where HOSPITALID=? 
2020/06/28-15:58:03 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==> Parameters: 901600(String)
2020/06/28-15:58:03 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- <==      Total: 1
2020/06/28-15:58:03 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- <==      Total: 22
2020/06/28-15:58:06 [http-nio-8083-exec-3] INFO  io.lettuce.core.EpollProvider- Starting without optional epoll library
2020/06/28-15:58:06 [http-nio-8083-exec-3] INFO  io.lettuce.core.KqueueProvider- Starting without optional kqueue library
2020/06/28-15:58:07 [http-nio-8083-exec-3] INFO  com.zaxxer.hikari.HikariDataSource- HikariPool-1 - Starting...
2020/06/28-15:58:07 [http-nio-8083-exec-3] INFO  com.zaxxer.hikari.HikariDataSource- HikariPool-1 - Start completed.
2020/06/28-15:58:07 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.getAllGoods- ==>  Preparing: select sg.*, su.UnitName from sj_goodsdictionary sg INNER join sj_unit su on sg.UnitID = su.UnitID 
2020/06/28-15:58:07 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.getAllGoods- ==> Parameters: 
2020/06/28-15:58:07 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.getAllGoods- <==      Total: 20
2020/06/28-15:58:07 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-15:58:07 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-15:58:07 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-15:58:07 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-15:58:07 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 2(Integer)
2020/06/28-15:58:07 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-15:58:07 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-15:58:07 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-15:58:07 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-15:58:07 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-15:58:07 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-15:58:07 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-15:58:07 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-15:58:07 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 2(Integer)
2020/06/28-15:58:07 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-15:58:07 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-15:58:07 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-15:58:07 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-15:58:07 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-15:58:07 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-15:58:07 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-15:58:07 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-15:58:07 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 2(Integer)
2020/06/28-15:58:07 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-15:58:07 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-15:58:07 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-15:58:07 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-15:58:07 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-15:58:07 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-15:58:07 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-15:58:07 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-15:58:07 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-15:58:07 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-15:58:07 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-15:58:07 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 2(Integer)
2020/06/28-15:58:07 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-15:58:07 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-15:58:07 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-15:58:07 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-15:58:07 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-15:58:07 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-15:58:07 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-15:58:07 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-15:58:07 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 2(Integer)
2020/06/28-15:58:07 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-15:58:07 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-15:58:07 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-15:58:07 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-15:58:07 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-15:58:07 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-15:58:07 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-15:58:07 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-15:58:07 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 2(Integer)
2020/06/28-15:58:07 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-15:58:07 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-15:58:07 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-15:58:07 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-15:58:07 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-15:58:07 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-15:58:07 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-15:58:11 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- ==>  Preparing: select sg.*, su.UnitName from sj_goodsdictionary sg INNER join sj_unit su on GoodsName like concat('%',?,'%') and sg.UnitID = su.UnitID 
2020/06/28-15:58:11 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- ==> Parameters: 1(String)
2020/06/28-15:58:11 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- <==      Total: 11
2020/06/28-15:58:11 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-15:58:11 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-15:58:12 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-15:58:12 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-15:58:12 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 1(Integer), 901600(String)
2020/06/28-15:58:12 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-15:58:12 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-15:58:12 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-15:58:12 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-15:58:12 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-15:58:12 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 10(Integer), 901600(String)
2020/06/28-15:58:12 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-15:58:12 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-15:58:12 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-15:58:12 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-15:58:12 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-15:58:12 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 11(Integer), 901600(String)
2020/06/28-15:58:12 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-15:58:12 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-15:58:12 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 2(Integer)
2020/06/28-15:58:12 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-15:58:12 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-15:58:12 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 12(Integer), 901600(String)
2020/06/28-15:58:12 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-15:58:12 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-15:58:12 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-15:58:12 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-15:58:12 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-15:58:12 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 13(Integer), 901600(String)
2020/06/28-15:58:12 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-15:58:12 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-15:58:12 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-15:58:12 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-15:58:12 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-15:58:12 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 14(Integer), 901600(String)
2020/06/28-15:58:12 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-15:58:12 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-15:58:12 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 2(Integer)
2020/06/28-15:58:12 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-15:58:12 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-15:58:12 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 15(Integer), 901600(String)
2020/06/28-15:58:12 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-15:58:12 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-15:58:12 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-15:58:12 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-15:58:12 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-15:58:12 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 16(Integer), 901600(String)
2020/06/28-15:58:12 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-15:58:12 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-15:58:12 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-15:58:12 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-15:58:12 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-15:58:12 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 17(Integer), 901600(String)
2020/06/28-15:58:12 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-15:58:12 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-15:58:12 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 2(Integer)
2020/06/28-15:58:12 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-15:58:12 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-15:58:12 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 18(Integer), 901600(String)
2020/06/28-15:58:12 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-15:58:12 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-15:58:12 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-15:58:12 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-15:58:12 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-15:58:12 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 19(Integer), 901600(String)
2020/06/28-15:58:12 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-15:58:12 [http-nio-8083-exec-4] INFO  com.netflix.config.ChainedDynamicProperty- Flipping property: rac-order-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020/06/28-15:58:12 [http-nio-8083-exec-4] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer- Shutdown hook installed for: NFLoadBalancer-PingTimer-rac-order-service
2020/06/28-15:58:12 [http-nio-8083-exec-4] INFO  com.netflix.loadbalancer.BaseLoadBalancer- Client: rac-order-service instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=rac-order-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020/06/28-15:58:12 [http-nio-8083-exec-4] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer- Using serverListUpdater PollingServerListUpdater
2020/06/28-15:58:12 [http-nio-8083-exec-4] INFO  com.netflix.config.ChainedDynamicProperty- Flipping property: rac-order-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020/06/28-15:58:12 [http-nio-8083-exec-4] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer- DynamicServerListLoadBalancer for client rac-order-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=rac-order-service,current list of Servers=[MSI.mshome.net:8084],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:MSI.mshome.net:8084;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 GMT+08:00 1970;	First connection made: Thu Jan 01 08:00:00 GMT+08:00 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@5da9cc30
2020/06/28-15:58:12 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- ==>  Preparing: select * from sj_order where HospitalID = ? order by OrderDate DESC limit 1; 
2020/06/28-15:58:12 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- ==> Parameters: 901600(String)
2020/06/28-15:58:12 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- <==      Total: 1
2020/06/28-15:58:12 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- ==>  Preparing: select * from sj_orderdetail sod, sj_order so where GoodsID in ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) and sod.OrderNo = so.OrderNo and so.OrderState >= 1 order by OrderDate limit 1 
2020/06/28-15:58:12 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- ==> Parameters: 1(Integer), 10(Integer), 11(Integer), 12(Integer), 13(Integer), 14(Integer), 15(Integer), 16(Integer), 17(Integer), 18(Integer), 19(Integer)
2020/06/28-15:58:12 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- <==      Total: 1
2020/06/28-15:58:12 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- ==>  Preparing: select * from sj_secondleavestocklistdetail where HospitalID = ? and GoodsID in ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) and now() >= DATE_SUB(CURDATE(), INTERVAL 12 month) 
2020/06/28-15:58:12 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- ==> Parameters: 901600(String), 1(Integer), 10(Integer), 11(Integer), 12(Integer), 13(Integer), 14(Integer), 15(Integer), 16(Integer), 17(Integer), 18(Integer), 19(Integer)
2020/06/28-15:58:12 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- <==      Total: 5
2020/06/28-15:58:12 [http-nio-8083-exec-4] ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]- Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.ClassCastException: java.util.LinkedHashMap cannot be cast to java.lang.Integer] with root cause
java.lang.ClassCastException: java.util.LinkedHashMap cannot be cast to java.lang.Integer
	at com.huijian.rac.controller.GoodsDictionaryController.inquiryDetail(GoodsDictionaryController.java:228) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_231]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_231]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_231]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_231]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_231]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_231]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_231]
2020/06/28-15:58:13 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty- Flipping property: rac-order-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020/06/28-16:00:17 [main] INFO  com.huijian.rac.RacStockServiceApplication- No active profile set, falling back to default profiles: default
2020/06/28-16:00:18 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Multiple Spring Data modules found, entering strict repository configuration mode!
2020/06/28-16:00:18 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Bootstrapping Spring Data repositories in DEFAULT mode.
2020/06/28-16:00:18 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Finished Spring Data repository scanning in 22ms. Found 0 repository interfaces.
2020/06/28-16:00:18 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'deliveryUnitMapper' and 'com.huijian.rac.mapper.DeliveryUnitMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:00:18 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'departMapper' and 'com.huijian.rac.mapper.DepartMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:00:18 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'discardDetailMapper' and 'com.huijian.rac.mapper.DiscardDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:00:18 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'discardMapper' and 'com.huijian.rac.mapper.DiscardMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:00:18 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsDictionaryMapper' and 'com.huijian.rac.mapper.GoodsDictionaryMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:00:18 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsRecordMapper' and 'com.huijian.rac.mapper.GoodsRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:00:18 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsSupplierMapper' and 'com.huijian.rac.mapper.GoodsSupplierMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:00:18 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'leaveStockListDetailMapper' and 'com.huijian.rac.mapper.LeaveStockListDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:00:18 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'materialMapper' and 'com.huijian.rac.mapper.MaterialMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:00:18 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'outboundRecordMapper' and 'com.huijian.rac.mapper.OutboundRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:00:18 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'outboundSecondRecordMapper' and 'com.huijian.rac.mapper.OutboundSecondRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:00:18 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'reagentMapper' and 'com.huijian.rac.mapper.ReagentMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:00:18 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'returnGoodsDetailMapper' and 'com.huijian.rac.mapper.ReturnGoodsDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:00:18 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'returnGoodsMapper' and 'com.huijian.rac.mapper.ReturnGoodsMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:00:18 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'secondGoodsRecordMapper' and 'com.huijian.rac.mapper.SecondGoodsRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:00:18 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'secondLeaveStockListDetailMapper' and 'com.huijian.rac.mapper.SecondLeaveStockListDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:00:18 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'unitMapper' and 'com.huijian.rac.mapper.UnitMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:00:18 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseMapper' and 'com.huijian.rac.mapper.WarehouseMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:00:18 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseRecordMapper' and 'com.huijian.rac.mapper.WarehouseRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:00:18 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseSecondMapper' and 'com.huijian.rac.mapper.WarehouseSecondMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:00:18 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseSecondRecordMapper' and 'com.huijian.rac.mapper.WarehouseSecondRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:00:18 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'departsMapper' and 'com.huijian.rac.mapper.DepartsMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:00:18 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsPackageDetailMapper' and 'com.huijian.rac.mapper.GoodsPackageDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:00:18 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsPackageMapper' and 'com.huijian.rac.mapper.GoodsPackageMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:00:18 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'hospitalMapper' and 'com.huijian.rac.mapper.HospitalMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:00:18 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'leaveStockListSecondMapper' and 'com.huijian.rac.mapper.LeaveStockListSecondMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:00:18 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderDetailMapper' and 'com.huijian.rac.mapper.OrderDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:00:18 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderMapper' and 'com.huijian.rac.mapper.OrderMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:00:18 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderOperateMapper' and 'com.huijian.rac.mapper.OrderOperateMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:00:18 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderReturnDetailMapper' and 'com.huijian.rac.mapper.OrderReturnDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:00:18 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderReturnMapper' and 'com.huijian.rac.mapper.OrderReturnMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:00:18 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderReviewMapper' and 'com.huijian.rac.mapper.OrderReviewMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:00:18 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- No MyBatis mapper was found in '[com.huijian.rac.mapper]' package. Please check your configuration.
2020/06/28-16:00:18 [main] INFO  org.springframework.cloud.context.scope.GenericScope- BeanFactory id=b2907805-f796-3a2c-9729-4f51ea31ae6e
2020/06/28-16:00:18 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/28-16:00:18 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'redisConfig' of type [com.huijian.rac.config.RedisConfig$$EnhancerBySpringCGLIB$$ddeea4dd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/28-16:00:18 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/28-16:00:19 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat initialized with port(s): 8083 (http)
2020/06/28-16:00:19 [main] INFO  org.apache.catalina.core.StandardService- Starting service [Tomcat]
2020/06/28-16:00:19 [main] INFO  org.apache.catalina.core.StandardEngine- Starting Servlet engine: [Apache Tomcat/9.0.27]
2020/06/28-16:00:19 [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]- Initializing Spring embedded WebApplicationContext
2020/06/28-16:00:19 [main] INFO  org.springframework.web.context.ContextLoader- Root WebApplicationContext: initialization completed in 1524 ms
2020/06/28-16:00:20 [main] WARN  com.netflix.config.sources.URLConfigurationSource- No URLs will be polled as dynamic configuration sources.
2020/06/28-16:00:20 [main] INFO  com.netflix.config.sources.URLConfigurationSource- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020/06/28-16:00:20 [main] WARN  com.netflix.config.sources.URLConfigurationSource- No URLs will be polled as dynamic configuration sources.
2020/06/28-16:00:20 [main] INFO  com.netflix.config.sources.URLConfigurationSource- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020/06/28-16:00:20 [main] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor- Initializing ExecutorService 'applicationTaskExecutor'
2020/06/28-16:00:21 [main] WARN  org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger- You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020/06/28-16:00:21 [main] WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger- Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020/06/28-16:00:21 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory- Setting initial instance status as: STARTING
2020/06/28-16:00:21 [main] INFO  com.netflix.discovery.DiscoveryClient- Initializing Eureka in region us-east-1
2020/06/28-16:00:22 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using JSON encoding codec LegacyJacksonJson
2020/06/28-16:00:22 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using JSON decoding codec LegacyJacksonJson
2020/06/28-16:00:22 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using XML encoding codec XStreamXml
2020/06/28-16:00:22 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using XML decoding codec XStreamXml
2020/06/28-16:00:22 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-16:00:22 [main] INFO  com.netflix.discovery.DiscoveryClient- Disable delta property : false
2020/06/28-16:00:22 [main] INFO  com.netflix.discovery.DiscoveryClient- Single vip registry refresh property : null
2020/06/28-16:00:22 [main] INFO  com.netflix.discovery.DiscoveryClient- Force full registry fetch : false
2020/06/28-16:00:22 [main] INFO  com.netflix.discovery.DiscoveryClient- Application is null : false
2020/06/28-16:00:22 [main] INFO  com.netflix.discovery.DiscoveryClient- Registered Applications size is zero : true
2020/06/28-16:00:22 [main] INFO  com.netflix.discovery.DiscoveryClient- Application version is -1: true
2020/06/28-16:00:22 [main] INFO  com.netflix.discovery.DiscoveryClient- Getting all instance registry info from the eureka server
2020/06/28-16:00:22 [main] INFO  com.netflix.discovery.DiscoveryClient- The response status is 200
2020/06/28-16:00:22 [main] INFO  com.netflix.discovery.DiscoveryClient- Starting heartbeat executor: renew interval is: 30
2020/06/28-16:00:22 [main] INFO  com.netflix.discovery.InstanceInfoReplicator- InstanceInfoReplicator onDemand update allowed rate per min is 4
2020/06/28-16:00:22 [main] INFO  com.netflix.discovery.DiscoveryClient- Discovery Client initialized at timestamp 1593331222535 with initial instances count: 2
2020/06/28-16:00:22 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry- Registering application RAC-STOCK-SERVICE with eureka with status UP
2020/06/28-16:00:22 [main] INFO  com.netflix.discovery.DiscoveryClient- Saw local status change event StatusChangeEvent [timestamp=1593331222538, current=UP, previous=STARTING]
2020/06/28-16:00:22 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-STOCK-SERVICE/MSI.mshome.net:rac-stock-service:8083: registering service...
2020/06/28-16:00:22 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Attempting to connect to: [192.168.161.129:5672]
2020/06/28-16:00:22 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Created new connection: rabbitConnectionFactory#611640f0:0/SimpleConnection@2b1a901d [delegate=amqp://admin@192.168.161.129:5672/, localPort= 49992]
2020/06/28-16:00:22 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-STOCK-SERVICE/MSI.mshome.net:rac-stock-service:8083 - registration status: 204
2020/06/28-16:00:22 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat started on port(s): 8083 (http) with context path ''
2020/06/28-16:00:22 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration- Updating port to 8083
2020/06/28-16:00:22 [main] INFO  com.huijian.rac.RacStockServiceApplication- Started RacStockServiceApplication in 6.592 seconds (JVM running for 7.366)
2020/06/28-16:00:29 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==>  Preparing: select count(*) from sj_order where YEAR(OrderDate)=YEAR(NOW()); 
2020/06/28-16:00:29 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==> Parameters: 
2020/06/28-16:00:29 [http-nio-8083-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]- Initializing Spring DispatcherServlet 'dispatcherServlet'
2020/06/28-16:00:29 [http-nio-8083-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet- Initializing Servlet 'dispatcherServlet'
2020/06/28-16:00:29 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- <==      Total: 1
2020/06/28-16:00:29 [http-nio-8083-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet- Completed initialization in 9 ms
2020/06/28-16:00:29 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==>  Preparing: select * from pub_depart where HOSPITALID=? 
2020/06/28-16:00:29 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==> Parameters: 901600(String)
2020/06/28-16:00:29 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- <==      Total: 22
2020/06/28-16:00:31 [http-nio-8083-exec-3] INFO  com.zaxxer.hikari.HikariDataSource- HikariPool-1 - Starting...
2020/06/28-16:00:31 [http-nio-8083-exec-3] INFO  com.zaxxer.hikari.HikariDataSource- HikariPool-1 - Start completed.
2020/06/28-16:00:31 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- ==>  Preparing: select sg.*, su.UnitName from sj_goodsdictionary sg INNER join sj_unit su on GoodsName like concat('%',?,'%') and sg.UnitID = su.UnitID 
2020/06/28-16:00:31 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- ==> Parameters: 1(String)
2020/06/28-16:00:31 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- <==      Total: 11
2020/06/28-16:00:31 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:00:31 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-16:00:31 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:00:31 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:00:31 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 1(Integer), 901600(String)
2020/06/28-16:00:31 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:00:31 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:00:31 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-16:00:31 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:00:31 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:00:31 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 10(Integer), 901600(String)
2020/06/28-16:00:31 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:00:31 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:00:31 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-16:00:31 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:00:31 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:00:31 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 11(Integer), 901600(String)
2020/06/28-16:00:31 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:00:31 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:00:31 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 2(Integer)
2020/06/28-16:00:31 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:00:31 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:00:31 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 12(Integer), 901600(String)
2020/06/28-16:00:31 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:00:31 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:00:31 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-16:00:31 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:00:31 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:00:31 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 13(Integer), 901600(String)
2020/06/28-16:00:31 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:00:31 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:00:31 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-16:00:31 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:00:31 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:00:31 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 14(Integer), 901600(String)
2020/06/28-16:00:31 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:00:31 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:00:31 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 2(Integer)
2020/06/28-16:00:31 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:00:31 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:00:31 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 15(Integer), 901600(String)
2020/06/28-16:00:31 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:00:31 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:00:31 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-16:00:31 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:00:31 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:00:31 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 16(Integer), 901600(String)
2020/06/28-16:00:31 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:00:31 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:00:31 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-16:00:31 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:00:31 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:00:31 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 17(Integer), 901600(String)
2020/06/28-16:00:31 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:00:31 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:00:31 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 2(Integer)
2020/06/28-16:00:31 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:00:31 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:00:31 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 18(Integer), 901600(String)
2020/06/28-16:00:31 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:00:31 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:00:31 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-16:00:31 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:00:31 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:00:31 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 19(Integer), 901600(String)
2020/06/28-16:00:31 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:00:31 [http-nio-8083-exec-3] INFO  com.netflix.config.ChainedDynamicProperty- Flipping property: rac-order-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020/06/28-16:00:31 [http-nio-8083-exec-3] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer- Shutdown hook installed for: NFLoadBalancer-PingTimer-rac-order-service
2020/06/28-16:00:31 [http-nio-8083-exec-3] INFO  com.netflix.loadbalancer.BaseLoadBalancer- Client: rac-order-service instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=rac-order-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020/06/28-16:00:31 [http-nio-8083-exec-3] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer- Using serverListUpdater PollingServerListUpdater
2020/06/28-16:00:31 [http-nio-8083-exec-3] INFO  com.netflix.config.ChainedDynamicProperty- Flipping property: rac-order-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020/06/28-16:00:31 [http-nio-8083-exec-3] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer- DynamicServerListLoadBalancer for client rac-order-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=rac-order-service,current list of Servers=[MSI.mshome.net:8084],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:MSI.mshome.net:8084;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 GMT+08:00 1970;	First connection made: Thu Jan 01 08:00:00 GMT+08:00 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@52886d43
2020/06/28-16:00:31 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- ==>  Preparing: select * from sj_order where HospitalID = ? order by OrderDate DESC limit 1; 
2020/06/28-16:00:31 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- ==> Parameters: 901600(String)
2020/06/28-16:00:31 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- <==      Total: 1
2020/06/28-16:00:31 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- ==>  Preparing: select * from sj_orderdetail sod, sj_order so where GoodsID in ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) and sod.OrderNo = so.OrderNo and so.OrderState >= 1 order by OrderDate limit 1 
2020/06/28-16:00:31 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- ==> Parameters: 1(Integer), 10(Integer), 11(Integer), 12(Integer), 13(Integer), 14(Integer), 15(Integer), 16(Integer), 17(Integer), 18(Integer), 19(Integer)
2020/06/28-16:00:31 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- <==      Total: 1
2020/06/28-16:00:31 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- ==>  Preparing: select * from sj_secondleavestocklistdetail where HospitalID = ? and GoodsID in ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) and now() >= DATE_SUB(CURDATE(), INTERVAL 12 month) 
2020/06/28-16:00:31 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- ==> Parameters: 901600(String), 1(Integer), 10(Integer), 11(Integer), 12(Integer), 13(Integer), 14(Integer), 15(Integer), 16(Integer), 17(Integer), 18(Integer), 19(Integer)
2020/06/28-16:00:31 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- <==      Total: 5
2020/06/28-16:00:31 [http-nio-8083-exec-3] ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]- Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.ClassCastException: java.util.LinkedHashMap cannot be cast to com.huijian.rac.bean.Good] with root cause
java.lang.ClassCastException: java.util.LinkedHashMap cannot be cast to com.huijian.rac.bean.Good
	at com.huijian.rac.controller.GoodsDictionaryController.inquiryDetail(GoodsDictionaryController.java:228) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_231]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_231]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_231]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_231]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_231]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_231]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_231]
2020/06/28-16:00:32 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty- Flipping property: rac-order-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020/06/28-16:02:36 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-16:03:20 [main] INFO  com.huijian.rac.RacStockServiceApplication- No active profile set, falling back to default profiles: default
2020/06/28-16:03:20 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Multiple Spring Data modules found, entering strict repository configuration mode!
2020/06/28-16:03:20 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Bootstrapping Spring Data repositories in DEFAULT mode.
2020/06/28-16:03:20 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Finished Spring Data repository scanning in 23ms. Found 0 repository interfaces.
2020/06/28-16:03:20 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'deliveryUnitMapper' and 'com.huijian.rac.mapper.DeliveryUnitMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:03:20 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'departMapper' and 'com.huijian.rac.mapper.DepartMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:03:20 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'discardDetailMapper' and 'com.huijian.rac.mapper.DiscardDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:03:20 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'discardMapper' and 'com.huijian.rac.mapper.DiscardMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:03:20 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsDictionaryMapper' and 'com.huijian.rac.mapper.GoodsDictionaryMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:03:20 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsRecordMapper' and 'com.huijian.rac.mapper.GoodsRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:03:20 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsSupplierMapper' and 'com.huijian.rac.mapper.GoodsSupplierMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:03:20 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'leaveStockListDetailMapper' and 'com.huijian.rac.mapper.LeaveStockListDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:03:20 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'materialMapper' and 'com.huijian.rac.mapper.MaterialMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:03:20 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'outboundRecordMapper' and 'com.huijian.rac.mapper.OutboundRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:03:20 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'outboundSecondRecordMapper' and 'com.huijian.rac.mapper.OutboundSecondRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:03:20 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'reagentMapper' and 'com.huijian.rac.mapper.ReagentMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:03:20 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'returnGoodsDetailMapper' and 'com.huijian.rac.mapper.ReturnGoodsDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:03:20 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'returnGoodsMapper' and 'com.huijian.rac.mapper.ReturnGoodsMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:03:20 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'secondGoodsRecordMapper' and 'com.huijian.rac.mapper.SecondGoodsRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:03:20 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'secondLeaveStockListDetailMapper' and 'com.huijian.rac.mapper.SecondLeaveStockListDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:03:20 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'unitMapper' and 'com.huijian.rac.mapper.UnitMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:03:20 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseMapper' and 'com.huijian.rac.mapper.WarehouseMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:03:20 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseRecordMapper' and 'com.huijian.rac.mapper.WarehouseRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:03:20 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseSecondMapper' and 'com.huijian.rac.mapper.WarehouseSecondMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:03:20 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseSecondRecordMapper' and 'com.huijian.rac.mapper.WarehouseSecondRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:03:20 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'departsMapper' and 'com.huijian.rac.mapper.DepartsMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:03:20 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsPackageDetailMapper' and 'com.huijian.rac.mapper.GoodsPackageDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:03:20 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsPackageMapper' and 'com.huijian.rac.mapper.GoodsPackageMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:03:20 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'hospitalMapper' and 'com.huijian.rac.mapper.HospitalMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:03:20 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'leaveStockListSecondMapper' and 'com.huijian.rac.mapper.LeaveStockListSecondMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:03:20 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderDetailMapper' and 'com.huijian.rac.mapper.OrderDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:03:20 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderMapper' and 'com.huijian.rac.mapper.OrderMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:03:20 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderOperateMapper' and 'com.huijian.rac.mapper.OrderOperateMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:03:20 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderReturnDetailMapper' and 'com.huijian.rac.mapper.OrderReturnDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:03:20 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderReturnMapper' and 'com.huijian.rac.mapper.OrderReturnMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:03:20 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderReviewMapper' and 'com.huijian.rac.mapper.OrderReviewMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:03:20 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- No MyBatis mapper was found in '[com.huijian.rac.mapper]' package. Please check your configuration.
2020/06/28-16:03:21 [main] INFO  org.springframework.cloud.context.scope.GenericScope- BeanFactory id=b2907805-f796-3a2c-9729-4f51ea31ae6e
2020/06/28-16:03:21 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/28-16:03:21 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'redisConfig' of type [com.huijian.rac.config.RedisConfig$$EnhancerBySpringCGLIB$$69827f10] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/28-16:03:21 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/28-16:03:21 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat initialized with port(s): 8083 (http)
2020/06/28-16:03:21 [main] INFO  org.apache.catalina.core.StandardService- Starting service [Tomcat]
2020/06/28-16:03:21 [main] INFO  org.apache.catalina.core.StandardEngine- Starting Servlet engine: [Apache Tomcat/9.0.27]
2020/06/28-16:03:21 [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]- Initializing Spring embedded WebApplicationContext
2020/06/28-16:03:21 [main] INFO  org.springframework.web.context.ContextLoader- Root WebApplicationContext: initialization completed in 1582 ms
2020/06/28-16:03:22 [main] WARN  com.netflix.config.sources.URLConfigurationSource- No URLs will be polled as dynamic configuration sources.
2020/06/28-16:03:22 [main] INFO  com.netflix.config.sources.URLConfigurationSource- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020/06/28-16:03:22 [main] WARN  com.netflix.config.sources.URLConfigurationSource- No URLs will be polled as dynamic configuration sources.
2020/06/28-16:03:22 [main] INFO  com.netflix.config.sources.URLConfigurationSource- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020/06/28-16:03:22 [main] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor- Initializing ExecutorService 'applicationTaskExecutor'
2020/06/28-16:03:23 [main] WARN  org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger- You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020/06/28-16:03:24 [main] WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger- Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020/06/28-16:03:24 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory- Setting initial instance status as: STARTING
2020/06/28-16:03:24 [main] INFO  com.netflix.discovery.DiscoveryClient- Initializing Eureka in region us-east-1
2020/06/28-16:03:24 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using JSON encoding codec LegacyJacksonJson
2020/06/28-16:03:24 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using JSON decoding codec LegacyJacksonJson
2020/06/28-16:03:24 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using XML encoding codec XStreamXml
2020/06/28-16:03:24 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using XML decoding codec XStreamXml
2020/06/28-16:03:24 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-16:03:25 [main] INFO  com.netflix.discovery.DiscoveryClient- Disable delta property : false
2020/06/28-16:03:25 [main] INFO  com.netflix.discovery.DiscoveryClient- Single vip registry refresh property : null
2020/06/28-16:03:25 [main] INFO  com.netflix.discovery.DiscoveryClient- Force full registry fetch : false
2020/06/28-16:03:25 [main] INFO  com.netflix.discovery.DiscoveryClient- Application is null : false
2020/06/28-16:03:25 [main] INFO  com.netflix.discovery.DiscoveryClient- Registered Applications size is zero : true
2020/06/28-16:03:25 [main] INFO  com.netflix.discovery.DiscoveryClient- Application version is -1: true
2020/06/28-16:03:25 [main] INFO  com.netflix.discovery.DiscoveryClient- Getting all instance registry info from the eureka server
2020/06/28-16:03:25 [main] INFO  com.netflix.discovery.DiscoveryClient- The response status is 200
2020/06/28-16:03:25 [main] INFO  com.netflix.discovery.DiscoveryClient- Starting heartbeat executor: renew interval is: 30
2020/06/28-16:03:25 [main] INFO  com.netflix.discovery.InstanceInfoReplicator- InstanceInfoReplicator onDemand update allowed rate per min is 4
2020/06/28-16:03:25 [main] INFO  com.netflix.discovery.DiscoveryClient- Discovery Client initialized at timestamp 1593331405270 with initial instances count: 2
2020/06/28-16:03:25 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry- Registering application RAC-STOCK-SERVICE with eureka with status UP
2020/06/28-16:03:25 [main] INFO  com.netflix.discovery.DiscoveryClient- Saw local status change event StatusChangeEvent [timestamp=1593331405274, current=UP, previous=STARTING]
2020/06/28-16:03:25 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-STOCK-SERVICE/MSI.mshome.net:rac-stock-service:8083: registering service...
2020/06/28-16:03:25 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Attempting to connect to: [192.168.161.129:5672]
2020/06/28-16:03:25 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Created new connection: rabbitConnectionFactory#2755617b:0/SimpleConnection@4f1a5b93 [delegate=amqp://admin@192.168.161.129:5672/, localPort= 50245]
2020/06/28-16:03:25 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-STOCK-SERVICE/MSI.mshome.net:rac-stock-service:8083 - registration status: 204
2020/06/28-16:03:25 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat started on port(s): 8083 (http) with context path ''
2020/06/28-16:03:25 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration- Updating port to 8083
2020/06/28-16:03:25 [main] INFO  com.huijian.rac.RacStockServiceApplication- Started RacStockServiceApplication in 7.107 seconds (JVM running for 8.074)
2020/06/28-16:03:28 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==>  Preparing: select * from pub_depart where HOSPITALID=? 
2020/06/28-16:03:28 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==> Parameters: 901600(String)
2020/06/28-16:03:28 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==>  Preparing: SELECT * from sj_order where OrderNo like concat('%',?,'%') and OrderDate >= ? and OrderDate < ? and OrderState != 0 order by OrderDate desc limit ?, ? 
2020/06/28-16:03:28 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-28 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/28-16:03:28 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- <==      Total: 0
2020/06/28-16:03:28 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- <==      Total: 22
2020/06/28-16:03:29 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==>  Preparing: select count(*) from sj_order where YEAR(OrderDate)=YEAR(NOW()); 
2020/06/28-16:03:29 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==> Parameters: 
2020/06/28-16:03:29 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- <==      Total: 1
2020/06/28-16:03:30 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==>  Preparing: select * from pub_depart where HOSPITALID=? 
2020/06/28-16:03:30 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==> Parameters: 901600(String)
2020/06/28-16:03:30 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- <==      Total: 22
2020/06/28-16:03:30 [http-nio-8083-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]- Initializing Spring DispatcherServlet 'dispatcherServlet'
2020/06/28-16:03:30 [http-nio-8083-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet- Initializing Servlet 'dispatcherServlet'
2020/06/28-16:03:30 [http-nio-8083-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet- Completed initialization in 7 ms
2020/06/28-16:03:31 [http-nio-8083-exec-2] INFO  com.zaxxer.hikari.HikariDataSource- HikariPool-1 - Starting...
2020/06/28-16:03:32 [http-nio-8083-exec-2] INFO  com.zaxxer.hikari.HikariDataSource- HikariPool-1 - Start completed.
2020/06/28-16:03:32 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- ==>  Preparing: select sg.*, su.UnitName from sj_goodsdictionary sg INNER join sj_unit su on GoodsName like concat('%',?,'%') and sg.UnitID = su.UnitID 
2020/06/28-16:03:32 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- ==> Parameters: 1(String)
2020/06/28-16:03:32 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- <==      Total: 11
2020/06/28-16:03:32 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:03:32 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-16:03:32 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:03:32 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:03:32 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 1(Integer), 901600(String)
2020/06/28-16:03:32 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:03:32 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:03:32 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-16:03:32 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:03:32 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:03:32 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 10(Integer), 901600(String)
2020/06/28-16:03:32 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:03:32 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:03:32 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-16:03:32 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:03:32 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:03:32 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 11(Integer), 901600(String)
2020/06/28-16:03:32 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:03:32 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:03:32 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 2(Integer)
2020/06/28-16:03:32 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:03:32 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:03:32 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 12(Integer), 901600(String)
2020/06/28-16:03:32 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:03:32 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:03:32 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-16:03:32 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:03:32 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:03:32 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 13(Integer), 901600(String)
2020/06/28-16:03:32 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:03:32 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:03:32 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-16:03:32 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:03:32 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:03:32 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 14(Integer), 901600(String)
2020/06/28-16:03:32 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:03:32 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:03:32 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 2(Integer)
2020/06/28-16:03:32 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:03:32 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:03:32 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 15(Integer), 901600(String)
2020/06/28-16:03:32 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:03:32 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:03:32 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-16:03:32 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:03:32 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:03:32 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 16(Integer), 901600(String)
2020/06/28-16:03:32 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:03:32 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:03:32 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-16:03:32 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:03:32 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:03:32 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 17(Integer), 901600(String)
2020/06/28-16:03:32 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:03:32 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:03:32 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 2(Integer)
2020/06/28-16:03:32 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:03:32 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:03:32 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 18(Integer), 901600(String)
2020/06/28-16:03:32 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:03:32 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:03:32 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-16:03:32 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:03:32 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:03:32 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 19(Integer), 901600(String)
2020/06/28-16:03:32 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:03:41 [http-nio-8083-exec-2] INFO  com.netflix.config.ChainedDynamicProperty- Flipping property: rac-order-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020/06/28-16:03:41 [http-nio-8083-exec-2] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer- Shutdown hook installed for: NFLoadBalancer-PingTimer-rac-order-service
2020/06/28-16:03:41 [http-nio-8083-exec-2] INFO  com.netflix.loadbalancer.BaseLoadBalancer- Client: rac-order-service instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=rac-order-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020/06/28-16:03:41 [http-nio-8083-exec-2] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer- Using serverListUpdater PollingServerListUpdater
2020/06/28-16:03:41 [http-nio-8083-exec-2] INFO  com.netflix.config.ChainedDynamicProperty- Flipping property: rac-order-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020/06/28-16:03:41 [http-nio-8083-exec-2] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer- DynamicServerListLoadBalancer for client rac-order-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=rac-order-service,current list of Servers=[MSI.mshome.net:8084],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:MSI.mshome.net:8084;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 GMT+08:00 1970;	First connection made: Thu Jan 01 08:00:00 GMT+08:00 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@68fe012a
2020/06/28-16:03:42 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- ==>  Preparing: select * from sj_order where HospitalID = ? order by OrderDate DESC limit 1; 
2020/06/28-16:03:42 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- ==> Parameters: 901600(String)
2020/06/28-16:03:42 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- <==      Total: 1
2020/06/28-16:03:42 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- ==>  Preparing: select * from sj_orderdetail sod, sj_order so where GoodsID in ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) and sod.OrderNo = so.OrderNo and so.OrderState >= 1 order by OrderDate limit 1 
2020/06/28-16:03:42 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- ==> Parameters: 1(Integer), 10(Integer), 11(Integer), 12(Integer), 13(Integer), 14(Integer), 15(Integer), 16(Integer), 17(Integer), 18(Integer), 19(Integer)
2020/06/28-16:03:42 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- <==      Total: 1
2020/06/28-16:03:49 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty- Flipping property: rac-order-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020/06/28-16:03:49 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- ==>  Preparing: select * from sj_secondleavestocklistdetail where HospitalID = ? and GoodsID in ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) and now() >= DATE_SUB(CURDATE(), INTERVAL 12 month) 
2020/06/28-16:03:49 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- ==> Parameters: 901600(String), 1(Integer), 10(Integer), 11(Integer), 12(Integer), 13(Integer), 14(Integer), 15(Integer), 16(Integer), 17(Integer), 18(Integer), 19(Integer)
2020/06/28-16:03:49 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- <==      Total: 5
2020/06/28-16:04:49 [DiscoveryClient-1] WARN  com.netflix.discovery.TimedSupervisorTask- task supervisor timed out
java.util.concurrent.TimeoutException: null
	at java.util.concurrent.FutureTask.get(FutureTask.java:205) [na:1.8.0_231]
	at com.netflix.discovery.TimedSupervisorTask.run(TimedSupervisorTask.java:66) ~[eureka-client-1.9.13.jar:1.9.13]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_231]
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266) [na:1.8.0_231]
	at java.util.concurrent.FutureTask.run(FutureTask.java) [na:1.8.0_231]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [na:1.8.0_231]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [na:1.8.0_231]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_231]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_231]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_231]
2020/06/28-16:04:49 [DiscoveryClient-0] WARN  com.netflix.discovery.TimedSupervisorTask- task supervisor timed out
java.util.concurrent.TimeoutException: null
	at java.util.concurrent.FutureTask.get(FutureTask.java:205) [na:1.8.0_231]
	at com.netflix.discovery.TimedSupervisorTask.run(TimedSupervisorTask.java:66) ~[eureka-client-1.9.13.jar:1.9.13]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_231]
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266) [na:1.8.0_231]
	at java.util.concurrent.FutureTask.run(FutureTask.java) [na:1.8.0_231]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [na:1.8.0_231]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [na:1.8.0_231]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_231]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_231]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_231]
2020/06/28-16:04:49 [http-nio-8083-exec-2] ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]- Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.ClassCastException: java.util.LinkedHashMap cannot be cast to com.huijian.rac.bean.Good] with root cause
java.lang.ClassCastException: java.util.LinkedHashMap cannot be cast to com.huijian.rac.bean.Good
	at com.huijian.rac.controller.GoodsDictionaryController.inquiryDetail(GoodsDictionaryController.java:228) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_231]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_231]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_231]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_231]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_231]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_231]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_231]
2020/06/28-16:04:49 [DiscoveryClient-CacheRefreshExecutor-0] ERROR com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient- Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://peer2:8001/eureka/}
javax.ws.rs.WebApplicationException: com.fasterxml.jackson.core.JsonParseException: processing aborted
 at [Source: (GZIPInputStream); line: 1, column: 18]
	at com.netflix.discovery.provider.DiscoveryJerseyProvider.readFrom(DiscoveryJerseyProvider.java:110) ~[eureka-client-1.9.13.jar:1.9.13]
	at com.sun.jersey.api.client.ClientResponse.getEntity(ClientResponse.java:634) ~[jersey-client-1.19.1.jar:1.19.1]
	at com.sun.jersey.api.client.ClientResponse.getEntity(ClientResponse.java:586) ~[jersey-client-1.19.1.jar:1.19.1]
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:198) ~[eureka-client-1.9.13.jar:1.9.13]
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getDelta(AbstractJerseyEurekaHttpClient.java:170) ~[eureka-client-1.9.13.jar:1.9.13]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152) [eureka-client-1.9.13.jar:1.9.13]
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73) ~[eureka-client-1.9.13.jar:1.9.13]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149) [eureka-client-1.9.13.jar:1.9.13]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152) [eureka-client-1.9.13.jar:1.9.13]
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:89) ~[eureka-client-1.9.13.jar:1.9.13]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149) [eureka-client-1.9.13.jar:1.9.13]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152) [eureka-client-1.9.13.jar:1.9.13]
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120) [eureka-client-1.9.13.jar:1.9.13]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149) [eureka-client-1.9.13.jar:1.9.13]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152) [eureka-client-1.9.13.jar:1.9.13]
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77) [eureka-client-1.9.13.jar:1.9.13]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149) [eureka-client-1.9.13.jar:1.9.13]
	at com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1103) [eureka-client-1.9.13.jar:1.9.13]
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:985) [eureka-client-1.9.13.jar:1.9.13]
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1497) [eureka-client-1.9.13.jar:1.9.13]
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1464) [eureka-client-1.9.13.jar:1.9.13]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_231]
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266) [na:1.8.0_231]
	at java.util.concurrent.FutureTask.run(FutureTask.java) [na:1.8.0_231]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_231]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_231]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_231]
Caused by: com.fasterxml.jackson.core.JsonParseException: processing aborted
 at [Source: (GZIPInputStream); line: 1, column: 18]
	at com.netflix.discovery.converters.EurekaJacksonCodec$ApplicationsDeserializer.deserialize(EurekaJacksonCodec.java:805) ~[eureka-client-1.9.13.jar:1.9.13]
	at com.netflix.discovery.converters.EurekaJacksonCodec$ApplicationsDeserializer.deserialize(EurekaJacksonCodec.java:791) ~[eureka-client-1.9.13.jar:1.9.13]
	at com.fasterxml.jackson.databind.ObjectReader._unwrapAndDeserialize(ObjectReader.java:1858) ~[jackson-databind-2.10.0.jar:2.10.0]
	at com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:1716) ~[jackson-databind-2.10.0.jar:2.10.0]
	at com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1228) ~[jackson-databind-2.10.0.jar:2.10.0]
	at com.netflix.discovery.converters.EurekaJacksonCodec.readValue(EurekaJacksonCodec.java:213) ~[eureka-client-1.9.13.jar:1.9.13]
	at com.netflix.discovery.converters.wrappers.CodecWrappers$LegacyJacksonJson.decode(CodecWrappers.java:314) ~[eureka-client-1.9.13.jar:1.9.13]
	at com.netflix.discovery.provider.DiscoveryJerseyProvider.readFrom(DiscoveryJerseyProvider.java:103) ~[eureka-client-1.9.13.jar:1.9.13]
	... 26 common frames omitted
2020/06/28-16:04:49 [DiscoveryClient-CacheRefreshExecutor-0] WARN  com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient- Request execution failed with message: com.fasterxml.jackson.core.JsonParseException: processing aborted
 at [Source: (GZIPInputStream); line: 1, column: 18]
2020/06/28-16:04:49 [DiscoveryClient-CacheRefreshExecutor-0] ERROR com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient- Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://peer2:8001/eureka/}
javax.ws.rs.WebApplicationException: com.fasterxml.jackson.core.JsonParseException: processing aborted
 at [Source: (GZIPInputStream); line: 1, column: 18]
	at com.netflix.discovery.provider.DiscoveryJerseyProvider.readFrom(DiscoveryJerseyProvider.java:110) ~[eureka-client-1.9.13.jar:1.9.13]
	at com.sun.jersey.api.client.ClientResponse.getEntity(ClientResponse.java:634) ~[jersey-client-1.19.1.jar:1.19.1]
	at com.sun.jersey.api.client.ClientResponse.getEntity(ClientResponse.java:586) ~[jersey-client-1.19.1.jar:1.19.1]
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:198) ~[eureka-client-1.9.13.jar:1.9.13]
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getDelta(AbstractJerseyEurekaHttpClient.java:170) ~[eureka-client-1.9.13.jar:1.9.13]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152) [eureka-client-1.9.13.jar:1.9.13]
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73) ~[eureka-client-1.9.13.jar:1.9.13]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149) [eureka-client-1.9.13.jar:1.9.13]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152) [eureka-client-1.9.13.jar:1.9.13]
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118) ~[eureka-client-1.9.13.jar:1.9.13]
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79) ~[eureka-client-1.9.13.jar:1.9.13]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149) [eureka-client-1.9.13.jar:1.9.13]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152) [eureka-client-1.9.13.jar:1.9.13]
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120) [eureka-client-1.9.13.jar:1.9.13]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149) [eureka-client-1.9.13.jar:1.9.13]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152) [eureka-client-1.9.13.jar:1.9.13]
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77) [eureka-client-1.9.13.jar:1.9.13]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149) [eureka-client-1.9.13.jar:1.9.13]
	at com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1103) [eureka-client-1.9.13.jar:1.9.13]
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:985) [eureka-client-1.9.13.jar:1.9.13]
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1497) [eureka-client-1.9.13.jar:1.9.13]
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1464) [eureka-client-1.9.13.jar:1.9.13]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_231]
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266) [na:1.8.0_231]
	at java.util.concurrent.FutureTask.run(FutureTask.java) [na:1.8.0_231]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_231]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_231]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_231]
Caused by: com.fasterxml.jackson.core.JsonParseException: processing aborted
 at [Source: (GZIPInputStream); line: 1, column: 18]
	at com.netflix.discovery.converters.EurekaJacksonCodec$ApplicationsDeserializer.deserialize(EurekaJacksonCodec.java:805) ~[eureka-client-1.9.13.jar:1.9.13]
	at com.netflix.discovery.converters.EurekaJacksonCodec$ApplicationsDeserializer.deserialize(EurekaJacksonCodec.java:791) ~[eureka-client-1.9.13.jar:1.9.13]
	at com.fasterxml.jackson.databind.ObjectReader._unwrapAndDeserialize(ObjectReader.java:1858) ~[jackson-databind-2.10.0.jar:2.10.0]
	at com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:1716) ~[jackson-databind-2.10.0.jar:2.10.0]
	at com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1228) ~[jackson-databind-2.10.0.jar:2.10.0]
	at com.netflix.discovery.converters.EurekaJacksonCodec.readValue(EurekaJacksonCodec.java:213) ~[eureka-client-1.9.13.jar:1.9.13]
	at com.netflix.discovery.converters.wrappers.CodecWrappers$LegacyJacksonJson.decode(CodecWrappers.java:314) ~[eureka-client-1.9.13.jar:1.9.13]
	at com.netflix.discovery.provider.DiscoveryJerseyProvider.readFrom(DiscoveryJerseyProvider.java:103) ~[eureka-client-1.9.13.jar:1.9.13]
	... 27 common frames omitted
2020/06/28-16:04:49 [DiscoveryClient-CacheRefreshExecutor-0] WARN  com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient- Request execution failed with message: com.fasterxml.jackson.core.JsonParseException: processing aborted
 at [Source: (GZIPInputStream); line: 1, column: 18]
2020/06/28-16:04:49 [Thread-31] INFO  com.netflix.loadbalancer.PollingServerListUpdater- Shutting down the Executor Pool for PollingServerListUpdater
2020/06/28-16:04:49 [SpringContextShutdownHook] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry- Unregistering application RAC-STOCK-SERVICE with eureka with status DOWN
2020/06/28-16:04:49 [SpringContextShutdownHook] WARN  com.netflix.discovery.DiscoveryClient- Saw local status change event StatusChangeEvent [timestamp=1593331489411, current=DOWN, previous=UP]
2020/06/28-16:04:49 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-STOCK-SERVICE/MSI.mshome.net:rac-stock-service:8083: registering service...
2020/06/28-16:04:49 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-STOCK-SERVICE/MSI.mshome.net:rac-stock-service:8083 - registration status: 204
2020/06/28-16:04:49 [SpringContextShutdownHook] INFO  org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer- Waiting for workers to finish.
2020/06/28-16:04:49 [DiscoveryClient-CacheRefreshExecutor-0] ERROR com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient- Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://peer3:8002/eureka/}
javax.ws.rs.WebApplicationException: com.fasterxml.jackson.core.JsonParseException: processing aborted
 at [Source: (GZIPInputStream); line: 1, column: 18]
	at com.netflix.discovery.provider.DiscoveryJerseyProvider.readFrom(DiscoveryJerseyProvider.java:110) ~[eureka-client-1.9.13.jar:1.9.13]
	at com.sun.jersey.api.client.ClientResponse.getEntity(ClientResponse.java:634) ~[jersey-client-1.19.1.jar:1.19.1]
	at com.sun.jersey.api.client.ClientResponse.getEntity(ClientResponse.java:586) ~[jersey-client-1.19.1.jar:1.19.1]
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:198) ~[eureka-client-1.9.13.jar:1.9.13]
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getDelta(AbstractJerseyEurekaHttpClient.java:170) ~[eureka-client-1.9.13.jar:1.9.13]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152) [eureka-client-1.9.13.jar:1.9.13]
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73) ~[eureka-client-1.9.13.jar:1.9.13]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149) [eureka-client-1.9.13.jar:1.9.13]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152) [eureka-client-1.9.13.jar:1.9.13]
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118) ~[eureka-client-1.9.13.jar:1.9.13]
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79) ~[eureka-client-1.9.13.jar:1.9.13]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149) [eureka-client-1.9.13.jar:1.9.13]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152) [eureka-client-1.9.13.jar:1.9.13]
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120) [eureka-client-1.9.13.jar:1.9.13]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149) [eureka-client-1.9.13.jar:1.9.13]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152) [eureka-client-1.9.13.jar:1.9.13]
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77) [eureka-client-1.9.13.jar:1.9.13]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149) [eureka-client-1.9.13.jar:1.9.13]
	at com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1103) [eureka-client-1.9.13.jar:1.9.13]
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:985) [eureka-client-1.9.13.jar:1.9.13]
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1497) [eureka-client-1.9.13.jar:1.9.13]
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1464) [eureka-client-1.9.13.jar:1.9.13]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_231]
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266) [na:1.8.0_231]
	at java.util.concurrent.FutureTask.run(FutureTask.java) [na:1.8.0_231]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_231]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_231]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_231]
Caused by: com.fasterxml.jackson.core.JsonParseException: processing aborted
 at [Source: (GZIPInputStream); line: 1, column: 18]
	at com.netflix.discovery.converters.EurekaJacksonCodec$ApplicationsDeserializer.deserialize(EurekaJacksonCodec.java:805) ~[eureka-client-1.9.13.jar:1.9.13]
	at com.netflix.discovery.converters.EurekaJacksonCodec$ApplicationsDeserializer.deserialize(EurekaJacksonCodec.java:791) ~[eureka-client-1.9.13.jar:1.9.13]
	at com.fasterxml.jackson.databind.ObjectReader._unwrapAndDeserialize(ObjectReader.java:1858) ~[jackson-databind-2.10.0.jar:2.10.0]
	at com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:1716) ~[jackson-databind-2.10.0.jar:2.10.0]
	at com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1228) ~[jackson-databind-2.10.0.jar:2.10.0]
	at com.netflix.discovery.converters.EurekaJacksonCodec.readValue(EurekaJacksonCodec.java:213) ~[eureka-client-1.9.13.jar:1.9.13]
	at com.netflix.discovery.converters.wrappers.CodecWrappers$LegacyJacksonJson.decode(CodecWrappers.java:314) ~[eureka-client-1.9.13.jar:1.9.13]
	at com.netflix.discovery.provider.DiscoveryJerseyProvider.readFrom(DiscoveryJerseyProvider.java:103) ~[eureka-client-1.9.13.jar:1.9.13]
	... 27 common frames omitted
2020/06/28-16:04:49 [DiscoveryClient-CacheRefreshExecutor-0] WARN  com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient- Request execution failed with message: com.fasterxml.jackson.core.JsonParseException: processing aborted
 at [Source: (GZIPInputStream); line: 1, column: 18]
2020/06/28-16:04:49 [DiscoveryClient-CacheRefreshExecutor-0] ERROR com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-STOCK-SERVICE/MSI.mshome.net:rac-stock-service:8083 - was unable to refresh its cache! status = Retry limit reached; giving up on completing the request
com.netflix.discovery.shared.transport.TransportException: Retry limit reached; giving up on completing the request
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:139) ~[eureka-client-1.9.13.jar:1.9.13]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149) ~[eureka-client-1.9.13.jar:1.9.13]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152) ~[eureka-client-1.9.13.jar:1.9.13]
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77) ~[eureka-client-1.9.13.jar:1.9.13]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149) ~[eureka-client-1.9.13.jar:1.9.13]
	at com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1103) [eureka-client-1.9.13.jar:1.9.13]
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:985) [eureka-client-1.9.13.jar:1.9.13]
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1497) [eureka-client-1.9.13.jar:1.9.13]
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1464) [eureka-client-1.9.13.jar:1.9.13]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_231]
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266) [na:1.8.0_231]
	at java.util.concurrent.FutureTask.run(FutureTask.java) [na:1.8.0_231]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_231]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_231]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_231]
2020/06/28-16:04:50 [SpringContextShutdownHook] INFO  org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer- Successfully waited for workers to finish.
2020/06/28-16:04:50 [SpringContextShutdownHook] INFO  org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer- Waiting for workers to finish.
2020/06/28-16:04:51 [SpringContextShutdownHook] INFO  org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer- Successfully waited for workers to finish.
2020/06/28-16:04:51 [SpringContextShutdownHook] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor- Shutting down ExecutorService 'applicationTaskExecutor'
2020/06/28-16:04:51 [SpringContextShutdownHook] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer- Shutdown hook removed for: NFLoadBalancer-PingTimer-rac-order-service
2020/06/28-16:04:51 [SpringContextShutdownHook] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer- Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82) ~[na:1.8.0_231]
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239) ~[na:1.8.0_231]
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70) ~[netflix-commons-util-0.1.1.jar:na]
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:632) [ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:883) [ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:285) [ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_231]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_231]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_231]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_231]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:339) [spring-beans-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:273) [spring-beans-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571) [spring-beans-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543) [spring-beans-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1072) [spring-beans-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504) [spring-beans-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1065) [spring-beans-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060) [spring-context-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029) [spring-context-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:978) [spring-context-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:92) [spring-cloud-context-2.2.0.RELEASE.jar:2.2.0.RELEASE]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258) [spring-beans-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571) [spring-beans-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543) [spring-beans-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1072) [spring-beans-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504) [spring-beans-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1065) [spring-beans-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060) [spring-context-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029) [spring-context-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:948) [spring-context-5.2.1.RELEASE.jar:5.2.1.RELEASE]
2020/06/28-16:04:51 [SpringContextShutdownHook] INFO  org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer- Shutdown ignored - container is not active already
2020/06/28-16:04:51 [SpringContextShutdownHook] INFO  org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer- Shutdown ignored - container is not active already
2020/06/28-16:04:51 [SpringContextShutdownHook] INFO  com.netflix.discovery.DiscoveryClient- Shutting down DiscoveryClient ...
2020/06/28-16:04:59 [main] INFO  com.huijian.rac.RacStockServiceApplication- No active profile set, falling back to default profiles: default
2020/06/28-16:05:00 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Multiple Spring Data modules found, entering strict repository configuration mode!
2020/06/28-16:05:00 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Bootstrapping Spring Data repositories in DEFAULT mode.
2020/06/28-16:05:00 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Finished Spring Data repository scanning in 22ms. Found 0 repository interfaces.
2020/06/28-16:05:00 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'deliveryUnitMapper' and 'com.huijian.rac.mapper.DeliveryUnitMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:05:00 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'departMapper' and 'com.huijian.rac.mapper.DepartMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:05:00 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'discardDetailMapper' and 'com.huijian.rac.mapper.DiscardDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:05:00 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'discardMapper' and 'com.huijian.rac.mapper.DiscardMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:05:00 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsDictionaryMapper' and 'com.huijian.rac.mapper.GoodsDictionaryMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:05:00 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsRecordMapper' and 'com.huijian.rac.mapper.GoodsRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:05:00 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsSupplierMapper' and 'com.huijian.rac.mapper.GoodsSupplierMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:05:00 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'leaveStockListDetailMapper' and 'com.huijian.rac.mapper.LeaveStockListDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:05:00 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'materialMapper' and 'com.huijian.rac.mapper.MaterialMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:05:00 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'outboundRecordMapper' and 'com.huijian.rac.mapper.OutboundRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:05:00 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'outboundSecondRecordMapper' and 'com.huijian.rac.mapper.OutboundSecondRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:05:00 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'reagentMapper' and 'com.huijian.rac.mapper.ReagentMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:05:00 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'returnGoodsDetailMapper' and 'com.huijian.rac.mapper.ReturnGoodsDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:05:00 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'returnGoodsMapper' and 'com.huijian.rac.mapper.ReturnGoodsMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:05:00 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'secondGoodsRecordMapper' and 'com.huijian.rac.mapper.SecondGoodsRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:05:00 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'secondLeaveStockListDetailMapper' and 'com.huijian.rac.mapper.SecondLeaveStockListDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:05:00 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'unitMapper' and 'com.huijian.rac.mapper.UnitMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:05:00 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseMapper' and 'com.huijian.rac.mapper.WarehouseMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:05:00 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseRecordMapper' and 'com.huijian.rac.mapper.WarehouseRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:05:00 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseSecondMapper' and 'com.huijian.rac.mapper.WarehouseSecondMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:05:00 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseSecondRecordMapper' and 'com.huijian.rac.mapper.WarehouseSecondRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:05:00 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'departsMapper' and 'com.huijian.rac.mapper.DepartsMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:05:00 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsPackageDetailMapper' and 'com.huijian.rac.mapper.GoodsPackageDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:05:00 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsPackageMapper' and 'com.huijian.rac.mapper.GoodsPackageMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:05:00 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'hospitalMapper' and 'com.huijian.rac.mapper.HospitalMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:05:00 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'leaveStockListSecondMapper' and 'com.huijian.rac.mapper.LeaveStockListSecondMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:05:00 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderDetailMapper' and 'com.huijian.rac.mapper.OrderDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:05:00 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderMapper' and 'com.huijian.rac.mapper.OrderMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:05:00 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderOperateMapper' and 'com.huijian.rac.mapper.OrderOperateMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:05:00 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderReturnDetailMapper' and 'com.huijian.rac.mapper.OrderReturnDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:05:00 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderReturnMapper' and 'com.huijian.rac.mapper.OrderReturnMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:05:00 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderReviewMapper' and 'com.huijian.rac.mapper.OrderReviewMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:05:00 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- No MyBatis mapper was found in '[com.huijian.rac.mapper]' package. Please check your configuration.
2020/06/28-16:05:00 [main] INFO  org.springframework.cloud.context.scope.GenericScope- BeanFactory id=b2907805-f796-3a2c-9729-4f51ea31ae6e
2020/06/28-16:05:00 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/28-16:05:00 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'redisConfig' of type [com.huijian.rac.config.RedisConfig$$EnhancerBySpringCGLIB$$44ed0d75] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/28-16:05:00 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/28-16:05:00 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat initialized with port(s): 8083 (http)
2020/06/28-16:05:00 [main] INFO  org.apache.catalina.core.StandardService- Starting service [Tomcat]
2020/06/28-16:05:00 [main] INFO  org.apache.catalina.core.StandardEngine- Starting Servlet engine: [Apache Tomcat/9.0.27]
2020/06/28-16:05:01 [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]- Initializing Spring embedded WebApplicationContext
2020/06/28-16:05:01 [main] INFO  org.springframework.web.context.ContextLoader- Root WebApplicationContext: initialization completed in 1581 ms
2020/06/28-16:05:02 [main] WARN  com.netflix.config.sources.URLConfigurationSource- No URLs will be polled as dynamic configuration sources.
2020/06/28-16:05:02 [main] INFO  com.netflix.config.sources.URLConfigurationSource- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020/06/28-16:05:02 [main] WARN  com.netflix.config.sources.URLConfigurationSource- No URLs will be polled as dynamic configuration sources.
2020/06/28-16:05:02 [main] INFO  com.netflix.config.sources.URLConfigurationSource- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020/06/28-16:05:02 [main] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor- Initializing ExecutorService 'applicationTaskExecutor'
2020/06/28-16:05:03 [main] WARN  org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger- You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020/06/28-16:05:03 [main] WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger- Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020/06/28-16:05:03 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory- Setting initial instance status as: STARTING
2020/06/28-16:05:03 [main] INFO  com.netflix.discovery.DiscoveryClient- Initializing Eureka in region us-east-1
2020/06/28-16:05:03 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using JSON encoding codec LegacyJacksonJson
2020/06/28-16:05:03 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using JSON decoding codec LegacyJacksonJson
2020/06/28-16:05:04 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using XML encoding codec XStreamXml
2020/06/28-16:05:04 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using XML decoding codec XStreamXml
2020/06/28-16:05:04 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-16:05:04 [main] INFO  com.netflix.discovery.DiscoveryClient- Disable delta property : false
2020/06/28-16:05:04 [main] INFO  com.netflix.discovery.DiscoveryClient- Single vip registry refresh property : null
2020/06/28-16:05:04 [main] INFO  com.netflix.discovery.DiscoveryClient- Force full registry fetch : false
2020/06/28-16:05:04 [main] INFO  com.netflix.discovery.DiscoveryClient- Application is null : false
2020/06/28-16:05:04 [main] INFO  com.netflix.discovery.DiscoveryClient- Registered Applications size is zero : true
2020/06/28-16:05:04 [main] INFO  com.netflix.discovery.DiscoveryClient- Application version is -1: true
2020/06/28-16:05:04 [main] INFO  com.netflix.discovery.DiscoveryClient- Getting all instance registry info from the eureka server
2020/06/28-16:05:04 [main] INFO  com.netflix.discovery.DiscoveryClient- The response status is 200
2020/06/28-16:05:04 [main] INFO  com.netflix.discovery.DiscoveryClient- Starting heartbeat executor: renew interval is: 30
2020/06/28-16:05:04 [main] INFO  com.netflix.discovery.InstanceInfoReplicator- InstanceInfoReplicator onDemand update allowed rate per min is 4
2020/06/28-16:05:04 [main] INFO  com.netflix.discovery.DiscoveryClient- Discovery Client initialized at timestamp 1593331504590 with initial instances count: 2
2020/06/28-16:05:04 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry- Registering application RAC-STOCK-SERVICE with eureka with status UP
2020/06/28-16:05:04 [main] INFO  com.netflix.discovery.DiscoveryClient- Saw local status change event StatusChangeEvent [timestamp=1593331504593, current=UP, previous=STARTING]
2020/06/28-16:05:04 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-STOCK-SERVICE/MSI.mshome.net:rac-stock-service:8083: registering service...
2020/06/28-16:05:04 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Attempting to connect to: [192.168.161.129:5672]
2020/06/28-16:05:04 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Created new connection: rabbitConnectionFactory#3d40498a:0/SimpleConnection@3c74d846 [delegate=amqp://admin@192.168.161.129:5672/, localPort= 50392]
2020/06/28-16:05:04 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-STOCK-SERVICE/MSI.mshome.net:rac-stock-service:8083 - registration status: 204
2020/06/28-16:05:04 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat started on port(s): 8083 (http) with context path ''
2020/06/28-16:05:04 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration- Updating port to 8083
2020/06/28-16:05:05 [main] INFO  com.huijian.rac.RacStockServiceApplication- Started RacStockServiceApplication in 6.947 seconds (JVM running for 7.819)
2020/06/28-16:05:21 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==>  Preparing: select count(*) from sj_order where YEAR(OrderDate)=YEAR(NOW()); 
2020/06/28-16:05:21 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==> Parameters: 
2020/06/28-16:05:21 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- <==      Total: 1
2020/06/28-16:05:21 [http-nio-8083-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]- Initializing Spring DispatcherServlet 'dispatcherServlet'
2020/06/28-16:05:21 [http-nio-8083-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet- Initializing Servlet 'dispatcherServlet'
2020/06/28-16:05:21 [http-nio-8083-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet- Completed initialization in 10 ms
2020/06/28-16:05:21 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==>  Preparing: select * from pub_depart where HOSPITALID=? 
2020/06/28-16:05:21 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==> Parameters: 901600(String)
2020/06/28-16:05:21 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- <==      Total: 22
2020/06/28-16:05:24 [http-nio-8083-exec-2] INFO  com.zaxxer.hikari.HikariDataSource- HikariPool-1 - Starting...
2020/06/28-16:05:24 [http-nio-8083-exec-2] INFO  com.zaxxer.hikari.HikariDataSource- HikariPool-1 - Start completed.
2020/06/28-16:05:24 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- ==>  Preparing: select sg.*, su.UnitName from sj_goodsdictionary sg INNER join sj_unit su on GoodsName like concat('%',?,'%') and sg.UnitID = su.UnitID 
2020/06/28-16:05:24 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- ==> Parameters: 1(String)
2020/06/28-16:05:24 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- <==      Total: 11
2020/06/28-16:05:24 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:05:24 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-16:05:24 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:05:24 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:05:24 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 1(Integer), 901600(String)
2020/06/28-16:05:24 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:05:24 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:05:24 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-16:05:24 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:05:24 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:05:24 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 10(Integer), 901600(String)
2020/06/28-16:05:24 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:05:24 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:05:24 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-16:05:24 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:05:24 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:05:24 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 11(Integer), 901600(String)
2020/06/28-16:05:24 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:05:24 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:05:24 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 2(Integer)
2020/06/28-16:05:24 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:05:24 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:05:24 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 12(Integer), 901600(String)
2020/06/28-16:05:24 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:05:24 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:05:24 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-16:05:24 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:05:24 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:05:24 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 13(Integer), 901600(String)
2020/06/28-16:05:24 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:05:24 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:05:24 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-16:05:24 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:05:24 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:05:24 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 14(Integer), 901600(String)
2020/06/28-16:05:24 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:05:24 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:05:24 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 2(Integer)
2020/06/28-16:05:24 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:05:24 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:05:24 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 15(Integer), 901600(String)
2020/06/28-16:05:24 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:05:24 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:05:24 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-16:05:24 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:05:24 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:05:24 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 16(Integer), 901600(String)
2020/06/28-16:05:24 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:05:24 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:05:24 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-16:05:25 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:05:25 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:05:25 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 17(Integer), 901600(String)
2020/06/28-16:05:25 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:05:25 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:05:25 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 2(Integer)
2020/06/28-16:05:25 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:05:25 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:05:25 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 18(Integer), 901600(String)
2020/06/28-16:05:25 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:05:25 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:05:25 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-16:05:25 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:05:25 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:05:25 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 19(Integer), 901600(String)
2020/06/28-16:05:25 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:05:29 [http-nio-8083-exec-2] INFO  com.netflix.config.ChainedDynamicProperty- Flipping property: rac-order-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020/06/28-16:05:29 [http-nio-8083-exec-2] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer- Shutdown hook installed for: NFLoadBalancer-PingTimer-rac-order-service
2020/06/28-16:05:29 [http-nio-8083-exec-2] INFO  com.netflix.loadbalancer.BaseLoadBalancer- Client: rac-order-service instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=rac-order-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020/06/28-16:05:29 [http-nio-8083-exec-2] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer- Using serverListUpdater PollingServerListUpdater
2020/06/28-16:05:29 [http-nio-8083-exec-2] INFO  com.netflix.config.ChainedDynamicProperty- Flipping property: rac-order-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020/06/28-16:05:29 [http-nio-8083-exec-2] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer- DynamicServerListLoadBalancer for client rac-order-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=rac-order-service,current list of Servers=[MSI.mshome.net:8084],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:MSI.mshome.net:8084;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 GMT+08:00 1970;	First connection made: Thu Jan 01 08:00:00 GMT+08:00 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@3c62af08
2020/06/28-16:05:30 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- ==>  Preparing: select * from sj_order where HospitalID = ? order by OrderDate DESC limit 1; 
2020/06/28-16:05:30 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- ==> Parameters: 901600(String)
2020/06/28-16:05:30 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- <==      Total: 1
2020/06/28-16:05:30 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- ==>  Preparing: select * from sj_orderdetail sod, sj_order so where GoodsID in ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) and sod.OrderNo = so.OrderNo and so.OrderState >= 1 order by OrderDate limit 1 
2020/06/28-16:05:30 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- ==> Parameters: 1(Integer), 10(Integer), 11(Integer), 12(Integer), 13(Integer), 14(Integer), 15(Integer), 16(Integer), 17(Integer), 18(Integer), 19(Integer)
2020/06/28-16:05:30 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- <==      Total: 1
2020/06/28-16:05:32 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty- Flipping property: rac-order-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020/06/28-16:05:32 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- ==>  Preparing: select * from sj_secondleavestocklistdetail where HospitalID = ? and GoodsID in ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) and now() >= DATE_SUB(CURDATE(), INTERVAL 12 month) 
2020/06/28-16:05:32 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- ==> Parameters: 901600(String), 1(Integer), 10(Integer), 11(Integer), 12(Integer), 13(Integer), 14(Integer), 15(Integer), 16(Integer), 17(Integer), 18(Integer), 19(Integer)
2020/06/28-16:05:32 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- <==      Total: 5
2020/06/28-16:06:26 [http-nio-8083-exec-2] ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]- Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.ClassCastException: java.util.LinkedHashMap cannot be cast to com.huijian.rac.bean.Good] with root cause
java.lang.ClassCastException: java.util.LinkedHashMap cannot be cast to com.huijian.rac.bean.Good
	at com.huijian.rac.controller.GoodsDictionaryController.inquiryDetail(GoodsDictionaryController.java:228) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_231]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_231]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_231]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_231]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_231]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_231]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_231]
2020/06/28-16:07:36 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-16:10:04 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-16:11:02 [Thread-31] INFO  com.netflix.loadbalancer.PollingServerListUpdater- Shutting down the Executor Pool for PollingServerListUpdater
2020/06/28-16:11:02 [SpringContextShutdownHook] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry- Unregistering application RAC-STOCK-SERVICE with eureka with status DOWN
2020/06/28-16:11:02 [SpringContextShutdownHook] WARN  com.netflix.discovery.DiscoveryClient- Saw local status change event StatusChangeEvent [timestamp=1593331862921, current=DOWN, previous=UP]
2020/06/28-16:11:02 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-STOCK-SERVICE/MSI.mshome.net:rac-stock-service:8083: registering service...
2020/06/28-16:11:02 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-STOCK-SERVICE/MSI.mshome.net:rac-stock-service:8083 - registration status: 204
2020/06/28-16:11:02 [SpringContextShutdownHook] INFO  org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer- Waiting for workers to finish.
2020/06/28-16:11:03 [SpringContextShutdownHook] INFO  org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer- Successfully waited for workers to finish.
2020/06/28-16:11:03 [SpringContextShutdownHook] INFO  org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer- Waiting for workers to finish.
2020/06/28-16:11:04 [SpringContextShutdownHook] INFO  org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer- Successfully waited for workers to finish.
2020/06/28-16:11:04 [SpringContextShutdownHook] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor- Shutting down ExecutorService 'applicationTaskExecutor'
2020/06/28-16:11:04 [SpringContextShutdownHook] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer- Shutdown hook removed for: NFLoadBalancer-PingTimer-rac-order-service
2020/06/28-16:11:04 [SpringContextShutdownHook] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer- Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82) ~[na:1.8.0_231]
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239) ~[na:1.8.0_231]
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70) ~[netflix-commons-util-0.1.1.jar:na]
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:632) [ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:883) [ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:285) [ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_231]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_231]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_231]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_231]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:339) [spring-beans-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:273) [spring-beans-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571) [spring-beans-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543) [spring-beans-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1072) [spring-beans-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504) [spring-beans-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1065) [spring-beans-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060) [spring-context-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029) [spring-context-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:978) [spring-context-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:92) [spring-cloud-context-2.2.0.RELEASE.jar:2.2.0.RELEASE]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258) [spring-beans-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571) [spring-beans-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543) [spring-beans-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1072) [spring-beans-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504) [spring-beans-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1065) [spring-beans-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060) [spring-context-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029) [spring-context-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:948) [spring-context-5.2.1.RELEASE.jar:5.2.1.RELEASE]
2020/06/28-16:11:04 [SpringContextShutdownHook] INFO  org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer- Shutdown ignored - container is not active already
2020/06/28-16:11:04 [SpringContextShutdownHook] INFO  org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer- Shutdown ignored - container is not active already
2020/06/28-16:11:04 [SpringContextShutdownHook] INFO  com.netflix.discovery.DiscoveryClient- Shutting down DiscoveryClient ...
2020/06/28-16:11:07 [SpringContextShutdownHook] INFO  com.netflix.discovery.DiscoveryClient- Unregistering ...
2020/06/28-16:11:07 [SpringContextShutdownHook] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-STOCK-SERVICE/MSI.mshome.net:rac-stock-service:8083 - deregister  status: 200
2020/06/28-16:11:07 [SpringContextShutdownHook] INFO  com.netflix.discovery.DiscoveryClient- Completed shut down of DiscoveryClient
2020/06/28-16:11:07 [SpringContextShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource- HikariPool-1 - Shutdown initiated...
2020/06/28-16:11:07 [SpringContextShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource- HikariPool-1 - Shutdown completed.
2020/06/28-16:11:20 [main] INFO  com.huijian.rac.RacStockServiceApplication- No active profile set, falling back to default profiles: default
2020/06/28-16:11:21 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Multiple Spring Data modules found, entering strict repository configuration mode!
2020/06/28-16:11:21 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Bootstrapping Spring Data repositories in DEFAULT mode.
2020/06/28-16:11:21 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Finished Spring Data repository scanning in 21ms. Found 0 repository interfaces.
2020/06/28-16:11:21 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'deliveryUnitMapper' and 'com.huijian.rac.mapper.DeliveryUnitMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:11:21 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'departMapper' and 'com.huijian.rac.mapper.DepartMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:11:21 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'discardDetailMapper' and 'com.huijian.rac.mapper.DiscardDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:11:21 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'discardMapper' and 'com.huijian.rac.mapper.DiscardMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:11:21 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsDictionaryMapper' and 'com.huijian.rac.mapper.GoodsDictionaryMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:11:21 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsRecordMapper' and 'com.huijian.rac.mapper.GoodsRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:11:21 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsSupplierMapper' and 'com.huijian.rac.mapper.GoodsSupplierMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:11:21 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'leaveStockListDetailMapper' and 'com.huijian.rac.mapper.LeaveStockListDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:11:21 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'materialMapper' and 'com.huijian.rac.mapper.MaterialMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:11:21 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'outboundRecordMapper' and 'com.huijian.rac.mapper.OutboundRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:11:21 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'outboundSecondRecordMapper' and 'com.huijian.rac.mapper.OutboundSecondRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:11:21 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'reagentMapper' and 'com.huijian.rac.mapper.ReagentMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:11:21 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'returnGoodsDetailMapper' and 'com.huijian.rac.mapper.ReturnGoodsDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:11:21 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'returnGoodsMapper' and 'com.huijian.rac.mapper.ReturnGoodsMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:11:21 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'secondGoodsRecordMapper' and 'com.huijian.rac.mapper.SecondGoodsRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:11:21 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'secondLeaveStockListDetailMapper' and 'com.huijian.rac.mapper.SecondLeaveStockListDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:11:21 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'unitMapper' and 'com.huijian.rac.mapper.UnitMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:11:21 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseMapper' and 'com.huijian.rac.mapper.WarehouseMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:11:21 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseRecordMapper' and 'com.huijian.rac.mapper.WarehouseRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:11:21 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseSecondMapper' and 'com.huijian.rac.mapper.WarehouseSecondMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:11:21 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseSecondRecordMapper' and 'com.huijian.rac.mapper.WarehouseSecondRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:11:21 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'departsMapper' and 'com.huijian.rac.mapper.DepartsMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:11:21 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsPackageDetailMapper' and 'com.huijian.rac.mapper.GoodsPackageDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:11:21 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsPackageMapper' and 'com.huijian.rac.mapper.GoodsPackageMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:11:21 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'hospitalMapper' and 'com.huijian.rac.mapper.HospitalMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:11:21 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'leaveStockListSecondMapper' and 'com.huijian.rac.mapper.LeaveStockListSecondMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:11:21 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderDetailMapper' and 'com.huijian.rac.mapper.OrderDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:11:21 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderMapper' and 'com.huijian.rac.mapper.OrderMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:11:21 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderOperateMapper' and 'com.huijian.rac.mapper.OrderOperateMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:11:21 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderReturnDetailMapper' and 'com.huijian.rac.mapper.OrderReturnDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:11:21 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderReturnMapper' and 'com.huijian.rac.mapper.OrderReturnMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:11:21 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderReviewMapper' and 'com.huijian.rac.mapper.OrderReviewMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:11:21 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- No MyBatis mapper was found in '[com.huijian.rac.mapper]' package. Please check your configuration.
2020/06/28-16:11:21 [main] INFO  org.springframework.cloud.context.scope.GenericScope- BeanFactory id=b2907805-f796-3a2c-9729-4f51ea31ae6e
2020/06/28-16:11:22 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/28-16:11:22 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'redisConfig' of type [com.huijian.rac.config.RedisConfig$$EnhancerBySpringCGLIB$$58eed298] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/28-16:11:22 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/28-16:11:22 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat initialized with port(s): 8083 (http)
2020/06/28-16:11:22 [main] INFO  org.apache.catalina.core.StandardService- Starting service [Tomcat]
2020/06/28-16:11:22 [main] INFO  org.apache.catalina.core.StandardEngine- Starting Servlet engine: [Apache Tomcat/9.0.27]
2020/06/28-16:11:22 [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]- Initializing Spring embedded WebApplicationContext
2020/06/28-16:11:22 [main] INFO  org.springframework.web.context.ContextLoader- Root WebApplicationContext: initialization completed in 1455 ms
2020/06/28-16:11:23 [main] WARN  com.netflix.config.sources.URLConfigurationSource- No URLs will be polled as dynamic configuration sources.
2020/06/28-16:11:23 [main] INFO  com.netflix.config.sources.URLConfigurationSource- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020/06/28-16:11:23 [main] WARN  com.netflix.config.sources.URLConfigurationSource- No URLs will be polled as dynamic configuration sources.
2020/06/28-16:11:23 [main] INFO  com.netflix.config.sources.URLConfigurationSource- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020/06/28-16:11:23 [main] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor- Initializing ExecutorService 'applicationTaskExecutor'
2020/06/28-16:11:24 [main] WARN  org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger- You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020/06/28-16:11:24 [main] WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger- Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020/06/28-16:11:24 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory- Setting initial instance status as: STARTING
2020/06/28-16:11:24 [main] INFO  com.netflix.discovery.DiscoveryClient- Initializing Eureka in region us-east-1
2020/06/28-16:11:25 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using JSON encoding codec LegacyJacksonJson
2020/06/28-16:11:25 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using JSON decoding codec LegacyJacksonJson
2020/06/28-16:11:25 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using XML encoding codec XStreamXml
2020/06/28-16:11:25 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using XML decoding codec XStreamXml
2020/06/28-16:11:25 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-16:11:25 [main] INFO  com.netflix.discovery.DiscoveryClient- Disable delta property : false
2020/06/28-16:11:25 [main] INFO  com.netflix.discovery.DiscoveryClient- Single vip registry refresh property : null
2020/06/28-16:11:25 [main] INFO  com.netflix.discovery.DiscoveryClient- Force full registry fetch : false
2020/06/28-16:11:25 [main] INFO  com.netflix.discovery.DiscoveryClient- Application is null : false
2020/06/28-16:11:25 [main] INFO  com.netflix.discovery.DiscoveryClient- Registered Applications size is zero : true
2020/06/28-16:11:25 [main] INFO  com.netflix.discovery.DiscoveryClient- Application version is -1: true
2020/06/28-16:11:25 [main] INFO  com.netflix.discovery.DiscoveryClient- Getting all instance registry info from the eureka server
2020/06/28-16:11:25 [main] INFO  com.netflix.discovery.DiscoveryClient- The response status is 200
2020/06/28-16:11:25 [main] INFO  com.netflix.discovery.DiscoveryClient- Starting heartbeat executor: renew interval is: 30
2020/06/28-16:11:25 [main] INFO  com.netflix.discovery.InstanceInfoReplicator- InstanceInfoReplicator onDemand update allowed rate per min is 4
2020/06/28-16:11:25 [main] INFO  com.netflix.discovery.DiscoveryClient- Discovery Client initialized at timestamp 1593331885599 with initial instances count: 1
2020/06/28-16:11:25 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry- Registering application RAC-STOCK-SERVICE with eureka with status UP
2020/06/28-16:11:25 [main] INFO  com.netflix.discovery.DiscoveryClient- Saw local status change event StatusChangeEvent [timestamp=1593331885602, current=UP, previous=STARTING]
2020/06/28-16:11:25 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-STOCK-SERVICE/MSI.mshome.net:rac-stock-service:8083: registering service...
2020/06/28-16:11:25 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Attempting to connect to: [192.168.161.129:5672]
2020/06/28-16:11:25 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Created new connection: rabbitConnectionFactory#baa9ce4:0/SimpleConnection@78b44fcb [delegate=amqp://admin@192.168.161.129:5672/, localPort= 50747]
2020/06/28-16:11:25 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-STOCK-SERVICE/MSI.mshome.net:rac-stock-service:8083 - registration status: 204
2020/06/28-16:11:25 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat started on port(s): 8083 (http) with context path ''
2020/06/28-16:11:25 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration- Updating port to 8083
2020/06/28-16:11:26 [main] INFO  com.huijian.rac.RacStockServiceApplication- Started RacStockServiceApplication in 6.449 seconds (JVM running for 7.248)
2020/06/28-16:11:46 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==>  Preparing: SELECT * from sj_order where OrderNo like concat('%',?,'%') and OrderDate >= ? and OrderDate < ? and OrderState != 0 order by OrderDate desc limit ?, ? 
2020/06/28-16:11:46 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-28 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/28-16:11:46 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==>  Preparing: select * from pub_depart where HOSPITALID=? 
2020/06/28-16:11:46 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==> Parameters: 901600(String)
2020/06/28-16:11:46 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- <==      Total: 0
2020/06/28-16:11:46 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- <==      Total: 22
2020/06/28-16:11:48 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==>  Preparing: select count(*) from sj_order where YEAR(OrderDate)=YEAR(NOW()); 
2020/06/28-16:11:48 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==> Parameters: 
2020/06/28-16:11:48 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- <==      Total: 1
2020/06/28-16:11:48 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==>  Preparing: select * from pub_depart where HOSPITALID=? 
2020/06/28-16:11:48 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==> Parameters: 901600(String)
2020/06/28-16:11:48 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- <==      Total: 22
2020/06/28-16:11:48 [http-nio-8083-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]- Initializing Spring DispatcherServlet 'dispatcherServlet'
2020/06/28-16:11:48 [http-nio-8083-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet- Initializing Servlet 'dispatcherServlet'
2020/06/28-16:11:48 [http-nio-8083-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet- Completed initialization in 7 ms
2020/06/28-16:11:52 [http-nio-8083-exec-2] INFO  com.zaxxer.hikari.HikariDataSource- HikariPool-1 - Starting...
2020/06/28-16:11:52 [http-nio-8083-exec-2] INFO  com.zaxxer.hikari.HikariDataSource- HikariPool-1 - Start completed.
2020/06/28-16:11:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- ==>  Preparing: select sg.*, su.UnitName from sj_goodsdictionary sg INNER join sj_unit su on GoodsName like concat('%',?,'%') and sg.UnitID = su.UnitID 
2020/06/28-16:11:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- ==> Parameters: 1(String)
2020/06/28-16:11:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- <==      Total: 11
2020/06/28-16:11:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:11:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-16:11:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:11:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:11:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 1(Integer), 901600(String)
2020/06/28-16:11:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:11:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:11:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-16:11:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:11:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:11:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 10(Integer), 901600(String)
2020/06/28-16:11:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:11:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:11:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-16:11:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:11:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:11:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 11(Integer), 901600(String)
2020/06/28-16:11:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:11:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:11:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 2(Integer)
2020/06/28-16:11:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:11:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:11:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 12(Integer), 901600(String)
2020/06/28-16:11:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:11:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:11:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-16:11:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:11:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:11:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 13(Integer), 901600(String)
2020/06/28-16:11:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:11:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:11:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-16:11:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:11:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:11:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 14(Integer), 901600(String)
2020/06/28-16:11:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:11:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:11:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 2(Integer)
2020/06/28-16:11:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:11:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:11:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 15(Integer), 901600(String)
2020/06/28-16:11:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:11:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:11:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-16:11:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:11:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:11:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 16(Integer), 901600(String)
2020/06/28-16:11:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:11:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:11:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-16:11:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:11:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:11:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 17(Integer), 901600(String)
2020/06/28-16:11:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:11:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:11:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 2(Integer)
2020/06/28-16:11:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:11:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:11:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 18(Integer), 901600(String)
2020/06/28-16:11:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:11:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:11:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-16:11:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:11:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:11:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 19(Integer), 901600(String)
2020/06/28-16:11:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:11:59 [http-nio-8083-exec-2] INFO  com.netflix.config.ChainedDynamicProperty- Flipping property: rac-order-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020/06/28-16:11:59 [http-nio-8083-exec-2] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer- Shutdown hook installed for: NFLoadBalancer-PingTimer-rac-order-service
2020/06/28-16:11:59 [http-nio-8083-exec-2] INFO  com.netflix.loadbalancer.BaseLoadBalancer- Client: rac-order-service instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=rac-order-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020/06/28-16:11:59 [http-nio-8083-exec-2] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer- Using serverListUpdater PollingServerListUpdater
2020/06/28-16:11:59 [http-nio-8083-exec-2] INFO  com.netflix.config.ChainedDynamicProperty- Flipping property: rac-order-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020/06/28-16:11:59 [http-nio-8083-exec-2] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer- DynamicServerListLoadBalancer for client rac-order-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=rac-order-service,current list of Servers=[MSI.mshome.net:8084],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:MSI.mshome.net:8084;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 GMT+08:00 1970;	First connection made: Thu Jan 01 08:00:00 GMT+08:00 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@7b80c867
2020/06/28-16:11:59 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- ==>  Preparing: select * from sj_order where HospitalID = ? order by OrderDate DESC limit 1; 
2020/06/28-16:11:59 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- ==> Parameters: 901600(String)
2020/06/28-16:11:59 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- <==      Total: 1
2020/06/28-16:11:59 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- ==>  Preparing: select * from sj_orderdetail sod, sj_order so where GoodsID in ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) and sod.OrderNo = so.OrderNo and so.OrderState >= 1 order by OrderDate limit 1 
2020/06/28-16:11:59 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- ==> Parameters: 1(Integer), 10(Integer), 11(Integer), 12(Integer), 13(Integer), 14(Integer), 15(Integer), 16(Integer), 17(Integer), 18(Integer), 19(Integer)
2020/06/28-16:11:59 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- <==      Total: 1
2020/06/28-16:12:00 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty- Flipping property: rac-order-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020/06/28-16:12:00 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- ==>  Preparing: select * from sj_secondleavestocklistdetail where HospitalID = ? and GoodsID in ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) and now() >= DATE_SUB(CURDATE(), INTERVAL 12 month) 
2020/06/28-16:12:00 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- ==> Parameters: 901600(String), 1(Integer), 10(Integer), 11(Integer), 12(Integer), 13(Integer), 14(Integer), 15(Integer), 16(Integer), 17(Integer), 18(Integer), 19(Integer)
2020/06/28-16:12:00 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- <==      Total: 5
2020/06/28-16:12:36 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-16:15:15 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool- HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=3m23s121ms983µs700ns).
2020/06/28-16:15:15 [AMQP Connection 192.168.161.129:5672] WARN  com.rabbitmq.client.impl.ForgivingExceptionHandler- An unexpected connection driver error occured (Exception message: Connection reset)
2020/06/28-16:15:15 [AMQP Connection 192.168.161.129:5672] ERROR org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Channel shutdown: connection error
2020/06/28-16:15:15 [AMQP Connection 192.168.161.129:5672] ERROR org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Channel shutdown: connection error
2020/06/28-16:15:15 [http-nio-8083-exec-2] ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]- Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.ClassCastException: java.util.LinkedHashMap cannot be cast to com.huijian.rac.bean.Good] with root cause
java.lang.ClassCastException: java.util.LinkedHashMap cannot be cast to com.huijian.rac.bean.Good
	at com.huijian.rac.controller.GoodsDictionaryController.inquiryDetail(GoodsDictionaryController.java:228) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_231]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_231]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_231]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_231]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_231]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_231]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_231]
2020/06/28-16:15:15 [Thread-30] INFO  com.netflix.loadbalancer.PollingServerListUpdater- Shutting down the Executor Pool for PollingServerListUpdater
2020/06/28-16:15:15 [SpringContextShutdownHook] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry- Unregistering application RAC-STOCK-SERVICE with eureka with status DOWN
2020/06/28-16:15:15 [SpringContextShutdownHook] WARN  com.netflix.discovery.DiscoveryClient- Saw local status change event StatusChangeEvent [timestamp=1593332115884, current=DOWN, previous=UP]
2020/06/28-16:15:15 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-STOCK-SERVICE/MSI.mshome.net:rac-stock-service:8083: registering service...
2020/06/28-16:15:15 [SpringContextShutdownHook] INFO  org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer- Waiting for workers to finish.
2020/06/28-16:15:15 [SpringContextShutdownHook] INFO  org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer- Successfully waited for workers to finish.
2020/06/28-16:15:15 [SpringContextShutdownHook] INFO  org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer- Waiting for workers to finish.
2020/06/28-16:15:15 [SpringContextShutdownHook] INFO  org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer- Successfully waited for workers to finish.
2020/06/28-16:15:15 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-STOCK-SERVICE/MSI.mshome.net:rac-stock-service:8083 - registration status: 204
2020/06/28-16:15:15 [SpringContextShutdownHook] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor- Shutting down ExecutorService 'applicationTaskExecutor'
2020/06/28-16:15:15 [SpringContextShutdownHook] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer- Shutdown hook removed for: NFLoadBalancer-PingTimer-rac-order-service
2020/06/28-16:15:15 [SpringContextShutdownHook] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer- Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82) ~[na:1.8.0_231]
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239) ~[na:1.8.0_231]
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70) ~[netflix-commons-util-0.1.1.jar:na]
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:632) [ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:883) [ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:285) [ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_231]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_231]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_231]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_231]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:339) [spring-beans-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:273) [spring-beans-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571) [spring-beans-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543) [spring-beans-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1072) [spring-beans-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504) [spring-beans-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1065) [spring-beans-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060) [spring-context-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029) [spring-context-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:978) [spring-context-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:92) [spring-cloud-context-2.2.0.RELEASE.jar:2.2.0.RELEASE]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258) [spring-beans-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571) [spring-beans-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543) [spring-beans-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1072) [spring-beans-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504) [spring-beans-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1065) [spring-beans-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060) [spring-context-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029) [spring-context-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:948) [spring-context-5.2.1.RELEASE.jar:5.2.1.RELEASE]
2020/06/28-16:15:15 [SpringContextShutdownHook] INFO  org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer- Shutdown ignored - container is not active already
2020/06/28-16:15:15 [SpringContextShutdownHook] INFO  org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer- Shutdown ignored - container is not active already
2020/06/28-16:15:15 [SpringContextShutdownHook] INFO  com.netflix.discovery.DiscoveryClient- Shutting down DiscoveryClient ...
2020/06/28-16:15:18 [SpringContextShutdownHook] INFO  com.netflix.discovery.DiscoveryClient- Unregistering ...
2020/06/28-16:15:18 [SpringContextShutdownHook] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-STOCK-SERVICE/MSI.mshome.net:rac-stock-service:8083 - deregister  status: 200
2020/06/28-16:15:18 [SpringContextShutdownHook] INFO  com.netflix.discovery.DiscoveryClient- Completed shut down of DiscoveryClient
2020/06/28-16:15:18 [SpringContextShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource- HikariPool-1 - Shutdown initiated...
2020/06/28-16:15:18 [SpringContextShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource- HikariPool-1 - Shutdown completed.
2020/06/28-16:15:32 [main] INFO  com.huijian.rac.RacStockServiceApplication- No active profile set, falling back to default profiles: default
2020/06/28-16:15:33 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Multiple Spring Data modules found, entering strict repository configuration mode!
2020/06/28-16:15:33 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Bootstrapping Spring Data repositories in DEFAULT mode.
2020/06/28-16:15:33 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Finished Spring Data repository scanning in 20ms. Found 0 repository interfaces.
2020/06/28-16:15:33 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'deliveryUnitMapper' and 'com.huijian.rac.mapper.DeliveryUnitMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:15:33 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'departMapper' and 'com.huijian.rac.mapper.DepartMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:15:33 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'discardDetailMapper' and 'com.huijian.rac.mapper.DiscardDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:15:33 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'discardMapper' and 'com.huijian.rac.mapper.DiscardMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:15:33 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsDictionaryMapper' and 'com.huijian.rac.mapper.GoodsDictionaryMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:15:33 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsRecordMapper' and 'com.huijian.rac.mapper.GoodsRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:15:33 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsSupplierMapper' and 'com.huijian.rac.mapper.GoodsSupplierMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:15:33 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'leaveStockListDetailMapper' and 'com.huijian.rac.mapper.LeaveStockListDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:15:33 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'materialMapper' and 'com.huijian.rac.mapper.MaterialMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:15:33 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'outboundRecordMapper' and 'com.huijian.rac.mapper.OutboundRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:15:33 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'outboundSecondRecordMapper' and 'com.huijian.rac.mapper.OutboundSecondRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:15:33 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'reagentMapper' and 'com.huijian.rac.mapper.ReagentMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:15:33 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'returnGoodsDetailMapper' and 'com.huijian.rac.mapper.ReturnGoodsDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:15:33 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'returnGoodsMapper' and 'com.huijian.rac.mapper.ReturnGoodsMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:15:33 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'secondGoodsRecordMapper' and 'com.huijian.rac.mapper.SecondGoodsRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:15:33 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'secondLeaveStockListDetailMapper' and 'com.huijian.rac.mapper.SecondLeaveStockListDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:15:33 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'unitMapper' and 'com.huijian.rac.mapper.UnitMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:15:33 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseMapper' and 'com.huijian.rac.mapper.WarehouseMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:15:33 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseRecordMapper' and 'com.huijian.rac.mapper.WarehouseRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:15:33 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseSecondMapper' and 'com.huijian.rac.mapper.WarehouseSecondMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:15:33 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseSecondRecordMapper' and 'com.huijian.rac.mapper.WarehouseSecondRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:15:33 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'departsMapper' and 'com.huijian.rac.mapper.DepartsMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:15:33 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsPackageDetailMapper' and 'com.huijian.rac.mapper.GoodsPackageDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:15:33 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsPackageMapper' and 'com.huijian.rac.mapper.GoodsPackageMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:15:33 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'hospitalMapper' and 'com.huijian.rac.mapper.HospitalMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:15:33 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'leaveStockListSecondMapper' and 'com.huijian.rac.mapper.LeaveStockListSecondMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:15:33 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderDetailMapper' and 'com.huijian.rac.mapper.OrderDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:15:33 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderMapper' and 'com.huijian.rac.mapper.OrderMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:15:33 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderOperateMapper' and 'com.huijian.rac.mapper.OrderOperateMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:15:33 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderReturnDetailMapper' and 'com.huijian.rac.mapper.OrderReturnDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:15:33 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderReturnMapper' and 'com.huijian.rac.mapper.OrderReturnMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:15:33 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderReviewMapper' and 'com.huijian.rac.mapper.OrderReviewMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:15:33 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- No MyBatis mapper was found in '[com.huijian.rac.mapper]' package. Please check your configuration.
2020/06/28-16:15:33 [main] INFO  org.springframework.cloud.context.scope.GenericScope- BeanFactory id=b2907805-f796-3a2c-9729-4f51ea31ae6e
2020/06/28-16:15:33 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/28-16:15:33 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'redisConfig' of type [com.huijian.rac.config.RedisConfig$$EnhancerBySpringCGLIB$$eb00277e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/28-16:15:33 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/28-16:15:34 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat initialized with port(s): 8083 (http)
2020/06/28-16:15:34 [main] INFO  org.apache.catalina.core.StandardService- Starting service [Tomcat]
2020/06/28-16:15:34 [main] INFO  org.apache.catalina.core.StandardEngine- Starting Servlet engine: [Apache Tomcat/9.0.27]
2020/06/28-16:15:34 [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]- Initializing Spring embedded WebApplicationContext
2020/06/28-16:15:34 [main] INFO  org.springframework.web.context.ContextLoader- Root WebApplicationContext: initialization completed in 1279 ms
2020/06/28-16:15:35 [main] WARN  com.netflix.config.sources.URLConfigurationSource- No URLs will be polled as dynamic configuration sources.
2020/06/28-16:15:35 [main] INFO  com.netflix.config.sources.URLConfigurationSource- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020/06/28-16:15:35 [main] WARN  com.netflix.config.sources.URLConfigurationSource- No URLs will be polled as dynamic configuration sources.
2020/06/28-16:15:35 [main] INFO  com.netflix.config.sources.URLConfigurationSource- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020/06/28-16:15:35 [main] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor- Initializing ExecutorService 'applicationTaskExecutor'
2020/06/28-16:15:36 [main] WARN  org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger- You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020/06/28-16:15:36 [main] WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger- Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020/06/28-16:15:36 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory- Setting initial instance status as: STARTING
2020/06/28-16:15:36 [main] INFO  com.netflix.discovery.DiscoveryClient- Initializing Eureka in region us-east-1
2020/06/28-16:15:36 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using JSON encoding codec LegacyJacksonJson
2020/06/28-16:15:36 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using JSON decoding codec LegacyJacksonJson
2020/06/28-16:15:36 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using XML encoding codec XStreamXml
2020/06/28-16:15:36 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using XML decoding codec XStreamXml
2020/06/28-16:15:36 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-16:15:36 [main] INFO  com.netflix.discovery.DiscoveryClient- Disable delta property : false
2020/06/28-16:15:36 [main] INFO  com.netflix.discovery.DiscoveryClient- Single vip registry refresh property : null
2020/06/28-16:15:36 [main] INFO  com.netflix.discovery.DiscoveryClient- Force full registry fetch : false
2020/06/28-16:15:36 [main] INFO  com.netflix.discovery.DiscoveryClient- Application is null : false
2020/06/28-16:15:36 [main] INFO  com.netflix.discovery.DiscoveryClient- Registered Applications size is zero : true
2020/06/28-16:15:36 [main] INFO  com.netflix.discovery.DiscoveryClient- Application version is -1: true
2020/06/28-16:15:36 [main] INFO  com.netflix.discovery.DiscoveryClient- Getting all instance registry info from the eureka server
2020/06/28-16:15:37 [main] INFO  com.netflix.discovery.DiscoveryClient- The response status is 200
2020/06/28-16:15:37 [main] INFO  com.netflix.discovery.DiscoveryClient- Starting heartbeat executor: renew interval is: 30
2020/06/28-16:15:37 [main] INFO  com.netflix.discovery.InstanceInfoReplicator- InstanceInfoReplicator onDemand update allowed rate per min is 4
2020/06/28-16:15:37 [main] INFO  com.netflix.discovery.DiscoveryClient- Discovery Client initialized at timestamp 1593332137026 with initial instances count: 1
2020/06/28-16:15:37 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry- Registering application RAC-STOCK-SERVICE with eureka with status UP
2020/06/28-16:15:37 [main] INFO  com.netflix.discovery.DiscoveryClient- Saw local status change event StatusChangeEvent [timestamp=1593332137029, current=UP, previous=STARTING]
2020/06/28-16:15:37 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-STOCK-SERVICE/MSI.mshome.net:rac-stock-service:8083: registering service...
2020/06/28-16:15:37 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Attempting to connect to: [192.168.161.129:5672]
2020/06/28-16:15:37 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Created new connection: rabbitConnectionFactory#b3e86d5:0/SimpleConnection@6e364f1f [delegate=amqp://admin@192.168.161.129:5672/, localPort= 51102]
2020/06/28-16:15:37 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-STOCK-SERVICE/MSI.mshome.net:rac-stock-service:8083 - registration status: 204
2020/06/28-16:15:37 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat started on port(s): 8083 (http) with context path ''
2020/06/28-16:15:37 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration- Updating port to 8083
2020/06/28-16:15:37 [main] INFO  com.huijian.rac.RacStockServiceApplication- Started RacStockServiceApplication in 5.766 seconds (JVM running for 6.513)
2020/06/28-16:17:36 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-16:17:42 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==>  Preparing: select count(*) from sj_order where YEAR(OrderDate)=YEAR(NOW()); 
2020/06/28-16:17:42 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==> Parameters: 
2020/06/28-16:17:42 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- <==      Total: 1
2020/06/28-16:17:42 [http-nio-8083-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]- Initializing Spring DispatcherServlet 'dispatcherServlet'
2020/06/28-16:17:42 [http-nio-8083-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet- Initializing Servlet 'dispatcherServlet'
2020/06/28-16:17:42 [http-nio-8083-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet- Completed initialization in 7 ms
2020/06/28-16:17:42 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==>  Preparing: select * from pub_depart where HOSPITALID=? 
2020/06/28-16:17:42 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==> Parameters: 901600(String)
2020/06/28-16:17:42 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- <==      Total: 22
2020/06/28-16:17:44 [http-nio-8083-exec-3] INFO  com.zaxxer.hikari.HikariDataSource- HikariPool-1 - Starting...
2020/06/28-16:17:44 [http-nio-8083-exec-3] INFO  com.zaxxer.hikari.HikariDataSource- HikariPool-1 - Start completed.
2020/06/28-16:17:44 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- ==>  Preparing: select sg.*, su.UnitName from sj_goodsdictionary sg INNER join sj_unit su on GoodsName like concat('%',?,'%') and sg.UnitID = su.UnitID 
2020/06/28-16:17:44 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- ==> Parameters: 1(String)
2020/06/28-16:17:44 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- <==      Total: 11
2020/06/28-16:17:44 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:17:44 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-16:17:44 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:17:44 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:17:44 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 1(Integer), 901600(String)
2020/06/28-16:17:45 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:17:45 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:17:45 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-16:17:45 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:17:45 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:17:45 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 10(Integer), 901600(String)
2020/06/28-16:17:45 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:17:45 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:17:45 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-16:17:45 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:17:45 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:17:45 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 11(Integer), 901600(String)
2020/06/28-16:17:45 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:17:45 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:17:45 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 2(Integer)
2020/06/28-16:17:45 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:17:45 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:17:45 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 12(Integer), 901600(String)
2020/06/28-16:17:45 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:17:45 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:17:45 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-16:17:45 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:17:45 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:17:45 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 13(Integer), 901600(String)
2020/06/28-16:17:45 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:17:45 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:17:45 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-16:17:45 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:17:45 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:17:45 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 14(Integer), 901600(String)
2020/06/28-16:17:45 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:17:45 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:17:45 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 2(Integer)
2020/06/28-16:17:45 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:17:45 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:17:45 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 15(Integer), 901600(String)
2020/06/28-16:17:45 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:17:45 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:17:45 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-16:17:45 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:17:45 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:17:45 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 16(Integer), 901600(String)
2020/06/28-16:17:45 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:17:45 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:17:45 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-16:17:45 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:17:45 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:17:45 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 17(Integer), 901600(String)
2020/06/28-16:17:45 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:17:45 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:17:45 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 2(Integer)
2020/06/28-16:17:45 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:17:45 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:17:45 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 18(Integer), 901600(String)
2020/06/28-16:17:45 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:17:45 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:17:45 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-16:17:45 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:17:45 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:17:45 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 19(Integer), 901600(String)
2020/06/28-16:17:45 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:17:45 [http-nio-8083-exec-3] INFO  com.netflix.config.ChainedDynamicProperty- Flipping property: rac-order-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020/06/28-16:17:45 [http-nio-8083-exec-3] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer- Shutdown hook installed for: NFLoadBalancer-PingTimer-rac-order-service
2020/06/28-16:17:45 [http-nio-8083-exec-3] INFO  com.netflix.loadbalancer.BaseLoadBalancer- Client: rac-order-service instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=rac-order-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020/06/28-16:17:45 [http-nio-8083-exec-3] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer- Using serverListUpdater PollingServerListUpdater
2020/06/28-16:17:45 [http-nio-8083-exec-3] INFO  com.netflix.config.ChainedDynamicProperty- Flipping property: rac-order-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020/06/28-16:17:45 [http-nio-8083-exec-3] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer- DynamicServerListLoadBalancer for client rac-order-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=rac-order-service,current list of Servers=[MSI.mshome.net:8084],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:MSI.mshome.net:8084;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 GMT+08:00 1970;	First connection made: Thu Jan 01 08:00:00 GMT+08:00 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@194e934f
2020/06/28-16:17:45 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- ==>  Preparing: select * from sj_order where HospitalID = ? order by OrderDate DESC limit 1; 
2020/06/28-16:17:45 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- ==> Parameters: 901600(String)
2020/06/28-16:17:45 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- <==      Total: 1
2020/06/28-16:17:45 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- ==>  Preparing: select * from sj_orderdetail sod, sj_order so where GoodsID in ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) and sod.OrderNo = so.OrderNo and so.OrderState >= 1 order by OrderDate limit 1 
2020/06/28-16:17:45 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- ==> Parameters: 1(Integer), 10(Integer), 11(Integer), 12(Integer), 13(Integer), 14(Integer), 15(Integer), 16(Integer), 17(Integer), 18(Integer), 19(Integer)
2020/06/28-16:17:45 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- <==      Total: 1
2020/06/28-16:17:45 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- ==>  Preparing: select * from sj_secondleavestocklistdetail where HospitalID = ? and GoodsID in ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) and now() >= DATE_SUB(CURDATE(), INTERVAL 12 month) 
2020/06/28-16:17:45 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- ==> Parameters: 901600(String), 1(Integer), 10(Integer), 11(Integer), 12(Integer), 13(Integer), 14(Integer), 15(Integer), 16(Integer), 17(Integer), 18(Integer), 19(Integer)
2020/06/28-16:17:45 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- <==      Total: 5
2020/06/28-16:17:45 [http-nio-8083-exec-3] ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]- Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.ClassCastException: java.util.LinkedHashMap cannot be cast to com.huijian.rac.bean.Good] with root cause
java.lang.ClassCastException: java.util.LinkedHashMap cannot be cast to com.huijian.rac.bean.Good
	at com.huijian.rac.controller.GoodsDictionaryController.inquiryDetail(GoodsDictionaryController.java:228) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_231]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_231]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_231]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_231]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_231]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_231]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_231]
2020/06/28-16:17:46 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty- Flipping property: rac-order-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020/06/28-16:19:36 [main] INFO  com.huijian.rac.RacStockServiceApplication- No active profile set, falling back to default profiles: default
2020/06/28-16:19:36 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Multiple Spring Data modules found, entering strict repository configuration mode!
2020/06/28-16:19:36 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Bootstrapping Spring Data repositories in DEFAULT mode.
2020/06/28-16:19:36 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Finished Spring Data repository scanning in 21ms. Found 0 repository interfaces.
2020/06/28-16:19:36 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'deliveryUnitMapper' and 'com.huijian.rac.mapper.DeliveryUnitMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:19:36 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'departMapper' and 'com.huijian.rac.mapper.DepartMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:19:36 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'discardDetailMapper' and 'com.huijian.rac.mapper.DiscardDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:19:36 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'discardMapper' and 'com.huijian.rac.mapper.DiscardMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:19:36 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsDictionaryMapper' and 'com.huijian.rac.mapper.GoodsDictionaryMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:19:36 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsRecordMapper' and 'com.huijian.rac.mapper.GoodsRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:19:36 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsSupplierMapper' and 'com.huijian.rac.mapper.GoodsSupplierMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:19:36 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'leaveStockListDetailMapper' and 'com.huijian.rac.mapper.LeaveStockListDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:19:36 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'materialMapper' and 'com.huijian.rac.mapper.MaterialMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:19:36 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'outboundRecordMapper' and 'com.huijian.rac.mapper.OutboundRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:19:36 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'outboundSecondRecordMapper' and 'com.huijian.rac.mapper.OutboundSecondRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:19:36 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'reagentMapper' and 'com.huijian.rac.mapper.ReagentMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:19:36 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'returnGoodsDetailMapper' and 'com.huijian.rac.mapper.ReturnGoodsDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:19:36 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'returnGoodsMapper' and 'com.huijian.rac.mapper.ReturnGoodsMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:19:36 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'secondGoodsRecordMapper' and 'com.huijian.rac.mapper.SecondGoodsRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:19:36 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'secondLeaveStockListDetailMapper' and 'com.huijian.rac.mapper.SecondLeaveStockListDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:19:36 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'unitMapper' and 'com.huijian.rac.mapper.UnitMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:19:36 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseMapper' and 'com.huijian.rac.mapper.WarehouseMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:19:36 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseRecordMapper' and 'com.huijian.rac.mapper.WarehouseRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:19:36 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseSecondMapper' and 'com.huijian.rac.mapper.WarehouseSecondMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:19:36 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseSecondRecordMapper' and 'com.huijian.rac.mapper.WarehouseSecondRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:19:36 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'departsMapper' and 'com.huijian.rac.mapper.DepartsMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:19:36 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsPackageDetailMapper' and 'com.huijian.rac.mapper.GoodsPackageDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:19:36 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsPackageMapper' and 'com.huijian.rac.mapper.GoodsPackageMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:19:36 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'hospitalMapper' and 'com.huijian.rac.mapper.HospitalMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:19:36 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'leaveStockListSecondMapper' and 'com.huijian.rac.mapper.LeaveStockListSecondMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:19:36 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderDetailMapper' and 'com.huijian.rac.mapper.OrderDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:19:36 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderMapper' and 'com.huijian.rac.mapper.OrderMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:19:36 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderOperateMapper' and 'com.huijian.rac.mapper.OrderOperateMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:19:36 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderReturnDetailMapper' and 'com.huijian.rac.mapper.OrderReturnDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:19:36 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderReturnMapper' and 'com.huijian.rac.mapper.OrderReturnMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:19:36 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderReviewMapper' and 'com.huijian.rac.mapper.OrderReviewMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:19:36 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- No MyBatis mapper was found in '[com.huijian.rac.mapper]' package. Please check your configuration.
2020/06/28-16:19:36 [main] INFO  org.springframework.cloud.context.scope.GenericScope- BeanFactory id=b2907805-f796-3a2c-9729-4f51ea31ae6e
2020/06/28-16:19:37 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/28-16:19:37 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'redisConfig' of type [com.huijian.rac.config.RedisConfig$$EnhancerBySpringCGLIB$$8b435071] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/28-16:19:37 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/28-16:19:37 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat initialized with port(s): 8083 (http)
2020/06/28-16:19:37 [main] INFO  org.apache.catalina.core.StandardService- Starting service [Tomcat]
2020/06/28-16:19:37 [main] INFO  org.apache.catalina.core.StandardEngine- Starting Servlet engine: [Apache Tomcat/9.0.27]
2020/06/28-16:19:37 [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]- Initializing Spring embedded WebApplicationContext
2020/06/28-16:19:37 [main] INFO  org.springframework.web.context.ContextLoader- Root WebApplicationContext: initialization completed in 1353 ms
2020/06/28-16:19:38 [main] WARN  com.netflix.config.sources.URLConfigurationSource- No URLs will be polled as dynamic configuration sources.
2020/06/28-16:19:38 [main] INFO  com.netflix.config.sources.URLConfigurationSource- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020/06/28-16:19:38 [main] WARN  com.netflix.config.sources.URLConfigurationSource- No URLs will be polled as dynamic configuration sources.
2020/06/28-16:19:38 [main] INFO  com.netflix.config.sources.URLConfigurationSource- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020/06/28-16:19:38 [main] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor- Initializing ExecutorService 'applicationTaskExecutor'
2020/06/28-16:19:39 [main] WARN  org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger- You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020/06/28-16:19:39 [main] WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger- Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020/06/28-16:19:39 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory- Setting initial instance status as: STARTING
2020/06/28-16:19:39 [main] INFO  com.netflix.discovery.DiscoveryClient- Initializing Eureka in region us-east-1
2020/06/28-16:19:39 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using JSON encoding codec LegacyJacksonJson
2020/06/28-16:19:39 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using JSON decoding codec LegacyJacksonJson
2020/06/28-16:19:40 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using XML encoding codec XStreamXml
2020/06/28-16:19:40 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using XML decoding codec XStreamXml
2020/06/28-16:19:40 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-16:19:40 [main] INFO  com.netflix.discovery.DiscoveryClient- Disable delta property : false
2020/06/28-16:19:40 [main] INFO  com.netflix.discovery.DiscoveryClient- Single vip registry refresh property : null
2020/06/28-16:19:40 [main] INFO  com.netflix.discovery.DiscoveryClient- Force full registry fetch : false
2020/06/28-16:19:40 [main] INFO  com.netflix.discovery.DiscoveryClient- Application is null : false
2020/06/28-16:19:40 [main] INFO  com.netflix.discovery.DiscoveryClient- Registered Applications size is zero : true
2020/06/28-16:19:40 [main] INFO  com.netflix.discovery.DiscoveryClient- Application version is -1: true
2020/06/28-16:19:40 [main] INFO  com.netflix.discovery.DiscoveryClient- Getting all instance registry info from the eureka server
2020/06/28-16:19:40 [main] INFO  com.netflix.discovery.DiscoveryClient- The response status is 200
2020/06/28-16:19:40 [main] INFO  com.netflix.discovery.DiscoveryClient- Starting heartbeat executor: renew interval is: 30
2020/06/28-16:19:40 [main] INFO  com.netflix.discovery.InstanceInfoReplicator- InstanceInfoReplicator onDemand update allowed rate per min is 4
2020/06/28-16:19:40 [main] INFO  com.netflix.discovery.DiscoveryClient- Discovery Client initialized at timestamp 1593332380496 with initial instances count: 2
2020/06/28-16:19:40 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry- Registering application RAC-STOCK-SERVICE with eureka with status UP
2020/06/28-16:19:40 [main] INFO  com.netflix.discovery.DiscoveryClient- Saw local status change event StatusChangeEvent [timestamp=1593332380500, current=UP, previous=STARTING]
2020/06/28-16:19:40 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-STOCK-SERVICE/MSI.mshome.net:rac-stock-service:8083: registering service...
2020/06/28-16:19:40 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Attempting to connect to: [192.168.161.129:5672]
2020/06/28-16:19:40 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Created new connection: rabbitConnectionFactory#4ecd00b5:0/SimpleConnection@347123dc [delegate=amqp://admin@192.168.161.129:5672/, localPort= 51500]
2020/06/28-16:19:40 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-STOCK-SERVICE/MSI.mshome.net:rac-stock-service:8083 - registration status: 204
2020/06/28-16:19:40 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat started on port(s): 8083 (http) with context path ''
2020/06/28-16:19:40 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration- Updating port to 8083
2020/06/28-16:19:40 [main] INFO  com.huijian.rac.RacStockServiceApplication- Started RacStockServiceApplication in 6.016 seconds (JVM running for 6.892)
2020/06/28-16:19:51 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==>  Preparing: select * from pub_depart where HOSPITALID=? 
2020/06/28-16:19:51 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==>  Preparing: SELECT * from sj_order where OrderNo like concat('%',?,'%') and OrderDate >= ? and OrderDate < ? and OrderState != 0 order by OrderDate desc limit ?, ? 
2020/06/28-16:19:51 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==> Parameters: 901600(String)
2020/06/28-16:19:51 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-28 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/28-16:19:51 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- <==      Total: 0
2020/06/28-16:19:51 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- <==      Total: 22
2020/06/28-16:19:55 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==>  Preparing: select count(*) from sj_order where YEAR(OrderDate)=YEAR(NOW()); 
2020/06/28-16:19:55 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==> Parameters: 
2020/06/28-16:19:55 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- <==      Total: 1
2020/06/28-16:19:56 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==>  Preparing: select * from pub_depart where HOSPITALID=? 
2020/06/28-16:19:56 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==> Parameters: 901600(String)
2020/06/28-16:19:56 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- <==      Total: 22
2020/06/28-16:19:56 [http-nio-8083-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]- Initializing Spring DispatcherServlet 'dispatcherServlet'
2020/06/28-16:19:56 [http-nio-8083-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet- Initializing Servlet 'dispatcherServlet'
2020/06/28-16:19:56 [http-nio-8083-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet- Completed initialization in 5 ms
2020/06/28-16:19:57 [http-nio-8083-exec-2] INFO  com.zaxxer.hikari.HikariDataSource- HikariPool-1 - Starting...
2020/06/28-16:19:58 [http-nio-8083-exec-2] INFO  com.zaxxer.hikari.HikariDataSource- HikariPool-1 - Start completed.
2020/06/28-16:19:58 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- ==>  Preparing: select sg.*, su.UnitName from sj_goodsdictionary sg INNER join sj_unit su on GoodsName like concat('%',?,'%') and sg.UnitID = su.UnitID 
2020/06/28-16:19:58 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- ==> Parameters: 1(String)
2020/06/28-16:19:58 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- <==      Total: 11
2020/06/28-16:19:58 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:19:58 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-16:19:58 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:19:58 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:19:58 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 1(Integer), 901600(String)
2020/06/28-16:19:58 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:19:58 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:19:58 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-16:19:58 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:19:58 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:19:58 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 10(Integer), 901600(String)
2020/06/28-16:19:58 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:19:58 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:19:58 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-16:19:58 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:19:58 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:19:58 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 11(Integer), 901600(String)
2020/06/28-16:19:58 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:19:58 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:19:58 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 2(Integer)
2020/06/28-16:19:58 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:19:58 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:19:58 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 12(Integer), 901600(String)
2020/06/28-16:19:58 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:19:58 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:19:58 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-16:19:58 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:19:58 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:19:58 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 13(Integer), 901600(String)
2020/06/28-16:19:58 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:19:58 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:19:58 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-16:19:58 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:19:58 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:19:58 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 14(Integer), 901600(String)
2020/06/28-16:19:58 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:19:58 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:19:58 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 2(Integer)
2020/06/28-16:19:58 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:19:58 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:19:58 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 15(Integer), 901600(String)
2020/06/28-16:19:58 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:19:58 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:19:58 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-16:19:58 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:19:58 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:19:58 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 16(Integer), 901600(String)
2020/06/28-16:19:58 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:19:58 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:19:58 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-16:19:58 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:19:58 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:19:58 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 17(Integer), 901600(String)
2020/06/28-16:19:58 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:19:58 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:19:58 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 2(Integer)
2020/06/28-16:19:58 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:19:58 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:19:58 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 18(Integer), 901600(String)
2020/06/28-16:19:58 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:19:58 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:19:58 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-16:19:58 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:19:58 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:19:58 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 19(Integer), 901600(String)
2020/06/28-16:19:58 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:19:58 [http-nio-8083-exec-2] INFO  com.netflix.config.ChainedDynamicProperty- Flipping property: rac-order-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020/06/28-16:19:58 [http-nio-8083-exec-2] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer- Shutdown hook installed for: NFLoadBalancer-PingTimer-rac-order-service
2020/06/28-16:19:58 [http-nio-8083-exec-2] INFO  com.netflix.loadbalancer.BaseLoadBalancer- Client: rac-order-service instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=rac-order-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020/06/28-16:19:58 [http-nio-8083-exec-2] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer- Using serverListUpdater PollingServerListUpdater
2020/06/28-16:19:58 [http-nio-8083-exec-2] INFO  com.netflix.config.ChainedDynamicProperty- Flipping property: rac-order-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020/06/28-16:19:58 [http-nio-8083-exec-2] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer- DynamicServerListLoadBalancer for client rac-order-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=rac-order-service,current list of Servers=[MSI.mshome.net:8084],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:MSI.mshome.net:8084;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 GMT+08:00 1970;	First connection made: Thu Jan 01 08:00:00 GMT+08:00 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@2321ae5a
2020/06/28-16:19:58 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- ==>  Preparing: select * from sj_order where HospitalID = ? order by OrderDate DESC limit 1; 
2020/06/28-16:19:58 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- ==> Parameters: 901600(String)
2020/06/28-16:19:58 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- <==      Total: 1
2020/06/28-16:19:58 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- ==>  Preparing: select * from sj_orderdetail sod, sj_order so where GoodsID in ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) and sod.OrderNo = so.OrderNo and so.OrderState >= 1 order by OrderDate limit 1 
2020/06/28-16:19:58 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- ==> Parameters: 1(Integer), 10(Integer), 11(Integer), 12(Integer), 13(Integer), 14(Integer), 15(Integer), 16(Integer), 17(Integer), 18(Integer), 19(Integer)
2020/06/28-16:19:58 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- <==      Total: 1
2020/06/28-16:19:58 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- ==>  Preparing: select * from sj_secondleavestocklistdetail where HospitalID = ? and GoodsID in ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) and now() >= DATE_SUB(CURDATE(), INTERVAL 12 month) 
2020/06/28-16:19:58 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- ==> Parameters: 901600(String), 1(Integer), 10(Integer), 11(Integer), 12(Integer), 13(Integer), 14(Integer), 15(Integer), 16(Integer), 17(Integer), 18(Integer), 19(Integer)
2020/06/28-16:19:58 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- <==      Total: 5
2020/06/28-16:19:58 [http-nio-8083-exec-2] ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]- Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.ClassCastException: java.util.LinkedHashMap cannot be cast to com.huijian.rac.bean.Good] with root cause
java.lang.ClassCastException: java.util.LinkedHashMap cannot be cast to com.huijian.rac.bean.Good
	at com.huijian.rac.controller.GoodsDictionaryController.inquiryDetail(GoodsDictionaryController.java:228) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_231]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_231]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_231]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_231]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_231]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_231]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_231]
2020/06/28-16:19:59 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty- Flipping property: rac-order-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020/06/28-16:20:28 [main] INFO  com.huijian.rac.RacStockServiceApplication- No active profile set, falling back to default profiles: default
2020/06/28-16:20:29 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Multiple Spring Data modules found, entering strict repository configuration mode!
2020/06/28-16:20:29 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Bootstrapping Spring Data repositories in DEFAULT mode.
2020/06/28-16:20:29 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Finished Spring Data repository scanning in 24ms. Found 0 repository interfaces.
2020/06/28-16:20:29 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'deliveryUnitMapper' and 'com.huijian.rac.mapper.DeliveryUnitMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:20:29 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'departMapper' and 'com.huijian.rac.mapper.DepartMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:20:29 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'discardDetailMapper' and 'com.huijian.rac.mapper.DiscardDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:20:29 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'discardMapper' and 'com.huijian.rac.mapper.DiscardMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:20:29 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsDictionaryMapper' and 'com.huijian.rac.mapper.GoodsDictionaryMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:20:29 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsRecordMapper' and 'com.huijian.rac.mapper.GoodsRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:20:29 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsSupplierMapper' and 'com.huijian.rac.mapper.GoodsSupplierMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:20:29 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'leaveStockListDetailMapper' and 'com.huijian.rac.mapper.LeaveStockListDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:20:29 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'materialMapper' and 'com.huijian.rac.mapper.MaterialMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:20:29 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'outboundRecordMapper' and 'com.huijian.rac.mapper.OutboundRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:20:29 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'outboundSecondRecordMapper' and 'com.huijian.rac.mapper.OutboundSecondRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:20:29 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'reagentMapper' and 'com.huijian.rac.mapper.ReagentMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:20:29 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'returnGoodsDetailMapper' and 'com.huijian.rac.mapper.ReturnGoodsDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:20:29 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'returnGoodsMapper' and 'com.huijian.rac.mapper.ReturnGoodsMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:20:29 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'secondGoodsRecordMapper' and 'com.huijian.rac.mapper.SecondGoodsRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:20:29 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'secondLeaveStockListDetailMapper' and 'com.huijian.rac.mapper.SecondLeaveStockListDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:20:29 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'unitMapper' and 'com.huijian.rac.mapper.UnitMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:20:29 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseMapper' and 'com.huijian.rac.mapper.WarehouseMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:20:29 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseRecordMapper' and 'com.huijian.rac.mapper.WarehouseRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:20:29 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseSecondMapper' and 'com.huijian.rac.mapper.WarehouseSecondMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:20:29 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseSecondRecordMapper' and 'com.huijian.rac.mapper.WarehouseSecondRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:20:29 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'departsMapper' and 'com.huijian.rac.mapper.DepartsMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:20:29 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsPackageDetailMapper' and 'com.huijian.rac.mapper.GoodsPackageDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:20:29 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsPackageMapper' and 'com.huijian.rac.mapper.GoodsPackageMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:20:29 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'hospitalMapper' and 'com.huijian.rac.mapper.HospitalMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:20:29 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'leaveStockListSecondMapper' and 'com.huijian.rac.mapper.LeaveStockListSecondMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:20:29 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderDetailMapper' and 'com.huijian.rac.mapper.OrderDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:20:29 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderMapper' and 'com.huijian.rac.mapper.OrderMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:20:29 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderOperateMapper' and 'com.huijian.rac.mapper.OrderOperateMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:20:29 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderReturnDetailMapper' and 'com.huijian.rac.mapper.OrderReturnDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:20:29 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderReturnMapper' and 'com.huijian.rac.mapper.OrderReturnMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:20:29 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderReviewMapper' and 'com.huijian.rac.mapper.OrderReviewMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:20:29 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- No MyBatis mapper was found in '[com.huijian.rac.mapper]' package. Please check your configuration.
2020/06/28-16:20:29 [main] INFO  org.springframework.cloud.context.scope.GenericScope- BeanFactory id=b2907805-f796-3a2c-9729-4f51ea31ae6e
2020/06/28-16:20:29 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/28-16:20:30 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'redisConfig' of type [com.huijian.rac.config.RedisConfig$$EnhancerBySpringCGLIB$$e7c8f2d5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/28-16:20:30 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/28-16:20:30 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat initialized with port(s): 8083 (http)
2020/06/28-16:20:30 [main] INFO  org.apache.catalina.core.StandardService- Starting service [Tomcat]
2020/06/28-16:20:30 [main] INFO  org.apache.catalina.core.StandardEngine- Starting Servlet engine: [Apache Tomcat/9.0.27]
2020/06/28-16:20:30 [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]- Initializing Spring embedded WebApplicationContext
2020/06/28-16:20:30 [main] INFO  org.springframework.web.context.ContextLoader- Root WebApplicationContext: initialization completed in 1982 ms
2020/06/28-16:20:31 [main] WARN  com.netflix.config.sources.URLConfigurationSource- No URLs will be polled as dynamic configuration sources.
2020/06/28-16:20:31 [main] INFO  com.netflix.config.sources.URLConfigurationSource- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020/06/28-16:20:31 [main] WARN  com.netflix.config.sources.URLConfigurationSource- No URLs will be polled as dynamic configuration sources.
2020/06/28-16:20:31 [main] INFO  com.netflix.config.sources.URLConfigurationSource- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020/06/28-16:20:31 [main] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor- Initializing ExecutorService 'applicationTaskExecutor'
2020/06/28-16:20:33 [main] WARN  org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger- You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020/06/28-16:20:33 [main] WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger- Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020/06/28-16:20:33 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory- Setting initial instance status as: STARTING
2020/06/28-16:20:33 [main] INFO  com.netflix.discovery.DiscoveryClient- Initializing Eureka in region us-east-1
2020/06/28-16:20:33 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using JSON encoding codec LegacyJacksonJson
2020/06/28-16:20:33 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using JSON decoding codec LegacyJacksonJson
2020/06/28-16:20:33 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using XML encoding codec XStreamXml
2020/06/28-16:20:33 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using XML decoding codec XStreamXml
2020/06/28-16:20:33 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-16:20:34 [main] INFO  com.netflix.discovery.DiscoveryClient- Disable delta property : false
2020/06/28-16:20:34 [main] INFO  com.netflix.discovery.DiscoveryClient- Single vip registry refresh property : null
2020/06/28-16:20:34 [main] INFO  com.netflix.discovery.DiscoveryClient- Force full registry fetch : false
2020/06/28-16:20:34 [main] INFO  com.netflix.discovery.DiscoveryClient- Application is null : false
2020/06/28-16:20:34 [main] INFO  com.netflix.discovery.DiscoveryClient- Registered Applications size is zero : true
2020/06/28-16:20:34 [main] INFO  com.netflix.discovery.DiscoveryClient- Application version is -1: true
2020/06/28-16:20:34 [main] INFO  com.netflix.discovery.DiscoveryClient- Getting all instance registry info from the eureka server
2020/06/28-16:20:34 [main] INFO  com.netflix.discovery.DiscoveryClient- The response status is 200
2020/06/28-16:20:34 [main] INFO  com.netflix.discovery.DiscoveryClient- Starting heartbeat executor: renew interval is: 30
2020/06/28-16:20:34 [main] INFO  com.netflix.discovery.InstanceInfoReplicator- InstanceInfoReplicator onDemand update allowed rate per min is 4
2020/06/28-16:20:34 [main] INFO  com.netflix.discovery.DiscoveryClient- Discovery Client initialized at timestamp 1593332434267 with initial instances count: 2
2020/06/28-16:20:34 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry- Registering application RAC-STOCK-SERVICE with eureka with status UP
2020/06/28-16:20:34 [main] INFO  com.netflix.discovery.DiscoveryClient- Saw local status change event StatusChangeEvent [timestamp=1593332434271, current=UP, previous=STARTING]
2020/06/28-16:20:34 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-STOCK-SERVICE/MSI.mshome.net:rac-stock-service:8083: registering service...
2020/06/28-16:20:34 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Attempting to connect to: [192.168.161.129:5672]
2020/06/28-16:20:34 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Created new connection: rabbitConnectionFactory#11e17893:0/SimpleConnection@52f118aa [delegate=amqp://admin@192.168.161.129:5672/, localPort= 51620]
2020/06/28-16:20:34 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-STOCK-SERVICE/MSI.mshome.net:rac-stock-service:8083 - registration status: 204
2020/06/28-16:20:34 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat started on port(s): 8083 (http) with context path ''
2020/06/28-16:20:34 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration- Updating port to 8083
2020/06/28-16:20:34 [main] INFO  com.huijian.rac.RacStockServiceApplication- Started RacStockServiceApplication in 7.624 seconds (JVM running for 8.562)
2020/06/28-16:20:46 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==>  Preparing: select * from pub_depart where HOSPITALID=? 
2020/06/28-16:20:46 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==>  Preparing: SELECT * from sj_order where OrderNo like concat('%',?,'%') and OrderDate >= ? and OrderDate < ? and OrderState != 0 order by OrderDate desc limit ?, ? 
2020/06/28-16:20:46 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==> Parameters: 901600(String)
2020/06/28-16:20:46 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-28 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/28-16:20:46 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- <==      Total: 0
2020/06/28-16:20:46 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- <==      Total: 22
2020/06/28-16:20:48 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==>  Preparing: select count(*) from sj_order where YEAR(OrderDate)=YEAR(NOW()); 
2020/06/28-16:20:48 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==> Parameters: 
2020/06/28-16:20:48 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- <==      Total: 1
2020/06/28-16:20:48 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==>  Preparing: select * from pub_depart where HOSPITALID=? 
2020/06/28-16:20:48 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==> Parameters: 901600(String)
2020/06/28-16:20:48 [http-nio-8083-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]- Initializing Spring DispatcherServlet 'dispatcherServlet'
2020/06/28-16:20:48 [http-nio-8083-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet- Initializing Servlet 'dispatcherServlet'
2020/06/28-16:20:48 [http-nio-8083-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet- Completed initialization in 6 ms
2020/06/28-16:20:48 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- <==      Total: 22
2020/06/28-16:20:51 [http-nio-8083-exec-2] INFO  com.zaxxer.hikari.HikariDataSource- HikariPool-1 - Starting...
2020/06/28-16:20:51 [http-nio-8083-exec-2] INFO  com.zaxxer.hikari.HikariDataSource- HikariPool-1 - Start completed.
2020/06/28-16:20:51 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- ==>  Preparing: select sg.*, su.UnitName from sj_goodsdictionary sg INNER join sj_unit su on GoodsName like concat('%',?,'%') and sg.UnitID = su.UnitID 
2020/06/28-16:20:51 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- ==> Parameters: 1(String)
2020/06/28-16:20:51 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- <==      Total: 11
2020/06/28-16:20:51 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:20:51 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-16:20:51 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:20:51 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:20:51 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 1(Integer), 901600(String)
2020/06/28-16:20:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:20:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:20:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-16:20:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:20:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:20:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 10(Integer), 901600(String)
2020/06/28-16:20:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:20:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:20:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-16:20:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:20:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:20:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 11(Integer), 901600(String)
2020/06/28-16:20:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:20:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:20:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 2(Integer)
2020/06/28-16:20:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:20:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:20:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 12(Integer), 901600(String)
2020/06/28-16:20:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:20:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:20:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-16:20:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:20:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:20:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 13(Integer), 901600(String)
2020/06/28-16:20:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:20:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:20:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-16:20:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:20:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:20:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 14(Integer), 901600(String)
2020/06/28-16:20:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:20:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:20:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 2(Integer)
2020/06/28-16:20:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:20:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:20:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 15(Integer), 901600(String)
2020/06/28-16:20:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:20:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:20:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-16:20:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:20:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:20:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 16(Integer), 901600(String)
2020/06/28-16:20:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:20:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:20:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-16:20:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:20:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:20:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 17(Integer), 901600(String)
2020/06/28-16:20:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:20:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:20:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 2(Integer)
2020/06/28-16:20:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:20:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:20:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 18(Integer), 901600(String)
2020/06/28-16:20:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:20:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:20:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-16:20:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:20:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:20:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 19(Integer), 901600(String)
2020/06/28-16:20:52 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:21:05 [http-nio-8083-exec-2] INFO  com.netflix.config.ChainedDynamicProperty- Flipping property: rac-order-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020/06/28-16:21:06 [http-nio-8083-exec-2] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer- Shutdown hook installed for: NFLoadBalancer-PingTimer-rac-order-service
2020/06/28-16:21:06 [http-nio-8083-exec-2] INFO  com.netflix.loadbalancer.BaseLoadBalancer- Client: rac-order-service instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=rac-order-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020/06/28-16:21:06 [http-nio-8083-exec-2] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer- Using serverListUpdater PollingServerListUpdater
2020/06/28-16:21:06 [http-nio-8083-exec-2] INFO  com.netflix.config.ChainedDynamicProperty- Flipping property: rac-order-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020/06/28-16:21:06 [http-nio-8083-exec-2] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer- DynamicServerListLoadBalancer for client rac-order-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=rac-order-service,current list of Servers=[MSI.mshome.net:8084],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:MSI.mshome.net:8084;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 GMT+08:00 1970;	First connection made: Thu Jan 01 08:00:00 GMT+08:00 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@7cd735b3
2020/06/28-16:21:06 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- ==>  Preparing: select * from sj_order where HospitalID = ? order by OrderDate DESC limit 1; 
2020/06/28-16:21:06 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- ==> Parameters: 901600(String)
2020/06/28-16:21:06 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- <==      Total: 1
2020/06/28-16:21:06 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- ==>  Preparing: select * from sj_orderdetail sod, sj_order so where GoodsID in ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) and sod.OrderNo = so.OrderNo and so.OrderState >= 1 order by OrderDate limit 1 
2020/06/28-16:21:06 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- ==> Parameters: 1(Integer), 10(Integer), 11(Integer), 12(Integer), 13(Integer), 14(Integer), 15(Integer), 16(Integer), 17(Integer), 18(Integer), 19(Integer)
2020/06/28-16:21:06 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- <==      Total: 1
2020/06/28-16:22:36 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-16:27:36 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-16:32:36 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-16:36:17 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-16:36:17 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool- HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m25s519ms378µs200ns).
2020/06/28-16:36:17 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty- Flipping property: rac-order-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020/06/28-16:36:17 [AMQP Connection 192.168.161.129:5672] WARN  com.rabbitmq.client.impl.ForgivingExceptionHandler- An unexpected connection driver error occured (Exception message: Connection reset)
2020/06/28-16:36:17 [AMQP Connection 192.168.161.129:5672] ERROR org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Channel shutdown: connection error
2020/06/28-16:36:17 [AMQP Connection 192.168.161.129:5672] ERROR org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Channel shutdown: connection error
2020/06/28-16:36:17 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- ==>  Preparing: select * from sj_secondleavestocklistdetail where HospitalID = ? and GoodsID in ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) and now() >= DATE_SUB(CURDATE(), INTERVAL 12 month) 
2020/06/28-16:36:17 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- ==> Parameters: 901600(String), 1(Integer), 10(Integer), 11(Integer), 12(Integer), 13(Integer), 14(Integer), 15(Integer), 16(Integer), 17(Integer), 18(Integer), 19(Integer)
2020/06/28-16:36:17 [Thread-31] INFO  com.netflix.loadbalancer.PollingServerListUpdater- Shutting down the Executor Pool for PollingServerListUpdater
2020/06/28-16:36:17 [SpringContextShutdownHook] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry- Unregistering application RAC-STOCK-SERVICE with eureka with status DOWN
2020/06/28-16:36:17 [SpringContextShutdownHook] WARN  com.netflix.discovery.DiscoveryClient- Saw local status change event StatusChangeEvent [timestamp=1593333377587, current=DOWN, previous=UP]
2020/06/28-16:36:17 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-STOCK-SERVICE/MSI.mshome.net:rac-stock-service:8083: registering service...
2020/06/28-16:36:17 [SpringContextShutdownHook] INFO  org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer- Waiting for workers to finish.
2020/06/28-16:36:17 [SpringContextShutdownHook] INFO  org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer- Successfully waited for workers to finish.
2020/06/28-16:36:17 [SpringContextShutdownHook] INFO  org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer- Waiting for workers to finish.
2020/06/28-16:36:17 [SpringContextShutdownHook] INFO  org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer- Successfully waited for workers to finish.
2020/06/28-16:36:17 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-STOCK-SERVICE/MSI.mshome.net:rac-stock-service:8083 - registration status: 204
2020/06/28-16:36:17 [SpringContextShutdownHook] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor- Shutting down ExecutorService 'applicationTaskExecutor'
2020/06/28-16:36:17 [SpringContextShutdownHook] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer- Shutdown hook removed for: NFLoadBalancer-PingTimer-rac-order-service
2020/06/28-16:36:17 [SpringContextShutdownHook] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer- Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82) ~[na:1.8.0_231]
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239) ~[na:1.8.0_231]
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70) ~[netflix-commons-util-0.1.1.jar:na]
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:632) [ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:883) [ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:285) [ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_231]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_231]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_231]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_231]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:339) [spring-beans-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:273) [spring-beans-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571) [spring-beans-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543) [spring-beans-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1072) [spring-beans-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504) [spring-beans-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1065) [spring-beans-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060) [spring-context-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029) [spring-context-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:978) [spring-context-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:92) [spring-cloud-context-2.2.0.RELEASE.jar:2.2.0.RELEASE]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258) [spring-beans-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571) [spring-beans-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543) [spring-beans-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1072) [spring-beans-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504) [spring-beans-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1065) [spring-beans-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060) [spring-context-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029) [spring-context-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:948) [spring-context-5.2.1.RELEASE.jar:5.2.1.RELEASE]
2020/06/28-16:36:17 [SpringContextShutdownHook] INFO  org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer- Shutdown ignored - container is not active already
2020/06/28-16:36:17 [SpringContextShutdownHook] INFO  org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer- Shutdown ignored - container is not active already
2020/06/28-16:36:17 [SpringContextShutdownHook] INFO  com.netflix.discovery.DiscoveryClient- Shutting down DiscoveryClient ...
2020/06/28-16:36:17 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- <==      Total: 5
2020/06/28-16:36:20 [SpringContextShutdownHook] INFO  com.netflix.discovery.DiscoveryClient- Unregistering ...
2020/06/28-16:36:20 [SpringContextShutdownHook] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-STOCK-SERVICE/MSI.mshome.net:rac-stock-service:8083 - deregister  status: 200
2020/06/28-16:36:20 [SpringContextShutdownHook] INFO  com.netflix.discovery.DiscoveryClient- Completed shut down of DiscoveryClient
2020/06/28-16:36:20 [SpringContextShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource- HikariPool-1 - Shutdown initiated...
2020/06/28-16:36:20 [SpringContextShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource- HikariPool-1 - Shutdown completed.
2020/06/28-16:36:26 [main] INFO  com.huijian.rac.RacStockServiceApplication- No active profile set, falling back to default profiles: default
2020/06/28-16:36:27 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Multiple Spring Data modules found, entering strict repository configuration mode!
2020/06/28-16:36:27 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Bootstrapping Spring Data repositories in DEFAULT mode.
2020/06/28-16:36:27 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Finished Spring Data repository scanning in 20ms. Found 0 repository interfaces.
2020/06/28-16:36:27 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'deliveryUnitMapper' and 'com.huijian.rac.mapper.DeliveryUnitMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:36:27 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'departMapper' and 'com.huijian.rac.mapper.DepartMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:36:27 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'discardDetailMapper' and 'com.huijian.rac.mapper.DiscardDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:36:27 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'discardMapper' and 'com.huijian.rac.mapper.DiscardMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:36:27 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsDictionaryMapper' and 'com.huijian.rac.mapper.GoodsDictionaryMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:36:27 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsRecordMapper' and 'com.huijian.rac.mapper.GoodsRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:36:27 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsSupplierMapper' and 'com.huijian.rac.mapper.GoodsSupplierMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:36:27 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'leaveStockListDetailMapper' and 'com.huijian.rac.mapper.LeaveStockListDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:36:27 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'materialMapper' and 'com.huijian.rac.mapper.MaterialMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:36:27 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'outboundRecordMapper' and 'com.huijian.rac.mapper.OutboundRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:36:27 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'outboundSecondRecordMapper' and 'com.huijian.rac.mapper.OutboundSecondRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:36:27 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'reagentMapper' and 'com.huijian.rac.mapper.ReagentMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:36:27 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'returnGoodsDetailMapper' and 'com.huijian.rac.mapper.ReturnGoodsDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:36:27 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'returnGoodsMapper' and 'com.huijian.rac.mapper.ReturnGoodsMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:36:27 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'secondGoodsRecordMapper' and 'com.huijian.rac.mapper.SecondGoodsRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:36:27 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'secondLeaveStockListDetailMapper' and 'com.huijian.rac.mapper.SecondLeaveStockListDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:36:27 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'unitMapper' and 'com.huijian.rac.mapper.UnitMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:36:27 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseMapper' and 'com.huijian.rac.mapper.WarehouseMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:36:27 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseRecordMapper' and 'com.huijian.rac.mapper.WarehouseRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:36:27 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseSecondMapper' and 'com.huijian.rac.mapper.WarehouseSecondMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:36:27 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseSecondRecordMapper' and 'com.huijian.rac.mapper.WarehouseSecondRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:36:27 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'departsMapper' and 'com.huijian.rac.mapper.DepartsMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:36:27 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsPackageDetailMapper' and 'com.huijian.rac.mapper.GoodsPackageDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:36:27 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsPackageMapper' and 'com.huijian.rac.mapper.GoodsPackageMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:36:27 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'hospitalMapper' and 'com.huijian.rac.mapper.HospitalMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:36:27 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'leaveStockListSecondMapper' and 'com.huijian.rac.mapper.LeaveStockListSecondMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:36:27 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderDetailMapper' and 'com.huijian.rac.mapper.OrderDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:36:27 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderMapper' and 'com.huijian.rac.mapper.OrderMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:36:27 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderOperateMapper' and 'com.huijian.rac.mapper.OrderOperateMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:36:27 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderReturnDetailMapper' and 'com.huijian.rac.mapper.OrderReturnDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:36:27 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderReturnMapper' and 'com.huijian.rac.mapper.OrderReturnMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:36:27 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderReviewMapper' and 'com.huijian.rac.mapper.OrderReviewMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:36:27 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- No MyBatis mapper was found in '[com.huijian.rac.mapper]' package. Please check your configuration.
2020/06/28-16:36:27 [main] INFO  org.springframework.cloud.context.scope.GenericScope- BeanFactory id=b2907805-f796-3a2c-9729-4f51ea31ae6e
2020/06/28-16:36:27 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/28-16:36:27 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'redisConfig' of type [com.huijian.rac.config.RedisConfig$$EnhancerBySpringCGLIB$$f09917bd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/28-16:36:27 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/28-16:36:27 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat initialized with port(s): 8083 (http)
2020/06/28-16:36:27 [main] INFO  org.apache.catalina.core.StandardService- Starting service [Tomcat]
2020/06/28-16:36:27 [main] INFO  org.apache.catalina.core.StandardEngine- Starting Servlet engine: [Apache Tomcat/9.0.27]
2020/06/28-16:36:27 [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]- Initializing Spring embedded WebApplicationContext
2020/06/28-16:36:27 [main] INFO  org.springframework.web.context.ContextLoader- Root WebApplicationContext: initialization completed in 1257 ms
2020/06/28-16:36:28 [main] WARN  com.netflix.config.sources.URLConfigurationSource- No URLs will be polled as dynamic configuration sources.
2020/06/28-16:36:28 [main] INFO  com.netflix.config.sources.URLConfigurationSource- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020/06/28-16:36:28 [main] WARN  com.netflix.config.sources.URLConfigurationSource- No URLs will be polled as dynamic configuration sources.
2020/06/28-16:36:28 [main] INFO  com.netflix.config.sources.URLConfigurationSource- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020/06/28-16:36:28 [main] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor- Initializing ExecutorService 'applicationTaskExecutor'
2020/06/28-16:36:29 [main] WARN  org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger- You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020/06/28-16:36:29 [main] WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger- Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020/06/28-16:36:30 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory- Setting initial instance status as: STARTING
2020/06/28-16:36:30 [main] INFO  com.netflix.discovery.DiscoveryClient- Initializing Eureka in region us-east-1
2020/06/28-16:36:30 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using JSON encoding codec LegacyJacksonJson
2020/06/28-16:36:30 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using JSON decoding codec LegacyJacksonJson
2020/06/28-16:36:30 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using XML encoding codec XStreamXml
2020/06/28-16:36:30 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using XML decoding codec XStreamXml
2020/06/28-16:36:30 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-16:36:30 [main] INFO  com.netflix.discovery.DiscoveryClient- Disable delta property : false
2020/06/28-16:36:30 [main] INFO  com.netflix.discovery.DiscoveryClient- Single vip registry refresh property : null
2020/06/28-16:36:30 [main] INFO  com.netflix.discovery.DiscoveryClient- Force full registry fetch : false
2020/06/28-16:36:30 [main] INFO  com.netflix.discovery.DiscoveryClient- Application is null : false
2020/06/28-16:36:30 [main] INFO  com.netflix.discovery.DiscoveryClient- Registered Applications size is zero : true
2020/06/28-16:36:30 [main] INFO  com.netflix.discovery.DiscoveryClient- Application version is -1: true
2020/06/28-16:36:30 [main] INFO  com.netflix.discovery.DiscoveryClient- Getting all instance registry info from the eureka server
2020/06/28-16:36:30 [main] INFO  com.netflix.discovery.DiscoveryClient- The response status is 200
2020/06/28-16:36:30 [main] INFO  com.netflix.discovery.DiscoveryClient- Starting heartbeat executor: renew interval is: 30
2020/06/28-16:36:30 [main] INFO  com.netflix.discovery.InstanceInfoReplicator- InstanceInfoReplicator onDemand update allowed rate per min is 4
2020/06/28-16:36:30 [main] INFO  com.netflix.discovery.DiscoveryClient- Discovery Client initialized at timestamp 1593333390882 with initial instances count: 2
2020/06/28-16:36:30 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry- Registering application RAC-STOCK-SERVICE with eureka with status UP
2020/06/28-16:36:30 [main] INFO  com.netflix.discovery.DiscoveryClient- Saw local status change event StatusChangeEvent [timestamp=1593333390885, current=UP, previous=STARTING]
2020/06/28-16:36:30 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-STOCK-SERVICE/MSI.mshome.net:rac-stock-service:8083: registering service...
2020/06/28-16:36:30 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Attempting to connect to: [192.168.161.129:5672]
2020/06/28-16:36:30 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Created new connection: rabbitConnectionFactory#2ee48610:0/SimpleConnection@312a738d [delegate=amqp://admin@192.168.161.129:5672/, localPort= 52697]
2020/06/28-16:36:30 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-STOCK-SERVICE/MSI.mshome.net:rac-stock-service:8083 - registration status: 204
2020/06/28-16:36:31 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat started on port(s): 8083 (http) with context path ''
2020/06/28-16:36:31 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration- Updating port to 8083
2020/06/28-16:36:31 [main] INFO  com.huijian.rac.RacStockServiceApplication- Started RacStockServiceApplication in 5.791 seconds (JVM running for 6.516)
2020/06/28-16:36:36 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==>  Preparing: select * from pub_depart where HOSPITALID=? 
2020/06/28-16:36:36 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==> Parameters: 901600(String)
2020/06/28-16:36:36 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==>  Preparing: SELECT * from sj_order where OrderNo like concat('%',?,'%') and OrderDate >= ? and OrderDate < ? and OrderState != 0 order by OrderDate desc limit ?, ? 
2020/06/28-16:36:36 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-28 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/28-16:36:36 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- <==      Total: 0
2020/06/28-16:36:36 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- <==      Total: 22
2020/06/28-16:36:37 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==>  Preparing: select count(*) from sj_order where YEAR(OrderDate)=YEAR(NOW()); 
2020/06/28-16:36:37 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==> Parameters: 
2020/06/28-16:36:37 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- <==      Total: 1
2020/06/28-16:36:37 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==>  Preparing: select * from pub_depart where HOSPITALID=? 
2020/06/28-16:36:37 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==> Parameters: 901600(String)
2020/06/28-16:36:37 [http-nio-8083-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]- Initializing Spring DispatcherServlet 'dispatcherServlet'
2020/06/28-16:36:37 [http-nio-8083-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet- Initializing Servlet 'dispatcherServlet'
2020/06/28-16:36:37 [http-nio-8083-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet- Completed initialization in 4 ms
2020/06/28-16:36:37 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- <==      Total: 22
2020/06/28-16:36:40 [http-nio-8083-exec-3] INFO  com.zaxxer.hikari.HikariDataSource- HikariPool-1 - Starting...
2020/06/28-16:36:41 [http-nio-8083-exec-3] INFO  com.zaxxer.hikari.HikariDataSource- HikariPool-1 - Start completed.
2020/06/28-16:36:41 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- ==>  Preparing: select sg.*, su.UnitName from sj_goodsdictionary sg INNER join sj_unit su on GoodsName like concat('%',?,'%') and sg.UnitID = su.UnitID 
2020/06/28-16:36:41 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- ==> Parameters: 1(String)
2020/06/28-16:36:41 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- <==      Total: 11
2020/06/28-16:36:41 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:36:41 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-16:36:41 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:36:41 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:36:41 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 1(Integer), 901600(String)
2020/06/28-16:36:41 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:36:41 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:36:41 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-16:36:41 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:36:41 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:36:41 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 10(Integer), 901600(String)
2020/06/28-16:36:41 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:36:41 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:36:41 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-16:36:41 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:36:41 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:36:41 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 11(Integer), 901600(String)
2020/06/28-16:36:41 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:36:41 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:36:41 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 2(Integer)
2020/06/28-16:36:41 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:36:41 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:36:41 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 12(Integer), 901600(String)
2020/06/28-16:36:41 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:36:41 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:36:41 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-16:36:41 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:36:41 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:36:41 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 13(Integer), 901600(String)
2020/06/28-16:36:41 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:36:41 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:36:41 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-16:36:41 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:36:41 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:36:41 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 14(Integer), 901600(String)
2020/06/28-16:36:41 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:36:41 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:36:41 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 2(Integer)
2020/06/28-16:36:41 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:36:41 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:36:41 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 15(Integer), 901600(String)
2020/06/28-16:36:41 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:36:41 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:36:41 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-16:36:41 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:36:41 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:36:41 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 16(Integer), 901600(String)
2020/06/28-16:36:41 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:36:41 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:36:41 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-16:36:41 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:36:41 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:36:41 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 17(Integer), 901600(String)
2020/06/28-16:36:41 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:36:41 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:36:41 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 2(Integer)
2020/06/28-16:36:41 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:36:41 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:36:41 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 18(Integer), 901600(String)
2020/06/28-16:36:41 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:36:41 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:36:41 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-16:36:41 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:36:41 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:36:41 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 19(Integer), 901600(String)
2020/06/28-16:36:41 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:36:41 [http-nio-8083-exec-3] INFO  com.netflix.config.ChainedDynamicProperty- Flipping property: rac-order-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020/06/28-16:36:41 [http-nio-8083-exec-3] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer- Shutdown hook installed for: NFLoadBalancer-PingTimer-rac-order-service
2020/06/28-16:36:41 [http-nio-8083-exec-3] INFO  com.netflix.loadbalancer.BaseLoadBalancer- Client: rac-order-service instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=rac-order-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020/06/28-16:36:41 [http-nio-8083-exec-3] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer- Using serverListUpdater PollingServerListUpdater
2020/06/28-16:36:41 [http-nio-8083-exec-3] INFO  com.netflix.config.ChainedDynamicProperty- Flipping property: rac-order-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020/06/28-16:36:41 [http-nio-8083-exec-3] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer- DynamicServerListLoadBalancer for client rac-order-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=rac-order-service,current list of Servers=[MSI.mshome.net:8084],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:MSI.mshome.net:8084;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 GMT+08:00 1970;	First connection made: Thu Jan 01 08:00:00 GMT+08:00 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@3df4995e
2020/06/28-16:36:41 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- ==>  Preparing: select * from sj_order where HospitalID = ? order by OrderDate DESC limit 1; 
2020/06/28-16:36:41 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- ==> Parameters: 901600(String)
2020/06/28-16:36:41 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- <==      Total: 1
2020/06/28-16:36:41 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- ==>  Preparing: select * from sj_orderdetail sod, sj_order so where GoodsID in ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) and sod.OrderNo = so.OrderNo and so.OrderState >= 1 order by OrderDate limit 1 
2020/06/28-16:36:41 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- ==> Parameters: 1(Integer), 10(Integer), 11(Integer), 12(Integer), 13(Integer), 14(Integer), 15(Integer), 16(Integer), 17(Integer), 18(Integer), 19(Integer)
2020/06/28-16:36:41 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- <==      Total: 1
2020/06/28-16:36:41 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- ==>  Preparing: select * from sj_secondleavestocklistdetail where HospitalID = ? and GoodsID in ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) and now() >= DATE_SUB(CURDATE(), INTERVAL 12 month) 
2020/06/28-16:36:41 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- ==> Parameters: 901600(String), 1(Integer), 10(Integer), 11(Integer), 12(Integer), 13(Integer), 14(Integer), 15(Integer), 16(Integer), 17(Integer), 18(Integer), 19(Integer)
2020/06/28-16:36:41 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- <==      Total: 5
2020/06/28-16:36:41 [http-nio-8083-exec-3] ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]- Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.ClassCastException: java.util.LinkedHashMap cannot be cast to com.huijian.rac.bean.Good] with root cause
java.lang.ClassCastException: java.util.LinkedHashMap cannot be cast to com.huijian.rac.bean.Good
	at com.huijian.rac.controller.GoodsDictionaryController.inquiryDetail(GoodsDictionaryController.java:228) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_231]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_231]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_231]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_231]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_231]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_231]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_231]
2020/06/28-16:36:42 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty- Flipping property: rac-order-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020/06/28-16:37:18 [main] INFO  com.huijian.rac.RacStockServiceApplication- No active profile set, falling back to default profiles: default
2020/06/28-16:37:19 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Multiple Spring Data modules found, entering strict repository configuration mode!
2020/06/28-16:37:19 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Bootstrapping Spring Data repositories in DEFAULT mode.
2020/06/28-16:37:19 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Finished Spring Data repository scanning in 22ms. Found 0 repository interfaces.
2020/06/28-16:37:19 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'deliveryUnitMapper' and 'com.huijian.rac.mapper.DeliveryUnitMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:37:19 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'departMapper' and 'com.huijian.rac.mapper.DepartMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:37:19 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'discardDetailMapper' and 'com.huijian.rac.mapper.DiscardDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:37:19 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'discardMapper' and 'com.huijian.rac.mapper.DiscardMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:37:19 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsDictionaryMapper' and 'com.huijian.rac.mapper.GoodsDictionaryMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:37:19 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsRecordMapper' and 'com.huijian.rac.mapper.GoodsRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:37:19 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsSupplierMapper' and 'com.huijian.rac.mapper.GoodsSupplierMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:37:19 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'leaveStockListDetailMapper' and 'com.huijian.rac.mapper.LeaveStockListDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:37:19 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'materialMapper' and 'com.huijian.rac.mapper.MaterialMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:37:19 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'outboundRecordMapper' and 'com.huijian.rac.mapper.OutboundRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:37:19 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'outboundSecondRecordMapper' and 'com.huijian.rac.mapper.OutboundSecondRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:37:19 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'reagentMapper' and 'com.huijian.rac.mapper.ReagentMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:37:19 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'returnGoodsDetailMapper' and 'com.huijian.rac.mapper.ReturnGoodsDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:37:19 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'returnGoodsMapper' and 'com.huijian.rac.mapper.ReturnGoodsMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:37:19 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'secondGoodsRecordMapper' and 'com.huijian.rac.mapper.SecondGoodsRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:37:19 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'secondLeaveStockListDetailMapper' and 'com.huijian.rac.mapper.SecondLeaveStockListDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:37:19 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'unitMapper' and 'com.huijian.rac.mapper.UnitMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:37:19 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseMapper' and 'com.huijian.rac.mapper.WarehouseMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:37:19 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseRecordMapper' and 'com.huijian.rac.mapper.WarehouseRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:37:19 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseSecondMapper' and 'com.huijian.rac.mapper.WarehouseSecondMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:37:19 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseSecondRecordMapper' and 'com.huijian.rac.mapper.WarehouseSecondRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:37:19 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'departsMapper' and 'com.huijian.rac.mapper.DepartsMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:37:19 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsPackageDetailMapper' and 'com.huijian.rac.mapper.GoodsPackageDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:37:19 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsPackageMapper' and 'com.huijian.rac.mapper.GoodsPackageMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:37:19 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'hospitalMapper' and 'com.huijian.rac.mapper.HospitalMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:37:19 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'leaveStockListSecondMapper' and 'com.huijian.rac.mapper.LeaveStockListSecondMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:37:19 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderDetailMapper' and 'com.huijian.rac.mapper.OrderDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:37:19 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderMapper' and 'com.huijian.rac.mapper.OrderMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:37:19 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderOperateMapper' and 'com.huijian.rac.mapper.OrderOperateMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:37:19 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderReturnDetailMapper' and 'com.huijian.rac.mapper.OrderReturnDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:37:19 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderReturnMapper' and 'com.huijian.rac.mapper.OrderReturnMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:37:19 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderReviewMapper' and 'com.huijian.rac.mapper.OrderReviewMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:37:19 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- No MyBatis mapper was found in '[com.huijian.rac.mapper]' package. Please check your configuration.
2020/06/28-16:37:19 [main] INFO  org.springframework.cloud.context.scope.GenericScope- BeanFactory id=b2907805-f796-3a2c-9729-4f51ea31ae6e
2020/06/28-16:37:19 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/28-16:37:19 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'redisConfig' of type [com.huijian.rac.config.RedisConfig$$EnhancerBySpringCGLIB$$618f1c91] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/28-16:37:19 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/28-16:37:19 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat initialized with port(s): 8083 (http)
2020/06/28-16:37:19 [main] INFO  org.apache.catalina.core.StandardService- Starting service [Tomcat]
2020/06/28-16:37:19 [main] INFO  org.apache.catalina.core.StandardEngine- Starting Servlet engine: [Apache Tomcat/9.0.27]
2020/06/28-16:37:20 [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]- Initializing Spring embedded WebApplicationContext
2020/06/28-16:37:20 [main] INFO  org.springframework.web.context.ContextLoader- Root WebApplicationContext: initialization completed in 1542 ms
2020/06/28-16:37:21 [main] WARN  com.netflix.config.sources.URLConfigurationSource- No URLs will be polled as dynamic configuration sources.
2020/06/28-16:37:21 [main] INFO  com.netflix.config.sources.URLConfigurationSource- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020/06/28-16:37:21 [main] WARN  com.netflix.config.sources.URLConfigurationSource- No URLs will be polled as dynamic configuration sources.
2020/06/28-16:37:21 [main] INFO  com.netflix.config.sources.URLConfigurationSource- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020/06/28-16:37:21 [main] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor- Initializing ExecutorService 'applicationTaskExecutor'
2020/06/28-16:37:22 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==>  Preparing: SELECT * from sj_order where OrderNo like concat('%',?,'%') and OrderDate >= ? and OrderDate < ? and OrderState != 0 order by OrderDate desc limit ?, ? 
2020/06/28-16:37:22 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==>  Preparing: select * from pub_depart where HOSPITALID=? 
2020/06/28-16:37:22 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==> Parameters: 901600(String)
2020/06/28-16:37:22 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-28 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/28-16:37:22 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- <==      Total: 0
2020/06/28-16:37:22 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- <==      Total: 22
2020/06/28-16:37:22 [main] WARN  org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger- You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020/06/28-16:37:22 [main] WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger- Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020/06/28-16:37:22 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory- Setting initial instance status as: STARTING
2020/06/28-16:37:22 [main] INFO  com.netflix.discovery.DiscoveryClient- Initializing Eureka in region us-east-1
2020/06/28-16:37:23 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using JSON encoding codec LegacyJacksonJson
2020/06/28-16:37:23 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using JSON decoding codec LegacyJacksonJson
2020/06/28-16:37:23 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using XML encoding codec XStreamXml
2020/06/28-16:37:23 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using XML decoding codec XStreamXml
2020/06/28-16:37:23 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-16:37:23 [main] INFO  com.netflix.discovery.DiscoveryClient- Disable delta property : false
2020/06/28-16:37:23 [main] INFO  com.netflix.discovery.DiscoveryClient- Single vip registry refresh property : null
2020/06/28-16:37:23 [main] INFO  com.netflix.discovery.DiscoveryClient- Force full registry fetch : false
2020/06/28-16:37:23 [main] INFO  com.netflix.discovery.DiscoveryClient- Application is null : false
2020/06/28-16:37:23 [main] INFO  com.netflix.discovery.DiscoveryClient- Registered Applications size is zero : true
2020/06/28-16:37:23 [main] INFO  com.netflix.discovery.DiscoveryClient- Application version is -1: true
2020/06/28-16:37:23 [main] INFO  com.netflix.discovery.DiscoveryClient- Getting all instance registry info from the eureka server
2020/06/28-16:37:23 [main] INFO  com.netflix.discovery.DiscoveryClient- The response status is 200
2020/06/28-16:37:23 [main] INFO  com.netflix.discovery.DiscoveryClient- Starting heartbeat executor: renew interval is: 30
2020/06/28-16:37:23 [main] INFO  com.netflix.discovery.InstanceInfoReplicator- InstanceInfoReplicator onDemand update allowed rate per min is 4
2020/06/28-16:37:23 [main] INFO  com.netflix.discovery.DiscoveryClient- Discovery Client initialized at timestamp 1593333443717 with initial instances count: 2
2020/06/28-16:37:23 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry- Registering application RAC-STOCK-SERVICE with eureka with status UP
2020/06/28-16:37:23 [main] INFO  com.netflix.discovery.DiscoveryClient- Saw local status change event StatusChangeEvent [timestamp=1593333443720, current=UP, previous=STARTING]
2020/06/28-16:37:23 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-STOCK-SERVICE/MSI.mshome.net:rac-stock-service:8083: registering service...
2020/06/28-16:37:23 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Attempting to connect to: [192.168.161.129:5672]
2020/06/28-16:37:23 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Created new connection: rabbitConnectionFactory#2b01c689:0/SimpleConnection@e88e14 [delegate=amqp://admin@192.168.161.129:5672/, localPort= 52805]
2020/06/28-16:37:23 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-STOCK-SERVICE/MSI.mshome.net:rac-stock-service:8083 - registration status: 204
2020/06/28-16:37:23 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat started on port(s): 8083 (http) with context path ''
2020/06/28-16:37:23 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration- Updating port to 8083
2020/06/28-16:37:24 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==>  Preparing: select count(*) from sj_order where YEAR(OrderDate)=YEAR(NOW()); 
2020/06/28-16:37:24 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==> Parameters: 
2020/06/28-16:37:24 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- <==      Total: 1
2020/06/28-16:37:24 [main] INFO  com.huijian.rac.RacStockServiceApplication- Started RacStockServiceApplication in 6.937 seconds (JVM running for 7.818)
2020/06/28-16:37:24 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==>  Preparing: select * from pub_depart where HOSPITALID=? 
2020/06/28-16:37:24 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==> Parameters: 901600(String)
2020/06/28-16:37:24 [http-nio-8083-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]- Initializing Spring DispatcherServlet 'dispatcherServlet'
2020/06/28-16:37:24 [http-nio-8083-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet- Initializing Servlet 'dispatcherServlet'
2020/06/28-16:37:24 [http-nio-8083-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet- Completed initialization in 7 ms
2020/06/28-16:37:24 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- <==      Total: 22
2020/06/28-16:37:26 [http-nio-8083-exec-2] INFO  com.zaxxer.hikari.HikariDataSource- HikariPool-1 - Starting...
2020/06/28-16:37:26 [http-nio-8083-exec-2] INFO  com.zaxxer.hikari.HikariDataSource- HikariPool-1 - Start completed.
2020/06/28-16:37:26 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- ==>  Preparing: select sg.*, su.UnitName from sj_goodsdictionary sg INNER join sj_unit su on GoodsName like concat('%',?,'%') and sg.UnitID = su.UnitID 
2020/06/28-16:37:26 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- ==> Parameters: 1(String)
2020/06/28-16:37:26 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- <==      Total: 11
2020/06/28-16:37:26 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:37:26 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-16:37:26 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:37:26 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:37:26 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 1(Integer), 901600(String)
2020/06/28-16:37:26 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:37:26 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:37:26 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-16:37:26 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:37:26 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:37:26 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 10(Integer), 901600(String)
2020/06/28-16:37:26 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:37:26 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:37:26 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-16:37:26 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:37:26 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:37:26 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 11(Integer), 901600(String)
2020/06/28-16:37:26 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:37:26 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:37:26 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 2(Integer)
2020/06/28-16:37:26 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:37:26 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:37:26 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 12(Integer), 901600(String)
2020/06/28-16:37:26 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:37:26 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:37:26 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-16:37:26 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:37:26 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:37:26 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 13(Integer), 901600(String)
2020/06/28-16:37:26 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:37:26 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:37:26 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-16:37:26 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:37:26 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:37:26 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 14(Integer), 901600(String)
2020/06/28-16:37:26 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:37:26 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:37:26 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 2(Integer)
2020/06/28-16:37:26 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:37:26 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:37:26 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 15(Integer), 901600(String)
2020/06/28-16:37:26 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:37:26 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:37:26 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-16:37:26 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:37:26 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:37:26 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 16(Integer), 901600(String)
2020/06/28-16:37:26 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:37:26 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:37:26 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-16:37:26 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:37:26 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:37:26 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 17(Integer), 901600(String)
2020/06/28-16:37:26 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:37:26 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:37:26 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 2(Integer)
2020/06/28-16:37:26 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:37:26 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:37:26 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 18(Integer), 901600(String)
2020/06/28-16:37:26 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:37:26 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:37:26 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-16:37:26 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:37:26 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:37:26 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 19(Integer), 901600(String)
2020/06/28-16:37:26 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:37:36 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-16:37:37 [http-nio-8083-exec-2] INFO  com.netflix.config.ChainedDynamicProperty- Flipping property: rac-order-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020/06/28-16:37:37 [http-nio-8083-exec-2] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer- Shutdown hook installed for: NFLoadBalancer-PingTimer-rac-order-service
2020/06/28-16:37:37 [http-nio-8083-exec-2] INFO  com.netflix.loadbalancer.BaseLoadBalancer- Client: rac-order-service instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=rac-order-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020/06/28-16:37:37 [http-nio-8083-exec-2] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer- Using serverListUpdater PollingServerListUpdater
2020/06/28-16:37:37 [http-nio-8083-exec-2] INFO  com.netflix.config.ChainedDynamicProperty- Flipping property: rac-order-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020/06/28-16:37:37 [http-nio-8083-exec-2] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer- DynamicServerListLoadBalancer for client rac-order-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=rac-order-service,current list of Servers=[MSI.mshome.net:8084],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:MSI.mshome.net:8084;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 GMT+08:00 1970;	First connection made: Thu Jan 01 08:00:00 GMT+08:00 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@5c90af82
2020/06/28-16:37:37 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- ==>  Preparing: select * from sj_order where HospitalID = ? order by OrderDate DESC limit 1; 
2020/06/28-16:37:37 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- ==> Parameters: 901600(String)
2020/06/28-16:37:37 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- <==      Total: 1
2020/06/28-16:37:37 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- ==>  Preparing: select * from sj_orderdetail sod, sj_order so where GoodsID in ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) and sod.OrderNo = so.OrderNo and so.OrderState >= 1 order by OrderDate limit 1 
2020/06/28-16:37:37 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- ==> Parameters: 1(Integer), 10(Integer), 11(Integer), 12(Integer), 13(Integer), 14(Integer), 15(Integer), 16(Integer), 17(Integer), 18(Integer), 19(Integer)
2020/06/28-16:37:37 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- <==      Total: 1
2020/06/28-16:37:37 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- ==>  Preparing: select * from sj_secondleavestocklistdetail where HospitalID = ? and GoodsID in ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) and now() >= DATE_SUB(CURDATE(), INTERVAL 12 month) 
2020/06/28-16:37:37 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- ==> Parameters: 901600(String), 1(Integer), 10(Integer), 11(Integer), 12(Integer), 13(Integer), 14(Integer), 15(Integer), 16(Integer), 17(Integer), 18(Integer), 19(Integer)
2020/06/28-16:37:37 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- <==      Total: 5
2020/06/28-16:37:37 [http-nio-8083-exec-2] ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]- Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.ClassCastException: java.util.LinkedHashMap cannot be cast to com.huijian.rac.bean.Good] with root cause
java.lang.ClassCastException: java.util.LinkedHashMap cannot be cast to com.huijian.rac.bean.Good
	at com.huijian.rac.controller.GoodsDictionaryController.inquiryDetail(GoodsDictionaryController.java:228) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_231]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_231]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_231]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_231]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_231]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_231]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_231]
2020/06/28-16:37:38 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty- Flipping property: rac-order-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020/06/28-16:38:01 [Thread-31] INFO  com.netflix.loadbalancer.PollingServerListUpdater- Shutting down the Executor Pool for PollingServerListUpdater
2020/06/28-16:38:01 [SpringContextShutdownHook] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry- Unregistering application RAC-STOCK-SERVICE with eureka with status DOWN
2020/06/28-16:38:01 [SpringContextShutdownHook] WARN  com.netflix.discovery.DiscoveryClient- Saw local status change event StatusChangeEvent [timestamp=1593333481179, current=DOWN, previous=UP]
2020/06/28-16:38:01 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-STOCK-SERVICE/MSI.mshome.net:rac-stock-service:8083: registering service...
2020/06/28-16:38:01 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-STOCK-SERVICE/MSI.mshome.net:rac-stock-service:8083 - registration status: 204
2020/06/28-16:38:01 [SpringContextShutdownHook] INFO  org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer- Waiting for workers to finish.
2020/06/28-16:38:01 [SpringContextShutdownHook] INFO  org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer- Successfully waited for workers to finish.
2020/06/28-16:38:01 [SpringContextShutdownHook] INFO  org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer- Waiting for workers to finish.
2020/06/28-16:38:02 [SpringContextShutdownHook] INFO  org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer- Successfully waited for workers to finish.
2020/06/28-16:38:02 [SpringContextShutdownHook] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor- Shutting down ExecutorService 'applicationTaskExecutor'
2020/06/28-16:38:02 [SpringContextShutdownHook] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer- Shutdown hook removed for: NFLoadBalancer-PingTimer-rac-order-service
2020/06/28-16:38:02 [SpringContextShutdownHook] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer- Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82) ~[na:1.8.0_231]
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239) ~[na:1.8.0_231]
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70) ~[netflix-commons-util-0.1.1.jar:na]
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:632) [ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:883) [ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:285) [ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_231]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_231]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_231]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_231]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:339) [spring-beans-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:273) [spring-beans-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571) [spring-beans-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543) [spring-beans-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1072) [spring-beans-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504) [spring-beans-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1065) [spring-beans-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060) [spring-context-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029) [spring-context-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:978) [spring-context-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:92) [spring-cloud-context-2.2.0.RELEASE.jar:2.2.0.RELEASE]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258) [spring-beans-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571) [spring-beans-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543) [spring-beans-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1072) [spring-beans-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504) [spring-beans-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1065) [spring-beans-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060) [spring-context-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029) [spring-context-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:948) [spring-context-5.2.1.RELEASE.jar:5.2.1.RELEASE]
2020/06/28-16:38:02 [SpringContextShutdownHook] INFO  org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer- Shutdown ignored - container is not active already
2020/06/28-16:38:02 [SpringContextShutdownHook] INFO  org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer- Shutdown ignored - container is not active already
2020/06/28-16:38:02 [SpringContextShutdownHook] INFO  com.netflix.discovery.DiscoveryClient- Shutting down DiscoveryClient ...
2020/06/28-16:38:05 [SpringContextShutdownHook] INFO  com.netflix.discovery.DiscoveryClient- Unregistering ...
2020/06/28-16:38:05 [SpringContextShutdownHook] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-STOCK-SERVICE/MSI.mshome.net:rac-stock-service:8083 - deregister  status: 200
2020/06/28-16:38:05 [SpringContextShutdownHook] INFO  com.netflix.discovery.DiscoveryClient- Completed shut down of DiscoveryClient
2020/06/28-16:38:05 [SpringContextShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource- HikariPool-1 - Shutdown initiated...
2020/06/28-16:38:05 [SpringContextShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource- HikariPool-1 - Shutdown completed.
2020/06/28-16:38:11 [main] INFO  com.huijian.rac.RacStockServiceApplication- No active profile set, falling back to default profiles: default
2020/06/28-16:38:12 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Multiple Spring Data modules found, entering strict repository configuration mode!
2020/06/28-16:38:12 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Bootstrapping Spring Data repositories in DEFAULT mode.
2020/06/28-16:38:12 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Finished Spring Data repository scanning in 24ms. Found 0 repository interfaces.
2020/06/28-16:38:12 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'deliveryUnitMapper' and 'com.huijian.rac.mapper.DeliveryUnitMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:38:12 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'departMapper' and 'com.huijian.rac.mapper.DepartMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:38:12 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'discardDetailMapper' and 'com.huijian.rac.mapper.DiscardDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:38:12 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'discardMapper' and 'com.huijian.rac.mapper.DiscardMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:38:12 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsDictionaryMapper' and 'com.huijian.rac.mapper.GoodsDictionaryMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:38:12 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsRecordMapper' and 'com.huijian.rac.mapper.GoodsRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:38:12 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsSupplierMapper' and 'com.huijian.rac.mapper.GoodsSupplierMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:38:12 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'leaveStockListDetailMapper' and 'com.huijian.rac.mapper.LeaveStockListDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:38:12 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'materialMapper' and 'com.huijian.rac.mapper.MaterialMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:38:12 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'outboundRecordMapper' and 'com.huijian.rac.mapper.OutboundRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:38:12 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'outboundSecondRecordMapper' and 'com.huijian.rac.mapper.OutboundSecondRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:38:12 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'reagentMapper' and 'com.huijian.rac.mapper.ReagentMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:38:12 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'returnGoodsDetailMapper' and 'com.huijian.rac.mapper.ReturnGoodsDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:38:12 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'returnGoodsMapper' and 'com.huijian.rac.mapper.ReturnGoodsMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:38:12 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'secondGoodsRecordMapper' and 'com.huijian.rac.mapper.SecondGoodsRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:38:12 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'secondLeaveStockListDetailMapper' and 'com.huijian.rac.mapper.SecondLeaveStockListDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:38:12 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'unitMapper' and 'com.huijian.rac.mapper.UnitMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:38:12 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseMapper' and 'com.huijian.rac.mapper.WarehouseMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:38:12 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseRecordMapper' and 'com.huijian.rac.mapper.WarehouseRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:38:12 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseSecondMapper' and 'com.huijian.rac.mapper.WarehouseSecondMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:38:12 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseSecondRecordMapper' and 'com.huijian.rac.mapper.WarehouseSecondRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:38:12 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'departsMapper' and 'com.huijian.rac.mapper.DepartsMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:38:12 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsPackageDetailMapper' and 'com.huijian.rac.mapper.GoodsPackageDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:38:12 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsPackageMapper' and 'com.huijian.rac.mapper.GoodsPackageMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:38:12 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'hospitalMapper' and 'com.huijian.rac.mapper.HospitalMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:38:12 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'leaveStockListSecondMapper' and 'com.huijian.rac.mapper.LeaveStockListSecondMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:38:12 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderDetailMapper' and 'com.huijian.rac.mapper.OrderDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:38:12 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderMapper' and 'com.huijian.rac.mapper.OrderMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:38:12 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderOperateMapper' and 'com.huijian.rac.mapper.OrderOperateMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:38:12 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderReturnDetailMapper' and 'com.huijian.rac.mapper.OrderReturnDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:38:12 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderReturnMapper' and 'com.huijian.rac.mapper.OrderReturnMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:38:12 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderReviewMapper' and 'com.huijian.rac.mapper.OrderReviewMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:38:12 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- No MyBatis mapper was found in '[com.huijian.rac.mapper]' package. Please check your configuration.
2020/06/28-16:38:13 [main] INFO  org.springframework.cloud.context.scope.GenericScope- BeanFactory id=b2907805-f796-3a2c-9729-4f51ea31ae6e
2020/06/28-16:38:13 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/28-16:38:13 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'redisConfig' of type [com.huijian.rac.config.RedisConfig$$EnhancerBySpringCGLIB$$cb1e03f5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/28-16:38:13 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/28-16:38:13 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat initialized with port(s): 8083 (http)
2020/06/28-16:38:13 [main] INFO  org.apache.catalina.core.StandardService- Starting service [Tomcat]
2020/06/28-16:38:13 [main] INFO  org.apache.catalina.core.StandardEngine- Starting Servlet engine: [Apache Tomcat/9.0.27]
2020/06/28-16:38:13 [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]- Initializing Spring embedded WebApplicationContext
2020/06/28-16:38:13 [main] INFO  org.springframework.web.context.ContextLoader- Root WebApplicationContext: initialization completed in 1717 ms
2020/06/28-16:38:14 [main] WARN  com.netflix.config.sources.URLConfigurationSource- No URLs will be polled as dynamic configuration sources.
2020/06/28-16:38:14 [main] INFO  com.netflix.config.sources.URLConfigurationSource- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020/06/28-16:38:14 [main] WARN  com.netflix.config.sources.URLConfigurationSource- No URLs will be polled as dynamic configuration sources.
2020/06/28-16:38:14 [main] INFO  com.netflix.config.sources.URLConfigurationSource- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020/06/28-16:38:14 [main] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor- Initializing ExecutorService 'applicationTaskExecutor'
2020/06/28-16:38:16 [main] WARN  org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger- You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020/06/28-16:38:16 [main] WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger- Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020/06/28-16:38:16 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory- Setting initial instance status as: STARTING
2020/06/28-16:38:16 [main] INFO  com.netflix.discovery.DiscoveryClient- Initializing Eureka in region us-east-1
2020/06/28-16:38:16 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using JSON encoding codec LegacyJacksonJson
2020/06/28-16:38:16 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using JSON decoding codec LegacyJacksonJson
2020/06/28-16:38:16 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using XML encoding codec XStreamXml
2020/06/28-16:38:16 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using XML decoding codec XStreamXml
2020/06/28-16:38:16 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-16:38:17 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==>  Preparing: select count(*) from sj_order where YEAR(OrderDate)=YEAR(NOW()); 
2020/06/28-16:38:17 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==> Parameters: 
2020/06/28-16:38:17 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- <==      Total: 1
2020/06/28-16:38:17 [main] INFO  com.netflix.discovery.DiscoveryClient- Disable delta property : false
2020/06/28-16:38:17 [main] INFO  com.netflix.discovery.DiscoveryClient- Single vip registry refresh property : null
2020/06/28-16:38:17 [main] INFO  com.netflix.discovery.DiscoveryClient- Force full registry fetch : false
2020/06/28-16:38:17 [main] INFO  com.netflix.discovery.DiscoveryClient- Application is null : false
2020/06/28-16:38:17 [main] INFO  com.netflix.discovery.DiscoveryClient- Registered Applications size is zero : true
2020/06/28-16:38:17 [main] INFO  com.netflix.discovery.DiscoveryClient- Application version is -1: true
2020/06/28-16:38:17 [main] INFO  com.netflix.discovery.DiscoveryClient- Getting all instance registry info from the eureka server
2020/06/28-16:38:17 [main] INFO  com.netflix.discovery.DiscoveryClient- The response status is 200
2020/06/28-16:38:17 [main] INFO  com.netflix.discovery.DiscoveryClient- Starting heartbeat executor: renew interval is: 30
2020/06/28-16:38:17 [main] INFO  com.netflix.discovery.InstanceInfoReplicator- InstanceInfoReplicator onDemand update allowed rate per min is 4
2020/06/28-16:38:17 [main] INFO  com.netflix.discovery.DiscoveryClient- Discovery Client initialized at timestamp 1593333497300 with initial instances count: 2
2020/06/28-16:38:17 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==>  Preparing: select * from pub_depart where HOSPITALID=? 
2020/06/28-16:38:17 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==> Parameters: 901600(String)
2020/06/28-16:38:17 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry- Registering application RAC-STOCK-SERVICE with eureka with status UP
2020/06/28-16:38:17 [main] INFO  com.netflix.discovery.DiscoveryClient- Saw local status change event StatusChangeEvent [timestamp=1593333497306, current=UP, previous=STARTING]
2020/06/28-16:38:17 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-STOCK-SERVICE/MSI.mshome.net:rac-stock-service:8083: registering service...
2020/06/28-16:38:17 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Attempting to connect to: [192.168.161.129:5672]
2020/06/28-16:38:17 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Created new connection: rabbitConnectionFactory#11e17893:0/SimpleConnection@1c382179 [delegate=amqp://admin@192.168.161.129:5672/, localPort= 52905]
2020/06/28-16:38:17 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- <==      Total: 22
2020/06/28-16:38:17 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-STOCK-SERVICE/MSI.mshome.net:rac-stock-service:8083 - registration status: 204
2020/06/28-16:38:17 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat started on port(s): 8083 (http) with context path ''
2020/06/28-16:38:17 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration- Updating port to 8083
2020/06/28-16:38:17 [main] INFO  com.huijian.rac.RacStockServiceApplication- Started RacStockServiceApplication in 7.243 seconds (JVM running for 8.139)
2020/06/28-16:38:18 [http-nio-8083-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]- Initializing Spring DispatcherServlet 'dispatcherServlet'
2020/06/28-16:38:18 [http-nio-8083-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet- Initializing Servlet 'dispatcherServlet'
2020/06/28-16:38:18 [http-nio-8083-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet- Completed initialization in 5 ms
2020/06/28-16:38:19 [http-nio-8083-exec-2] INFO  com.zaxxer.hikari.HikariDataSource- HikariPool-1 - Starting...
2020/06/28-16:38:19 [http-nio-8083-exec-2] INFO  com.zaxxer.hikari.HikariDataSource- HikariPool-1 - Start completed.
2020/06/28-16:38:19 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- ==>  Preparing: select sg.*, su.UnitName from sj_goodsdictionary sg INNER join sj_unit su on GoodsName like concat('%',?,'%') and sg.UnitID = su.UnitID 
2020/06/28-16:38:19 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- ==> Parameters: 1(String)
2020/06/28-16:38:19 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- <==      Total: 11
2020/06/28-16:38:19 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:38:19 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-16:38:19 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:38:19 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:38:19 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 1(Integer), 901600(String)
2020/06/28-16:38:19 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:38:19 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:38:19 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-16:38:19 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:38:19 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:38:19 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 10(Integer), 901600(String)
2020/06/28-16:38:19 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:38:19 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:38:19 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-16:38:19 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:38:19 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:38:19 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 11(Integer), 901600(String)
2020/06/28-16:38:19 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:38:19 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:38:19 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 2(Integer)
2020/06/28-16:38:19 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:38:19 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:38:19 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 12(Integer), 901600(String)
2020/06/28-16:38:19 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:38:19 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:38:19 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-16:38:19 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:38:19 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:38:19 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 13(Integer), 901600(String)
2020/06/28-16:38:19 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:38:19 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:38:19 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-16:38:19 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:38:19 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:38:19 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 14(Integer), 901600(String)
2020/06/28-16:38:19 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:38:19 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:38:19 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 2(Integer)
2020/06/28-16:38:19 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:38:19 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:38:19 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 15(Integer), 901600(String)
2020/06/28-16:38:19 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:38:19 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:38:19 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-16:38:19 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:38:19 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:38:19 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 16(Integer), 901600(String)
2020/06/28-16:38:19 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:38:19 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:38:19 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-16:38:19 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:38:19 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:38:19 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 17(Integer), 901600(String)
2020/06/28-16:38:19 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:38:19 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:38:19 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 2(Integer)
2020/06/28-16:38:19 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:38:19 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:38:19 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 18(Integer), 901600(String)
2020/06/28-16:38:19 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:38:19 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:38:19 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-16:38:19 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:38:19 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:38:19 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 19(Integer), 901600(String)
2020/06/28-16:38:19 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:38:19 [http-nio-8083-exec-2] INFO  com.netflix.config.ChainedDynamicProperty- Flipping property: rac-order-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020/06/28-16:38:19 [http-nio-8083-exec-2] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer- Shutdown hook installed for: NFLoadBalancer-PingTimer-rac-order-service
2020/06/28-16:38:19 [http-nio-8083-exec-2] INFO  com.netflix.loadbalancer.BaseLoadBalancer- Client: rac-order-service instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=rac-order-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020/06/28-16:38:19 [http-nio-8083-exec-2] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer- Using serverListUpdater PollingServerListUpdater
2020/06/28-16:38:19 [http-nio-8083-exec-2] INFO  com.netflix.config.ChainedDynamicProperty- Flipping property: rac-order-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020/06/28-16:38:19 [http-nio-8083-exec-2] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer- DynamicServerListLoadBalancer for client rac-order-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=rac-order-service,current list of Servers=[MSI.mshome.net:8084],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:MSI.mshome.net:8084;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 GMT+08:00 1970;	First connection made: Thu Jan 01 08:00:00 GMT+08:00 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@72863862
2020/06/28-16:38:20 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- ==>  Preparing: select * from sj_order where HospitalID = ? order by OrderDate DESC limit 1; 
2020/06/28-16:38:20 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- ==> Parameters: 901600(String)
2020/06/28-16:38:20 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- <==      Total: 1
2020/06/28-16:38:20 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- ==>  Preparing: select * from sj_orderdetail sod, sj_order so where GoodsID in ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) and sod.OrderNo = so.OrderNo and so.OrderState >= 1 order by OrderDate limit 1 
2020/06/28-16:38:20 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- ==> Parameters: 1(Integer), 10(Integer), 11(Integer), 12(Integer), 13(Integer), 14(Integer), 15(Integer), 16(Integer), 17(Integer), 18(Integer), 19(Integer)
2020/06/28-16:38:20 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- <==      Total: 1
2020/06/28-16:38:20 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- ==>  Preparing: select * from sj_secondleavestocklistdetail where HospitalID = ? and GoodsID in ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) and now() >= DATE_SUB(CURDATE(), INTERVAL 12 month) 
2020/06/28-16:38:20 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- ==> Parameters: 901600(String), 1(Integer), 10(Integer), 11(Integer), 12(Integer), 13(Integer), 14(Integer), 15(Integer), 16(Integer), 17(Integer), 18(Integer), 19(Integer)
2020/06/28-16:38:20 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- <==      Total: 5
2020/06/28-16:38:20 [http-nio-8083-exec-2] ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]- Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.ClassCastException: java.util.LinkedHashMap cannot be cast to com.huijian.rac.bean.Good] with root cause
java.lang.ClassCastException: java.util.LinkedHashMap cannot be cast to com.huijian.rac.bean.Good
	at com.huijian.rac.controller.GoodsDictionaryController.inquiryDetail(GoodsDictionaryController.java:228) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_231]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_231]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_231]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_231]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_231]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_231]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_231]
2020/06/28-16:38:20 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty- Flipping property: rac-order-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020/06/28-16:39:26 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==>  Preparing: select * from pub_depart where HOSPITALID=? 
2020/06/28-16:39:26 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==>  Preparing: SELECT * from sj_order where OrderNo like concat('%',?,'%') and OrderDate >= ? and OrderDate < ? and OrderState != 0 order by OrderDate desc limit ?, ? 
2020/06/28-16:39:26 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==> Parameters: 901600(String)
2020/06/28-16:39:26 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-28 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/28-16:39:26 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- <==      Total: 0
2020/06/28-16:39:26 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- <==      Total: 22
2020/06/28-16:39:27 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==>  Preparing: select count(*) from sj_order where YEAR(OrderDate)=YEAR(NOW()); 
2020/06/28-16:39:27 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==> Parameters: 
2020/06/28-16:39:27 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- <==      Total: 1
2020/06/28-16:39:28 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==>  Preparing: select * from pub_depart where HOSPITALID=? 
2020/06/28-16:39:28 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==> Parameters: 901600(String)
2020/06/28-16:39:28 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- <==      Total: 22
2020/06/28-16:39:30 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- ==>  Preparing: select sg.*, su.UnitName from sj_goodsdictionary sg INNER join sj_unit su on GoodsName like concat('%',?,'%') and sg.UnitID = su.UnitID 
2020/06/28-16:39:30 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- ==> Parameters: 1(String)
2020/06/28-16:39:30 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- <==      Total: 11
2020/06/28-16:39:30 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:39:30 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-16:39:30 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:39:30 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:39:30 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 1(Integer), 901600(String)
2020/06/28-16:39:30 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:39:30 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:39:30 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-16:39:30 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:39:30 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:39:30 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 10(Integer), 901600(String)
2020/06/28-16:39:30 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:39:30 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:39:30 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-16:39:30 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:39:30 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:39:30 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 11(Integer), 901600(String)
2020/06/28-16:39:30 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:39:30 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:39:30 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 2(Integer)
2020/06/28-16:39:30 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:39:30 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:39:30 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 12(Integer), 901600(String)
2020/06/28-16:39:30 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:39:30 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:39:30 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-16:39:30 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:39:30 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:39:30 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 13(Integer), 901600(String)
2020/06/28-16:39:30 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:39:30 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:39:30 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-16:39:30 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:39:30 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:39:30 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 14(Integer), 901600(String)
2020/06/28-16:39:30 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:39:30 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:39:30 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 2(Integer)
2020/06/28-16:39:30 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:39:30 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:39:30 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 15(Integer), 901600(String)
2020/06/28-16:39:30 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:39:30 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:39:30 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-16:39:30 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:39:30 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:39:30 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 16(Integer), 901600(String)
2020/06/28-16:39:30 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:39:30 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:39:30 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-16:39:30 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:39:30 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:39:30 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 17(Integer), 901600(String)
2020/06/28-16:39:30 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:39:30 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:39:30 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 2(Integer)
2020/06/28-16:39:30 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:39:30 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:39:30 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 18(Integer), 901600(String)
2020/06/28-16:39:30 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:39:30 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:39:30 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-16:39:30 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:39:30 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:39:30 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 19(Integer), 901600(String)
2020/06/28-16:39:30 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:39:34 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- ==>  Preparing: select * from sj_order where HospitalID = ? order by OrderDate DESC limit 1; 
2020/06/28-16:39:34 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- ==> Parameters: 901600(String)
2020/06/28-16:39:34 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- <==      Total: 1
2020/06/28-16:39:34 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- ==>  Preparing: select * from sj_orderdetail sod, sj_order so where GoodsID in ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) and sod.OrderNo = so.OrderNo and so.OrderState >= 1 order by OrderDate limit 1 
2020/06/28-16:39:34 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- ==> Parameters: 1(Integer), 10(Integer), 11(Integer), 12(Integer), 13(Integer), 14(Integer), 15(Integer), 16(Integer), 17(Integer), 18(Integer), 19(Integer)
2020/06/28-16:39:34 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- <==      Total: 1
2020/06/28-16:39:37 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- ==>  Preparing: select * from sj_secondleavestocklistdetail where HospitalID = ? and GoodsID in ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) and now() >= DATE_SUB(CURDATE(), INTERVAL 12 month) 
2020/06/28-16:39:37 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- ==> Parameters: 901600(String), 1(Integer), 10(Integer), 11(Integer), 12(Integer), 13(Integer), 14(Integer), 15(Integer), 16(Integer), 17(Integer), 18(Integer), 19(Integer)
2020/06/28-16:39:37 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- <==      Total: 5
2020/06/28-16:42:36 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-16:43:08 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool- HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=3m48s930ms594µs300ns).
2020/06/28-16:43:08 [AMQP Connection 192.168.161.129:5672] WARN  com.rabbitmq.client.impl.ForgivingExceptionHandler- An unexpected connection driver error occured (Exception message: Connection reset)
2020/06/28-16:43:08 [http-nio-8083-exec-4] ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]- Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.ClassCastException: java.util.LinkedHashMap cannot be cast to com.huijian.rac.bean.Good] with root cause
java.lang.ClassCastException: java.util.LinkedHashMap cannot be cast to com.huijian.rac.bean.Good
	at com.huijian.rac.controller.GoodsDictionaryController.inquiryDetail(GoodsDictionaryController.java:228) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_231]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_231]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_231]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_231]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_231]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_231]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_231]
2020/06/28-16:43:08 [AMQP Connection 192.168.161.129:5672] ERROR org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Channel shutdown: connection error
2020/06/28-16:43:08 [AMQP Connection 192.168.161.129:5672] ERROR org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Channel shutdown: connection error
2020/06/28-16:43:08 [Thread-32] INFO  com.netflix.loadbalancer.PollingServerListUpdater- Shutting down the Executor Pool for PollingServerListUpdater
2020/06/28-16:43:08 [SpringContextShutdownHook] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry- Unregistering application RAC-STOCK-SERVICE with eureka with status DOWN
2020/06/28-16:43:08 [SpringContextShutdownHook] WARN  com.netflix.discovery.DiscoveryClient- Saw local status change event StatusChangeEvent [timestamp=1593333788456, current=DOWN, previous=UP]
2020/06/28-16:43:08 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-STOCK-SERVICE/MSI.mshome.net:rac-stock-service:8083: registering service...
2020/06/28-16:43:08 [SpringContextShutdownHook] INFO  org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer- Waiting for workers to finish.
2020/06/28-16:43:08 [SpringContextShutdownHook] INFO  org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer- Successfully waited for workers to finish.
2020/06/28-16:43:08 [SpringContextShutdownHook] INFO  org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer- Waiting for workers to finish.
2020/06/28-16:43:08 [SpringContextShutdownHook] INFO  org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer- Successfully waited for workers to finish.
2020/06/28-16:43:08 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-STOCK-SERVICE/MSI.mshome.net:rac-stock-service:8083 - registration status: 204
2020/06/28-16:43:08 [SpringContextShutdownHook] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor- Shutting down ExecutorService 'applicationTaskExecutor'
2020/06/28-16:43:08 [SpringContextShutdownHook] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer- Shutdown hook removed for: NFLoadBalancer-PingTimer-rac-order-service
2020/06/28-16:43:08 [SpringContextShutdownHook] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer- Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82) ~[na:1.8.0_231]
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239) ~[na:1.8.0_231]
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70) ~[netflix-commons-util-0.1.1.jar:na]
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:632) [ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:883) [ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:285) [ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_231]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_231]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_231]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_231]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:339) [spring-beans-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:273) [spring-beans-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571) [spring-beans-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543) [spring-beans-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1072) [spring-beans-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504) [spring-beans-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1065) [spring-beans-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060) [spring-context-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029) [spring-context-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:978) [spring-context-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:92) [spring-cloud-context-2.2.0.RELEASE.jar:2.2.0.RELEASE]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258) [spring-beans-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571) [spring-beans-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543) [spring-beans-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1072) [spring-beans-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504) [spring-beans-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1065) [spring-beans-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060) [spring-context-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029) [spring-context-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:948) [spring-context-5.2.1.RELEASE.jar:5.2.1.RELEASE]
2020/06/28-16:43:08 [SpringContextShutdownHook] INFO  org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer- Shutdown ignored - container is not active already
2020/06/28-16:43:08 [SpringContextShutdownHook] INFO  org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer- Shutdown ignored - container is not active already
2020/06/28-16:43:08 [SpringContextShutdownHook] INFO  com.netflix.discovery.DiscoveryClient- Shutting down DiscoveryClient ...
2020/06/28-16:43:11 [SpringContextShutdownHook] INFO  com.netflix.discovery.DiscoveryClient- Unregistering ...
2020/06/28-16:43:11 [SpringContextShutdownHook] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-STOCK-SERVICE/MSI.mshome.net:rac-stock-service:8083 - deregister  status: 200
2020/06/28-16:43:11 [SpringContextShutdownHook] INFO  com.netflix.discovery.DiscoveryClient- Completed shut down of DiscoveryClient
2020/06/28-16:43:11 [SpringContextShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource- HikariPool-1 - Shutdown initiated...
2020/06/28-16:43:11 [SpringContextShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource- HikariPool-1 - Shutdown completed.
2020/06/28-16:43:19 [main] INFO  com.huijian.rac.RacStockServiceApplication- No active profile set, falling back to default profiles: default
2020/06/28-16:43:20 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Multiple Spring Data modules found, entering strict repository configuration mode!
2020/06/28-16:43:20 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Bootstrapping Spring Data repositories in DEFAULT mode.
2020/06/28-16:43:20 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Finished Spring Data repository scanning in 20ms. Found 0 repository interfaces.
2020/06/28-16:43:20 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'deliveryUnitMapper' and 'com.huijian.rac.mapper.DeliveryUnitMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:43:20 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'departMapper' and 'com.huijian.rac.mapper.DepartMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:43:20 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'discardDetailMapper' and 'com.huijian.rac.mapper.DiscardDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:43:20 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'discardMapper' and 'com.huijian.rac.mapper.DiscardMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:43:20 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsDictionaryMapper' and 'com.huijian.rac.mapper.GoodsDictionaryMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:43:20 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsRecordMapper' and 'com.huijian.rac.mapper.GoodsRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:43:20 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsSupplierMapper' and 'com.huijian.rac.mapper.GoodsSupplierMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:43:20 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'leaveStockListDetailMapper' and 'com.huijian.rac.mapper.LeaveStockListDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:43:20 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'materialMapper' and 'com.huijian.rac.mapper.MaterialMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:43:20 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'outboundRecordMapper' and 'com.huijian.rac.mapper.OutboundRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:43:20 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'outboundSecondRecordMapper' and 'com.huijian.rac.mapper.OutboundSecondRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:43:20 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'reagentMapper' and 'com.huijian.rac.mapper.ReagentMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:43:20 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'returnGoodsDetailMapper' and 'com.huijian.rac.mapper.ReturnGoodsDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:43:20 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'returnGoodsMapper' and 'com.huijian.rac.mapper.ReturnGoodsMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:43:20 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'secondGoodsRecordMapper' and 'com.huijian.rac.mapper.SecondGoodsRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:43:20 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'secondLeaveStockListDetailMapper' and 'com.huijian.rac.mapper.SecondLeaveStockListDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:43:20 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'unitMapper' and 'com.huijian.rac.mapper.UnitMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:43:20 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseMapper' and 'com.huijian.rac.mapper.WarehouseMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:43:20 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseRecordMapper' and 'com.huijian.rac.mapper.WarehouseRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:43:20 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseSecondMapper' and 'com.huijian.rac.mapper.WarehouseSecondMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:43:20 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseSecondRecordMapper' and 'com.huijian.rac.mapper.WarehouseSecondRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:43:20 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'departsMapper' and 'com.huijian.rac.mapper.DepartsMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:43:20 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsPackageDetailMapper' and 'com.huijian.rac.mapper.GoodsPackageDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:43:20 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsPackageMapper' and 'com.huijian.rac.mapper.GoodsPackageMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:43:20 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'hospitalMapper' and 'com.huijian.rac.mapper.HospitalMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:43:20 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'leaveStockListSecondMapper' and 'com.huijian.rac.mapper.LeaveStockListSecondMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:43:20 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderDetailMapper' and 'com.huijian.rac.mapper.OrderDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:43:20 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderMapper' and 'com.huijian.rac.mapper.OrderMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:43:20 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderOperateMapper' and 'com.huijian.rac.mapper.OrderOperateMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:43:20 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderReturnDetailMapper' and 'com.huijian.rac.mapper.OrderReturnDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:43:20 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderReturnMapper' and 'com.huijian.rac.mapper.OrderReturnMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:43:20 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderReviewMapper' and 'com.huijian.rac.mapper.OrderReviewMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-16:43:20 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- No MyBatis mapper was found in '[com.huijian.rac.mapper]' package. Please check your configuration.
2020/06/28-16:43:20 [main] INFO  org.springframework.cloud.context.scope.GenericScope- BeanFactory id=b2907805-f796-3a2c-9729-4f51ea31ae6e
2020/06/28-16:43:20 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/28-16:43:20 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'redisConfig' of type [com.huijian.rac.config.RedisConfig$$EnhancerBySpringCGLIB$$92db7890] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/28-16:43:20 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/28-16:43:20 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat initialized with port(s): 8083 (http)
2020/06/28-16:43:20 [main] INFO  org.apache.catalina.core.StandardService- Starting service [Tomcat]
2020/06/28-16:43:20 [main] INFO  org.apache.catalina.core.StandardEngine- Starting Servlet engine: [Apache Tomcat/9.0.27]
2020/06/28-16:43:20 [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]- Initializing Spring embedded WebApplicationContext
2020/06/28-16:43:20 [main] INFO  org.springframework.web.context.ContextLoader- Root WebApplicationContext: initialization completed in 1237 ms
2020/06/28-16:43:21 [main] WARN  com.netflix.config.sources.URLConfigurationSource- No URLs will be polled as dynamic configuration sources.
2020/06/28-16:43:21 [main] INFO  com.netflix.config.sources.URLConfigurationSource- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020/06/28-16:43:21 [main] WARN  com.netflix.config.sources.URLConfigurationSource- No URLs will be polled as dynamic configuration sources.
2020/06/28-16:43:21 [main] INFO  com.netflix.config.sources.URLConfigurationSource- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020/06/28-16:43:21 [main] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor- Initializing ExecutorService 'applicationTaskExecutor'
2020/06/28-16:43:22 [main] WARN  org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger- You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020/06/28-16:43:22 [main] WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger- Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020/06/28-16:43:22 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory- Setting initial instance status as: STARTING
2020/06/28-16:43:22 [main] INFO  com.netflix.discovery.DiscoveryClient- Initializing Eureka in region us-east-1
2020/06/28-16:43:23 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using JSON encoding codec LegacyJacksonJson
2020/06/28-16:43:23 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using JSON decoding codec LegacyJacksonJson
2020/06/28-16:43:23 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using XML encoding codec XStreamXml
2020/06/28-16:43:23 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using XML decoding codec XStreamXml
2020/06/28-16:43:23 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-16:43:23 [main] INFO  com.netflix.discovery.DiscoveryClient- Disable delta property : false
2020/06/28-16:43:23 [main] INFO  com.netflix.discovery.DiscoveryClient- Single vip registry refresh property : null
2020/06/28-16:43:23 [main] INFO  com.netflix.discovery.DiscoveryClient- Force full registry fetch : false
2020/06/28-16:43:23 [main] INFO  com.netflix.discovery.DiscoveryClient- Application is null : false
2020/06/28-16:43:23 [main] INFO  com.netflix.discovery.DiscoveryClient- Registered Applications size is zero : true
2020/06/28-16:43:23 [main] INFO  com.netflix.discovery.DiscoveryClient- Application version is -1: true
2020/06/28-16:43:23 [main] INFO  com.netflix.discovery.DiscoveryClient- Getting all instance registry info from the eureka server
2020/06/28-16:43:23 [main] INFO  com.netflix.discovery.DiscoveryClient- The response status is 200
2020/06/28-16:43:23 [main] INFO  com.netflix.discovery.DiscoveryClient- Starting heartbeat executor: renew interval is: 30
2020/06/28-16:43:23 [main] INFO  com.netflix.discovery.InstanceInfoReplicator- InstanceInfoReplicator onDemand update allowed rate per min is 4
2020/06/28-16:43:23 [main] INFO  com.netflix.discovery.DiscoveryClient- Discovery Client initialized at timestamp 1593333803545 with initial instances count: 1
2020/06/28-16:43:23 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry- Registering application RAC-STOCK-SERVICE with eureka with status UP
2020/06/28-16:43:23 [main] INFO  com.netflix.discovery.DiscoveryClient- Saw local status change event StatusChangeEvent [timestamp=1593333803549, current=UP, previous=STARTING]
2020/06/28-16:43:23 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-STOCK-SERVICE/MSI.mshome.net:rac-stock-service:8083: registering service...
2020/06/28-16:43:23 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Attempting to connect to: [192.168.161.129:5672]
2020/06/28-16:43:23 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Created new connection: rabbitConnectionFactory#64dae3b7:0/SimpleConnection@42211e04 [delegate=amqp://admin@192.168.161.129:5672/, localPort= 56602]
2020/06/28-16:43:23 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-STOCK-SERVICE/MSI.mshome.net:rac-stock-service:8083 - registration status: 204
2020/06/28-16:43:23 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat started on port(s): 8083 (http) with context path ''
2020/06/28-16:43:23 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration- Updating port to 8083
2020/06/28-16:43:23 [main] INFO  com.huijian.rac.RacStockServiceApplication- Started RacStockServiceApplication in 5.666 seconds (JVM running for 6.407)
2020/06/28-16:43:39 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==>  Preparing: select * from pub_depart where HOSPITALID=? 
2020/06/28-16:43:39 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==> Parameters: 901600(String)
2020/06/28-16:43:39 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==>  Preparing: SELECT * from sj_order where OrderNo like concat('%',?,'%') and OrderDate >= ? and OrderDate < ? and OrderState != 0 order by OrderDate desc limit ?, ? 
2020/06/28-16:43:39 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-28 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/28-16:43:39 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- <==      Total: 0
2020/06/28-16:43:39 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- <==      Total: 22
2020/06/28-16:43:40 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==>  Preparing: select count(*) from sj_order where YEAR(OrderDate)=YEAR(NOW()); 
2020/06/28-16:43:40 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==> Parameters: 
2020/06/28-16:43:40 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- <==      Total: 1
2020/06/28-16:43:40 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==>  Preparing: select * from pub_depart where HOSPITALID=? 
2020/06/28-16:43:40 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==> Parameters: 901600(String)
2020/06/28-16:43:40 [http-nio-8083-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]- Initializing Spring DispatcherServlet 'dispatcherServlet'
2020/06/28-16:43:40 [http-nio-8083-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet- Initializing Servlet 'dispatcherServlet'
2020/06/28-16:43:40 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- <==      Total: 22
2020/06/28-16:43:40 [http-nio-8083-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet- Completed initialization in 6 ms
2020/06/28-16:43:42 [http-nio-8083-exec-3] INFO  com.zaxxer.hikari.HikariDataSource- HikariPool-1 - Starting...
2020/06/28-16:43:42 [http-nio-8083-exec-3] INFO  com.zaxxer.hikari.HikariDataSource- HikariPool-1 - Start completed.
2020/06/28-16:43:42 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- ==>  Preparing: select sg.*, su.UnitName from sj_goodsdictionary sg INNER join sj_unit su on GoodsName like concat('%',?,'%') and sg.UnitID = su.UnitID 
2020/06/28-16:43:42 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- ==> Parameters: 1(String)
2020/06/28-16:43:42 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- <==      Total: 11
2020/06/28-16:43:42 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:43:42 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-16:43:42 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:43:42 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:43:42 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 1(Integer), 901600(String)
2020/06/28-16:43:42 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:43:42 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:43:42 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-16:43:42 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:43:42 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:43:42 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 10(Integer), 901600(String)
2020/06/28-16:43:42 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:43:42 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:43:42 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-16:43:42 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:43:42 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:43:42 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 11(Integer), 901600(String)
2020/06/28-16:43:43 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:43:43 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:43:43 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 2(Integer)
2020/06/28-16:43:43 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:43:43 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:43:43 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 12(Integer), 901600(String)
2020/06/28-16:43:43 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:43:43 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:43:43 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-16:43:43 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:43:43 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:43:43 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 13(Integer), 901600(String)
2020/06/28-16:43:43 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:43:43 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:43:43 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-16:43:43 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:43:43 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:43:43 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 14(Integer), 901600(String)
2020/06/28-16:43:43 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:43:43 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:43:43 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 2(Integer)
2020/06/28-16:43:43 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:43:43 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:43:43 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 15(Integer), 901600(String)
2020/06/28-16:43:43 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:43:43 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:43:43 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-16:43:43 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:43:43 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:43:43 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 16(Integer), 901600(String)
2020/06/28-16:43:43 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:43:43 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:43:43 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-16:43:43 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:43:43 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:43:43 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 17(Integer), 901600(String)
2020/06/28-16:43:43 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:43:43 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:43:43 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 2(Integer)
2020/06/28-16:43:43 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:43:43 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:43:43 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 18(Integer), 901600(String)
2020/06/28-16:43:43 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:43:43 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:43:43 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-16:43:43 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:43:43 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:43:43 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 19(Integer), 901600(String)
2020/06/28-16:43:43 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:43:43 [http-nio-8083-exec-3] INFO  com.netflix.config.ChainedDynamicProperty- Flipping property: rac-order-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020/06/28-16:43:43 [http-nio-8083-exec-3] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer- Shutdown hook installed for: NFLoadBalancer-PingTimer-rac-order-service
2020/06/28-16:43:43 [http-nio-8083-exec-3] INFO  com.netflix.loadbalancer.BaseLoadBalancer- Client: rac-order-service instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=rac-order-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020/06/28-16:43:43 [http-nio-8083-exec-3] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer- Using serverListUpdater PollingServerListUpdater
2020/06/28-16:43:43 [http-nio-8083-exec-3] INFO  com.netflix.config.ChainedDynamicProperty- Flipping property: rac-order-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020/06/28-16:43:43 [http-nio-8083-exec-3] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer- DynamicServerListLoadBalancer for client rac-order-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=rac-order-service,current list of Servers=[MSI.mshome.net:8084],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:MSI.mshome.net:8084;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 GMT+08:00 1970;	First connection made: Thu Jan 01 08:00:00 GMT+08:00 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@4174ec48
2020/06/28-16:43:43 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- ==>  Preparing: select * from sj_order where HospitalID = ? order by OrderDate DESC limit 1; 
2020/06/28-16:43:43 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- ==> Parameters: 901600(String)
2020/06/28-16:43:43 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- <==      Total: 1
2020/06/28-16:43:43 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- ==>  Preparing: select * from sj_orderdetail sod, sj_order so where GoodsID in ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) and sod.OrderNo = so.OrderNo and so.OrderState >= 1 order by OrderDate limit 1 
2020/06/28-16:43:43 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- ==> Parameters: 1(Integer), 10(Integer), 11(Integer), 12(Integer), 13(Integer), 14(Integer), 15(Integer), 16(Integer), 17(Integer), 18(Integer), 19(Integer)
2020/06/28-16:43:43 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- <==      Total: 1
2020/06/28-16:43:43 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- ==>  Preparing: select * from sj_secondleavestocklistdetail where HospitalID = ? and GoodsID in ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) and now() >= DATE_SUB(CURDATE(), INTERVAL 12 month) 
2020/06/28-16:43:43 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- ==> Parameters: 901600(String), 1(Integer), 10(Integer), 11(Integer), 12(Integer), 13(Integer), 14(Integer), 15(Integer), 16(Integer), 17(Integer), 18(Integer), 19(Integer)
2020/06/28-16:43:43 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- <==      Total: 5
2020/06/28-16:43:44 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty- Flipping property: rac-order-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020/06/28-16:43:51 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- ==>  Preparing: select sg.*, su.UnitName from sj_goodsdictionary sg INNER join sj_unit su on GoodsName like concat('%',?,'%') and sg.UnitID = su.UnitID 
2020/06/28-16:43:51 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- ==> Parameters: iph(String)
2020/06/28-16:43:51 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- <==      Total: 1
2020/06/28-16:43:51 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-16:43:51 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-16:43:51 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-16:43:51 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-16:43:51 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 1(Integer), 901600(String)
2020/06/28-16:43:51 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-16:43:51 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- ==>  Preparing: select * from sj_order where HospitalID = ? order by OrderDate DESC limit 1; 
2020/06/28-16:43:51 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- ==> Parameters: 901600(String)
2020/06/28-16:43:51 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- <==      Total: 1
2020/06/28-16:43:51 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- ==>  Preparing: select * from sj_orderdetail sod, sj_order so where GoodsID in ( ? ) and sod.OrderNo = so.OrderNo and so.OrderState >= 1 order by OrderDate limit 1 
2020/06/28-16:43:51 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- ==> Parameters: 1(Integer)
2020/06/28-16:43:51 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- <==      Total: 1
2020/06/28-16:43:51 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- ==>  Preparing: select * from sj_secondleavestocklistdetail where HospitalID = ? and GoodsID in ( ? ) and now() >= DATE_SUB(CURDATE(), INTERVAL 12 month) 
2020/06/28-16:43:51 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- ==> Parameters: 901600(String), 1(Integer)
2020/06/28-16:43:51 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- <==      Total: 1
2020/06/28-16:45:36 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==>  Preparing: select * from pub_depart where HOSPITALID=? 
2020/06/28-16:45:36 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==>  Preparing: select count(*) from sj_order where YEAR(OrderDate)=YEAR(NOW()); 
2020/06/28-16:45:36 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==> Parameters: 901600(String)
2020/06/28-16:45:36 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==> Parameters: 
2020/06/28-16:45:36 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- <==      Total: 1
2020/06/28-16:45:36 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- <==      Total: 22
2020/06/28-16:45:57 [http-nio-8083-exec-9] INFO  io.lettuce.core.EpollProvider- Starting without optional epoll library
2020/06/28-16:45:57 [http-nio-8083-exec-9] INFO  io.lettuce.core.KqueueProvider- Starting without optional kqueue library
2020/06/28-16:46:00 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- ==>  Preparing: select * from sj_order where HospitalID = ? order by OrderDate DESC limit 1; 
2020/06/28-16:46:00 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- ==> Parameters: 901600(String)
2020/06/28-16:46:00 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- <==      Total: 1
2020/06/28-16:46:00 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- ==>  Preparing: select * from sj_orderdetail sod, sj_order so where GoodsID in ( ? , ? , ? ) and sod.OrderNo = so.OrderNo and so.OrderState >= 1 order by OrderDate limit 1 
2020/06/28-16:46:00 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- ==> Parameters: 1(Integer), 2(Integer), 3(Integer)
2020/06/28-16:46:00 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- <==      Total: 1
2020/06/28-16:46:01 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- ==>  Preparing: select * from sj_secondleavestocklistdetail where HospitalID = ? and GoodsID in ( ? , ? , ? ) and now() >= DATE_SUB(CURDATE(), INTERVAL 12 month) 
2020/06/28-16:46:01 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- ==> Parameters: 901600(String), 1(Integer), 2(Integer), 3(Integer)
2020/06/28-16:46:01 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- <==      Total: 1
2020/06/28-16:46:01 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==>  Preparing: select * from sj_warehousesecond where GoodsID = ? and HospitalID = ? 
2020/06/28-16:46:01 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==> Parameters: 1(Integer), 901600(String)
2020/06/28-16:46:01 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- <==      Total: 1
2020/06/28-16:46:01 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==>  Preparing: select * from sj_warehousesecond where GoodsID = ? and HospitalID = ? 
2020/06/28-16:46:01 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==> Parameters: 2(Integer), 901600(String)
2020/06/28-16:46:01 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- <==      Total: 1
2020/06/28-16:46:01 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==>  Preparing: select * from sj_warehousesecond where GoodsID = ? and HospitalID = ? 
2020/06/28-16:46:01 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==> Parameters: 3(Integer), 901600(String)
2020/06/28-16:46:01 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- <==      Total: 1
2020/06/28-16:46:07 [http-nio-8084-exec-3] ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]- Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Handler dispatch failed; nested exception is java.lang.NoClassDefFoundError: com/fasterxml/jackson/databind/exc/InvalidDefinitionException] with root cause
java.lang.ClassNotFoundException: com.fasterxml.jackson.databind.exc.InvalidDefinitionException
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382) ~[na:1.8.0_231]
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418) ~[na:1.8.0_231]
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:355) ~[na:1.8.0_231]
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351) ~[na:1.8.0_231]
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:239) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.read(AbstractJackson2HttpMessageConverter.java:227) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodArgumentResolver.readWithMessageConverters(AbstractMessageConverterMethodArgumentResolver.java:205) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.readWithMessageConverters(RequestResponseBodyMethodProcessor.java:158) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:131) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:121) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:167) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_231]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_231]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_231]
2020/06/28-16:47:36 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-16:48:23 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-16:48:45 [main] INFO  com.huijian.rac.RacOrderServiceApplication- No active profile set, falling back to default profiles: default
2020/06/28-16:48:45 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Multiple Spring Data modules found, entering strict repository configuration mode!
2020/06/28-16:48:45 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020/06/28-16:48:45 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Finished Spring Data repository scanning in 15ms. Found 0 Redis repository interfaces.
2020/06/28-16:48:46 [main] INFO  org.springframework.cloud.context.scope.GenericScope- BeanFactory id=f3f23537-6900-3ad0-88d5-cec7769c130c
2020/06/28-16:48:46 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/28-16:48:46 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/28-16:48:46 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat initialized with port(s): 8084 (http)
2020/06/28-16:48:46 [main] INFO  org.apache.catalina.core.StandardService- Starting service [Tomcat]
2020/06/28-16:48:46 [main] INFO  org.apache.catalina.core.StandardEngine- Starting Servlet engine: [Apache Tomcat/9.0.29]
2020/06/28-16:48:46 [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]- Initializing Spring embedded WebApplicationContext
2020/06/28-16:48:46 [main] INFO  org.springframework.web.context.ContextLoader- Root WebApplicationContext: initialization completed in 1088 ms
2020/06/28-16:48:46 [main] ERROR org.springframework.boot.web.embedded.tomcat.TomcatStarter- Error starting Tomcat context. Exception: org.springframework.beans.factory.BeanCreationException. Message: Error creating bean with name 'formContentFilter' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.boot.web.servlet.filter.OrderedFormContentFilter]: Factory method 'formContentFilter' threw exception; nested exception is java.lang.NoClassDefFoundError: Could not initialize class com.fasterxml.jackson.databind.ObjectMapper
2020/06/28-16:48:46 [main] INFO  org.apache.catalina.core.StandardService- Stopping service [Tomcat]
2020/06/28-16:48:46 [main] WARN  org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext- Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
2020/06/28-16:48:46 [main] INFO  org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener- 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020/06/28-16:48:46 [main] ERROR org.springframework.boot.SpringApplication- Application run failed
org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:156) ~[spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:544) ~[spring-context-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141) ~[spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747) [spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397) [spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315) [spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226) [spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215) [spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at com.huijian.rac.RacOrderServiceApplication.main(RacOrderServiceApplication.java:14) [classes/:na]
Caused by: org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:126) ~[spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:88) ~[spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:438) ~[spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:191) ~[spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:180) ~[spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:153) ~[spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	... 8 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'formContentFilter' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.boot.web.servlet.filter.OrderedFormContentFilter]: Factory method 'formContentFilter' threw exception; nested exception is java.lang.NoClassDefFoundError: Could not initialize class com.fasterxml.jackson.databind.ObjectMapper
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:656) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:484) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1338) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:557) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:211) ~[spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:174) ~[spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:169) ~[spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:154) ~[spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:86) ~[spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:253) ~[spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:227) ~[spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:53) ~[spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5135) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_231]
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134) ~[na:1.8.0_231]
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:841) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_231]
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134) ~[na:1.8.0_231]
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:421) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:930) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:459) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:107) ~[spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	... 13 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.boot.web.servlet.filter.OrderedFormContentFilter]: Factory method 'formContentFilter' threw exception; nested exception is java.lang.NoClassDefFoundError: Could not initialize class com.fasterxml.jackson.databind.ObjectMapper
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:651) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	... 54 common frames omitted
Caused by: java.lang.NoClassDefFoundError: Could not initialize class com.fasterxml.jackson.databind.ObjectMapper
	at org.springframework.http.converter.json.Jackson2ObjectMapperBuilder.build(Jackson2ObjectMapperBuilder.java:631) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.http.converter.json.MappingJackson2HttpMessageConverter.<init>(MappingJackson2HttpMessageConverter.java:59) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.http.converter.support.AllEncompassingFormHttpMessageConverter.<init>(AllEncompassingFormHttpMessageConverter.java:76) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.FormContentFilter.<init>(FormContentFilter.java:61) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.boot.web.servlet.filter.OrderedFormContentFilter.<init>(OrderedFormContentFilter.java:29) ~[spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration.formContentFilter(WebMvcAutoConfiguration.java:161) ~[spring-boot-autoconfigure-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_231]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_231]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_231]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_231]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	... 55 common frames omitted
2020/06/28-16:49:01 [main] INFO  com.huijian.rac.RacOrderServiceApplication- No active profile set, falling back to default profiles: default
2020/06/28-16:49:01 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Multiple Spring Data modules found, entering strict repository configuration mode!
2020/06/28-16:49:01 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020/06/28-16:49:01 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Finished Spring Data repository scanning in 14ms. Found 0 Redis repository interfaces.
2020/06/28-16:49:01 [main] INFO  org.springframework.cloud.context.scope.GenericScope- BeanFactory id=f3f23537-6900-3ad0-88d5-cec7769c130c
2020/06/28-16:49:01 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/28-16:49:01 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/28-16:49:02 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat initialized with port(s): 8084 (http)
2020/06/28-16:49:02 [main] INFO  org.apache.catalina.core.StandardService- Starting service [Tomcat]
2020/06/28-16:49:02 [main] INFO  org.apache.catalina.core.StandardEngine- Starting Servlet engine: [Apache Tomcat/9.0.29]
2020/06/28-16:49:02 [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]- Initializing Spring embedded WebApplicationContext
2020/06/28-16:49:02 [main] INFO  org.springframework.web.context.ContextLoader- Root WebApplicationContext: initialization completed in 941 ms
2020/06/28-16:49:02 [main] ERROR org.springframework.boot.web.embedded.tomcat.TomcatStarter- Error starting Tomcat context. Exception: org.springframework.beans.factory.BeanCreationException. Message: Error creating bean with name 'formContentFilter' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.boot.web.servlet.filter.OrderedFormContentFilter]: Factory method 'formContentFilter' threw exception; nested exception is java.lang.NoClassDefFoundError: Could not initialize class com.fasterxml.jackson.databind.ObjectMapper
2020/06/28-16:49:02 [main] INFO  org.apache.catalina.core.StandardService- Stopping service [Tomcat]
2020/06/28-16:49:02 [main] WARN  org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext- Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
2020/06/28-16:49:02 [main] INFO  org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener- 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020/06/28-16:49:02 [main] ERROR org.springframework.boot.SpringApplication- Application run failed
org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:156) ~[spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:544) ~[spring-context-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141) ~[spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747) [spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397) [spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315) [spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226) [spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215) [spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at com.huijian.rac.RacOrderServiceApplication.main(RacOrderServiceApplication.java:14) [classes/:na]
Caused by: org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:126) ~[spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:88) ~[spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:438) ~[spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:191) ~[spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:180) ~[spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:153) ~[spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	... 8 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'formContentFilter' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.boot.web.servlet.filter.OrderedFormContentFilter]: Factory method 'formContentFilter' threw exception; nested exception is java.lang.NoClassDefFoundError: Could not initialize class com.fasterxml.jackson.databind.ObjectMapper
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:656) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:484) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1338) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:557) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:211) ~[spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:174) ~[spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:169) ~[spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:154) ~[spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:86) ~[spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:253) ~[spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:227) ~[spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:53) ~[spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5135) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_231]
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134) ~[na:1.8.0_231]
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:841) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_231]
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134) ~[na:1.8.0_231]
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:421) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:930) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:459) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:107) ~[spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	... 13 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.boot.web.servlet.filter.OrderedFormContentFilter]: Factory method 'formContentFilter' threw exception; nested exception is java.lang.NoClassDefFoundError: Could not initialize class com.fasterxml.jackson.databind.ObjectMapper
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:651) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	... 54 common frames omitted
Caused by: java.lang.NoClassDefFoundError: Could not initialize class com.fasterxml.jackson.databind.ObjectMapper
	at org.springframework.http.converter.json.Jackson2ObjectMapperBuilder.build(Jackson2ObjectMapperBuilder.java:631) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.http.converter.json.MappingJackson2HttpMessageConverter.<init>(MappingJackson2HttpMessageConverter.java:59) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.http.converter.support.AllEncompassingFormHttpMessageConverter.<init>(AllEncompassingFormHttpMessageConverter.java:76) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.FormContentFilter.<init>(FormContentFilter.java:61) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.boot.web.servlet.filter.OrderedFormContentFilter.<init>(OrderedFormContentFilter.java:29) ~[spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration.formContentFilter(WebMvcAutoConfiguration.java:161) ~[spring-boot-autoconfigure-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_231]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_231]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_231]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_231]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	... 55 common frames omitted
2020/06/28-16:49:16 [main] INFO  com.huijian.rac.RacOrderServiceApplication- No active profile set, falling back to default profiles: default
2020/06/28-16:49:16 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Multiple Spring Data modules found, entering strict repository configuration mode!
2020/06/28-16:49:16 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020/06/28-16:49:16 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Finished Spring Data repository scanning in 15ms. Found 0 Redis repository interfaces.
2020/06/28-16:49:17 [main] INFO  org.springframework.cloud.context.scope.GenericScope- BeanFactory id=f3f23537-6900-3ad0-88d5-cec7769c130c
2020/06/28-16:49:17 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/28-16:49:17 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/28-16:49:17 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat initialized with port(s): 8084 (http)
2020/06/28-16:49:17 [main] INFO  org.apache.catalina.core.StandardService- Starting service [Tomcat]
2020/06/28-16:49:17 [main] INFO  org.apache.catalina.core.StandardEngine- Starting Servlet engine: [Apache Tomcat/9.0.29]
2020/06/28-16:49:17 [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]- Initializing Spring embedded WebApplicationContext
2020/06/28-16:49:17 [main] INFO  org.springframework.web.context.ContextLoader- Root WebApplicationContext: initialization completed in 1085 ms
2020/06/28-16:49:17 [main] ERROR org.springframework.boot.web.embedded.tomcat.TomcatStarter- Error starting Tomcat context. Exception: org.springframework.beans.factory.BeanCreationException. Message: Error creating bean with name 'formContentFilter' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.boot.web.servlet.filter.OrderedFormContentFilter]: Factory method 'formContentFilter' threw exception; nested exception is java.lang.NoClassDefFoundError: Could not initialize class com.fasterxml.jackson.databind.ObjectMapper
2020/06/28-16:49:17 [main] INFO  org.apache.catalina.core.StandardService- Stopping service [Tomcat]
2020/06/28-16:49:17 [main] WARN  org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext- Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
2020/06/28-16:49:17 [main] INFO  org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener- 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020/06/28-16:49:17 [main] ERROR org.springframework.boot.SpringApplication- Application run failed
org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:156) ~[spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:544) ~[spring-context-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141) ~[spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747) [spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397) [spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315) [spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226) [spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215) [spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at com.huijian.rac.RacOrderServiceApplication.main(RacOrderServiceApplication.java:14) [classes/:na]
Caused by: org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:126) ~[spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:88) ~[spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:438) ~[spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:191) ~[spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:180) ~[spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:153) ~[spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	... 8 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'formContentFilter' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.boot.web.servlet.filter.OrderedFormContentFilter]: Factory method 'formContentFilter' threw exception; nested exception is java.lang.NoClassDefFoundError: Could not initialize class com.fasterxml.jackson.databind.ObjectMapper
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:656) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:484) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1338) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:557) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:211) ~[spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:174) ~[spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:169) ~[spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:154) ~[spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:86) ~[spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:253) ~[spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:227) ~[spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:53) ~[spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5135) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266) ~[na:1.8.0_231]
	at java.util.concurrent.FutureTask.run(FutureTask.java) ~[na:1.8.0_231]
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134) ~[na:1.8.0_231]
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:841) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266) ~[na:1.8.0_231]
	at java.util.concurrent.FutureTask.run(FutureTask.java) ~[na:1.8.0_231]
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134) ~[na:1.8.0_231]
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:421) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:930) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:459) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:107) ~[spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	... 13 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.boot.web.servlet.filter.OrderedFormContentFilter]: Factory method 'formContentFilter' threw exception; nested exception is java.lang.NoClassDefFoundError: Could not initialize class com.fasterxml.jackson.databind.ObjectMapper
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:651) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	... 56 common frames omitted
Caused by: java.lang.NoClassDefFoundError: Could not initialize class com.fasterxml.jackson.databind.ObjectMapper
	at org.springframework.http.converter.json.Jackson2ObjectMapperBuilder.build(Jackson2ObjectMapperBuilder.java:631) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.http.converter.json.MappingJackson2HttpMessageConverter.<init>(MappingJackson2HttpMessageConverter.java:59) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.http.converter.support.AllEncompassingFormHttpMessageConverter.<init>(AllEncompassingFormHttpMessageConverter.java:76) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.FormContentFilter.<init>(FormContentFilter.java:61) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.boot.web.servlet.filter.OrderedFormContentFilter.<init>(OrderedFormContentFilter.java:29) ~[spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration.formContentFilter(WebMvcAutoConfiguration.java:161) ~[spring-boot-autoconfigure-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_231]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_231]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_231]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_231]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	... 57 common frames omitted
2020/06/28-16:50:21 [main] INFO  com.huijian.rac.RacOrderServiceApplication- No active profile set, falling back to default profiles: default
2020/06/28-16:50:21 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Multiple Spring Data modules found, entering strict repository configuration mode!
2020/06/28-16:50:21 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020/06/28-16:50:21 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Finished Spring Data repository scanning in 15ms. Found 0 Redis repository interfaces.
2020/06/28-16:50:21 [main] INFO  org.springframework.cloud.context.scope.GenericScope- BeanFactory id=f3f23537-6900-3ad0-88d5-cec7769c130c
2020/06/28-16:50:21 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/28-16:50:21 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/28-16:50:21 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat initialized with port(s): 8084 (http)
2020/06/28-16:50:22 [main] INFO  org.apache.catalina.core.StandardService- Starting service [Tomcat]
2020/06/28-16:50:22 [main] INFO  org.apache.catalina.core.StandardEngine- Starting Servlet engine: [Apache Tomcat/9.0.29]
2020/06/28-16:50:22 [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]- Initializing Spring embedded WebApplicationContext
2020/06/28-16:50:22 [main] INFO  org.springframework.web.context.ContextLoader- Root WebApplicationContext: initialization completed in 995 ms
2020/06/28-16:50:22 [main] ERROR org.springframework.boot.web.embedded.tomcat.TomcatStarter- Error starting Tomcat context. Exception: org.springframework.beans.factory.BeanCreationException. Message: Error creating bean with name 'formContentFilter' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.boot.web.servlet.filter.OrderedFormContentFilter]: Factory method 'formContentFilter' threw exception; nested exception is java.lang.NoClassDefFoundError: Could not initialize class com.fasterxml.jackson.databind.ObjectMapper
2020/06/28-16:50:22 [main] INFO  org.apache.catalina.core.StandardService- Stopping service [Tomcat]
2020/06/28-16:50:22 [main] WARN  org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext- Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
2020/06/28-16:50:22 [main] INFO  org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener- 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020/06/28-16:50:22 [main] ERROR org.springframework.boot.SpringApplication- Application run failed
org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:156) ~[spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:544) ~[spring-context-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141) ~[spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747) [spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397) [spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315) [spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226) [spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215) [spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at com.huijian.rac.RacOrderServiceApplication.main(RacOrderServiceApplication.java:14) [classes/:na]
Caused by: org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:126) ~[spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:88) ~[spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:438) ~[spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:191) ~[spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:180) ~[spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:153) ~[spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	... 8 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'formContentFilter' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.boot.web.servlet.filter.OrderedFormContentFilter]: Factory method 'formContentFilter' threw exception; nested exception is java.lang.NoClassDefFoundError: Could not initialize class com.fasterxml.jackson.databind.ObjectMapper
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:656) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:484) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1338) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:557) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:211) ~[spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:174) ~[spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:169) ~[spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:154) ~[spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:86) ~[spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:253) ~[spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:227) ~[spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:53) ~[spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5135) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_231]
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134) ~[na:1.8.0_231]
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:841) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_231]
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134) ~[na:1.8.0_231]
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:421) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:930) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:459) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:107) ~[spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	... 13 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.boot.web.servlet.filter.OrderedFormContentFilter]: Factory method 'formContentFilter' threw exception; nested exception is java.lang.NoClassDefFoundError: Could not initialize class com.fasterxml.jackson.databind.ObjectMapper
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:651) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	... 54 common frames omitted
Caused by: java.lang.NoClassDefFoundError: Could not initialize class com.fasterxml.jackson.databind.ObjectMapper
	at org.springframework.http.converter.json.Jackson2ObjectMapperBuilder.build(Jackson2ObjectMapperBuilder.java:631) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.http.converter.json.MappingJackson2HttpMessageConverter.<init>(MappingJackson2HttpMessageConverter.java:59) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.http.converter.support.AllEncompassingFormHttpMessageConverter.<init>(AllEncompassingFormHttpMessageConverter.java:76) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.FormContentFilter.<init>(FormContentFilter.java:61) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.boot.web.servlet.filter.OrderedFormContentFilter.<init>(OrderedFormContentFilter.java:29) ~[spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration.formContentFilter(WebMvcAutoConfiguration.java:161) ~[spring-boot-autoconfigure-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_231]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_231]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_231]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_231]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	... 55 common frames omitted
2020/06/28-16:53:16 [main] INFO  com.huijian.rac.RacOrderServiceApplication- No active profile set, falling back to default profiles: default
2020/06/28-16:53:17 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Multiple Spring Data modules found, entering strict repository configuration mode!
2020/06/28-16:53:17 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020/06/28-16:53:17 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Finished Spring Data repository scanning in 18ms. Found 0 Redis repository interfaces.
2020/06/28-16:53:17 [main] INFO  org.springframework.cloud.context.scope.GenericScope- BeanFactory id=f3f23537-6900-3ad0-88d5-cec7769c130c
2020/06/28-16:53:17 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/28-16:53:17 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/28-16:53:17 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat initialized with port(s): 8084 (http)
2020/06/28-16:53:17 [main] INFO  org.apache.catalina.core.StandardService- Starting service [Tomcat]
2020/06/28-16:53:17 [main] INFO  org.apache.catalina.core.StandardEngine- Starting Servlet engine: [Apache Tomcat/9.0.29]
2020/06/28-16:53:17 [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]- Initializing Spring embedded WebApplicationContext
2020/06/28-16:53:17 [main] INFO  org.springframework.web.context.ContextLoader- Root WebApplicationContext: initialization completed in 1195 ms
2020/06/28-16:53:17 [main] ERROR org.springframework.boot.web.embedded.tomcat.TomcatStarter- Error starting Tomcat context. Exception: org.springframework.beans.factory.BeanCreationException. Message: Error creating bean with name 'formContentFilter' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.boot.web.servlet.filter.OrderedFormContentFilter]: Factory method 'formContentFilter' threw exception; nested exception is java.lang.NoClassDefFoundError: Could not initialize class com.fasterxml.jackson.databind.ObjectMapper
2020/06/28-16:53:17 [main] INFO  org.apache.catalina.core.StandardService- Stopping service [Tomcat]
2020/06/28-16:53:17 [main] WARN  org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext- Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
2020/06/28-16:53:17 [main] INFO  org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener- 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020/06/28-16:53:17 [main] ERROR org.springframework.boot.SpringApplication- Application run failed
org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:156) ~[spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:544) ~[spring-context-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141) ~[spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747) [spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397) [spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315) [spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226) [spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215) [spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at com.huijian.rac.RacOrderServiceApplication.main(RacOrderServiceApplication.java:14) [classes/:na]
Caused by: org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:126) ~[spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:88) ~[spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:438) ~[spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:191) ~[spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:180) ~[spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:153) ~[spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	... 8 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'formContentFilter' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.boot.web.servlet.filter.OrderedFormContentFilter]: Factory method 'formContentFilter' threw exception; nested exception is java.lang.NoClassDefFoundError: Could not initialize class com.fasterxml.jackson.databind.ObjectMapper
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:656) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:484) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1338) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:557) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:211) ~[spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:174) ~[spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:169) ~[spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:154) ~[spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:86) ~[spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:253) ~[spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:227) ~[spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:53) ~[spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5135) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_231]
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134) ~[na:1.8.0_231]
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:841) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_231]
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134) ~[na:1.8.0_231]
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:421) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:930) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:459) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:107) ~[spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	... 13 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.boot.web.servlet.filter.OrderedFormContentFilter]: Factory method 'formContentFilter' threw exception; nested exception is java.lang.NoClassDefFoundError: Could not initialize class com.fasterxml.jackson.databind.ObjectMapper
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:651) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	... 54 common frames omitted
Caused by: java.lang.NoClassDefFoundError: Could not initialize class com.fasterxml.jackson.databind.ObjectMapper
	at org.springframework.http.converter.json.Jackson2ObjectMapperBuilder.build(Jackson2ObjectMapperBuilder.java:631) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.http.converter.json.MappingJackson2HttpMessageConverter.<init>(MappingJackson2HttpMessageConverter.java:59) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.http.converter.support.AllEncompassingFormHttpMessageConverter.<init>(AllEncompassingFormHttpMessageConverter.java:76) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.FormContentFilter.<init>(FormContentFilter.java:61) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.boot.web.servlet.filter.OrderedFormContentFilter.<init>(OrderedFormContentFilter.java:29) ~[spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration.formContentFilter(WebMvcAutoConfiguration.java:161) ~[spring-boot-autoconfigure-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_231]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_231]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_231]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_231]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	... 55 common frames omitted
2020/06/28-16:53:51 [main] INFO  com.huijian.rac.RacOrderServiceApplication- No active profile set, falling back to default profiles: default
2020/06/28-16:53:51 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Multiple Spring Data modules found, entering strict repository configuration mode!
2020/06/28-16:53:51 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020/06/28-16:53:51 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Finished Spring Data repository scanning in 14ms. Found 0 Redis repository interfaces.
2020/06/28-16:53:51 [main] INFO  org.springframework.cloud.context.scope.GenericScope- BeanFactory id=f3f23537-6900-3ad0-88d5-cec7769c130c
2020/06/28-16:53:51 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/28-16:53:51 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/28-16:53:51 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat initialized with port(s): 8084 (http)
2020/06/28-16:53:51 [main] INFO  org.apache.catalina.core.StandardService- Starting service [Tomcat]
2020/06/28-16:53:51 [main] INFO  org.apache.catalina.core.StandardEngine- Starting Servlet engine: [Apache Tomcat/9.0.29]
2020/06/28-16:53:52 [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]- Initializing Spring embedded WebApplicationContext
2020/06/28-16:53:52 [main] INFO  org.springframework.web.context.ContextLoader- Root WebApplicationContext: initialization completed in 1026 ms
2020/06/28-16:53:52 [main] WARN  com.netflix.config.sources.URLConfigurationSource- No URLs will be polled as dynamic configuration sources.
2020/06/28-16:53:52 [main] INFO  com.netflix.config.sources.URLConfigurationSource- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020/06/28-16:53:52 [main] WARN  com.netflix.config.sources.URLConfigurationSource- No URLs will be polled as dynamic configuration sources.
2020/06/28-16:53:52 [main] INFO  com.netflix.config.sources.URLConfigurationSource- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020/06/28-16:53:52 [main] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor- Initializing ExecutorService 'applicationTaskExecutor'
2020/06/28-16:53:53 [main] WARN  org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger- You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020/06/28-16:53:53 [main] WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger- Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020/06/28-16:53:53 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory- Setting initial instance status as: STARTING
2020/06/28-16:53:53 [main] INFO  com.netflix.discovery.DiscoveryClient- Initializing Eureka in region us-east-1
2020/06/28-16:53:54 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using JSON encoding codec LegacyJacksonJson
2020/06/28-16:53:54 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using JSON decoding codec LegacyJacksonJson
2020/06/28-16:53:54 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using XML encoding codec XStreamXml
2020/06/28-16:53:54 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using XML decoding codec XStreamXml
2020/06/28-16:53:54 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-16:53:54 [main] INFO  com.netflix.discovery.DiscoveryClient- Disable delta property : false
2020/06/28-16:53:54 [main] INFO  com.netflix.discovery.DiscoveryClient- Single vip registry refresh property : null
2020/06/28-16:53:54 [main] INFO  com.netflix.discovery.DiscoveryClient- Force full registry fetch : false
2020/06/28-16:53:54 [main] INFO  com.netflix.discovery.DiscoveryClient- Application is null : false
2020/06/28-16:53:54 [main] INFO  com.netflix.discovery.DiscoveryClient- Registered Applications size is zero : true
2020/06/28-16:53:54 [main] INFO  com.netflix.discovery.DiscoveryClient- Application version is -1: true
2020/06/28-16:53:54 [main] INFO  com.netflix.discovery.DiscoveryClient- Getting all instance registry info from the eureka server
2020/06/28-16:53:54 [main] INFO  com.netflix.discovery.DiscoveryClient- The response status is 200
2020/06/28-16:53:54 [main] INFO  com.netflix.discovery.DiscoveryClient- Starting heartbeat executor: renew interval is: 30
2020/06/28-16:53:54 [main] INFO  com.netflix.discovery.InstanceInfoReplicator- InstanceInfoReplicator onDemand update allowed rate per min is 4
2020/06/28-16:53:54 [main] INFO  com.netflix.discovery.DiscoveryClient- Discovery Client initialized at timestamp 1593334434828 with initial instances count: 0
2020/06/28-16:53:54 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry- Registering application RAC-ORDER-SERVICE with eureka with status UP
2020/06/28-16:53:54 [main] INFO  com.netflix.discovery.DiscoveryClient- Saw local status change event StatusChangeEvent [timestamp=1593334434831, current=UP, previous=STARTING]
2020/06/28-16:53:54 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-ORDER-SERVICE/MSI.mshome.net:rac-order-service:8084: registering service...
2020/06/28-16:53:54 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Attempting to connect to: [192.168.161.129:5672]
2020/06/28-16:53:54 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Created new connection: rabbitConnectionFactory#5fa23c:0/SimpleConnection@7185e611 [delegate=amqp://admin@192.168.161.129:5672/, localPort= 57431]
2020/06/28-16:53:54 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-ORDER-SERVICE/MSI.mshome.net:rac-order-service:8084 - registration status: 204
2020/06/28-16:53:54 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat started on port(s): 8084 (http) with context path ''
2020/06/28-16:53:54 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration- Updating port to 8084
2020/06/28-16:53:55 [main] INFO  com.huijian.rac.RacOrderServiceApplication- Started RacOrderServiceApplication in 5.607 seconds (JVM running for 6.424)
2020/06/28-16:54:24 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient- Disable delta property : false
2020/06/28-16:54:24 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient- Single vip registry refresh property : null
2020/06/28-16:54:24 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient- Force full registry fetch : false
2020/06/28-16:54:24 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient- Application is null : false
2020/06/28-16:54:24 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient- Registered Applications size is zero : true
2020/06/28-16:54:24 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient- Application version is -1: false
2020/06/28-16:54:24 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient- Getting all instance registry info from the eureka server
2020/06/28-16:54:24 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient- The response status is 200
2020/06/28-16:55:45 [main] INFO  com.huijian.rac.RacOrderServiceApplication- No active profile set, falling back to default profiles: default
2020/06/28-16:55:45 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Multiple Spring Data modules found, entering strict repository configuration mode!
2020/06/28-16:55:45 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020/06/28-16:55:45 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Finished Spring Data repository scanning in 15ms. Found 0 Redis repository interfaces.
2020/06/28-16:55:45 [main] INFO  org.springframework.cloud.context.scope.GenericScope- BeanFactory id=f3f23537-6900-3ad0-88d5-cec7769c130c
2020/06/28-16:55:45 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/28-16:55:45 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/28-16:55:46 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat initialized with port(s): 8084 (http)
2020/06/28-16:55:46 [main] INFO  org.apache.catalina.core.StandardService- Starting service [Tomcat]
2020/06/28-16:55:46 [main] INFO  org.apache.catalina.core.StandardEngine- Starting Servlet engine: [Apache Tomcat/9.0.29]
2020/06/28-16:55:46 [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]- Initializing Spring embedded WebApplicationContext
2020/06/28-16:55:46 [main] INFO  org.springframework.web.context.ContextLoader- Root WebApplicationContext: initialization completed in 1089 ms
2020/06/28-16:55:46 [main] ERROR org.springframework.boot.web.embedded.tomcat.TomcatStarter- Error starting Tomcat context. Exception: org.springframework.beans.factory.BeanCreationException. Message: Error creating bean with name 'formContentFilter' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.boot.web.servlet.filter.OrderedFormContentFilter]: Factory method 'formContentFilter' threw exception; nested exception is java.lang.NoClassDefFoundError: Could not initialize class com.fasterxml.jackson.databind.ObjectMapper
2020/06/28-16:55:46 [main] INFO  org.apache.catalina.core.StandardService- Stopping service [Tomcat]
2020/06/28-16:55:46 [main] WARN  org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext- Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
2020/06/28-16:55:46 [main] INFO  org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener- 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020/06/28-16:55:46 [main] ERROR org.springframework.boot.SpringApplication- Application run failed
org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:156) ~[spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:544) ~[spring-context-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141) ~[spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747) [spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397) [spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315) [spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226) [spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215) [spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at com.huijian.rac.RacOrderServiceApplication.main(RacOrderServiceApplication.java:14) [classes/:na]
Caused by: org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:126) ~[spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:88) ~[spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:438) ~[spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:191) ~[spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:180) ~[spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:153) ~[spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	... 8 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'formContentFilter' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.boot.web.servlet.filter.OrderedFormContentFilter]: Factory method 'formContentFilter' threw exception; nested exception is java.lang.NoClassDefFoundError: Could not initialize class com.fasterxml.jackson.databind.ObjectMapper
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:656) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:484) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1338) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:557) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:211) ~[spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:174) ~[spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:169) ~[spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:154) ~[spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:86) ~[spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:253) ~[spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:227) ~[spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:53) ~[spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5135) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_231]
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134) ~[na:1.8.0_231]
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:841) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_231]
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134) ~[na:1.8.0_231]
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:421) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:930) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:459) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:107) ~[spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	... 13 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.boot.web.servlet.filter.OrderedFormContentFilter]: Factory method 'formContentFilter' threw exception; nested exception is java.lang.NoClassDefFoundError: Could not initialize class com.fasterxml.jackson.databind.ObjectMapper
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:651) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	... 54 common frames omitted
Caused by: java.lang.NoClassDefFoundError: Could not initialize class com.fasterxml.jackson.databind.ObjectMapper
	at org.springframework.http.converter.json.Jackson2ObjectMapperBuilder.build(Jackson2ObjectMapperBuilder.java:631) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.http.converter.json.MappingJackson2HttpMessageConverter.<init>(MappingJackson2HttpMessageConverter.java:59) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.http.converter.support.AllEncompassingFormHttpMessageConverter.<init>(AllEncompassingFormHttpMessageConverter.java:76) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.FormContentFilter.<init>(FormContentFilter.java:61) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.boot.web.servlet.filter.OrderedFormContentFilter.<init>(OrderedFormContentFilter.java:29) ~[spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration.formContentFilter(WebMvcAutoConfiguration.java:161) ~[spring-boot-autoconfigure-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_231]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_231]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_231]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_231]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	... 55 common frames omitted
2020/06/28-17:00:23 [main] INFO  com.huijian.rac.RacOrderServiceApplication- No active profile set, falling back to default profiles: default
2020/06/28-17:00:24 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Multiple Spring Data modules found, entering strict repository configuration mode!
2020/06/28-17:00:24 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020/06/28-17:00:24 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Finished Spring Data repository scanning in 15ms. Found 0 Redis repository interfaces.
2020/06/28-17:00:24 [main] INFO  org.springframework.cloud.context.scope.GenericScope- BeanFactory id=f3f23537-6900-3ad0-88d5-cec7769c130c
2020/06/28-17:00:24 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/28-17:00:24 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/28-17:00:24 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat initialized with port(s): 8084 (http)
2020/06/28-17:00:24 [main] INFO  org.apache.catalina.core.StandardService- Starting service [Tomcat]
2020/06/28-17:00:24 [main] INFO  org.apache.catalina.core.StandardEngine- Starting Servlet engine: [Apache Tomcat/9.0.29]
2020/06/28-17:00:25 [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]- Initializing Spring embedded WebApplicationContext
2020/06/28-17:00:25 [main] INFO  org.springframework.web.context.ContextLoader- Root WebApplicationContext: initialization completed in 1094 ms
2020/06/28-17:00:25 [main] WARN  com.netflix.config.sources.URLConfigurationSource- No URLs will be polled as dynamic configuration sources.
2020/06/28-17:00:25 [main] INFO  com.netflix.config.sources.URLConfigurationSource- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020/06/28-17:00:25 [main] WARN  com.netflix.config.sources.URLConfigurationSource- No URLs will be polled as dynamic configuration sources.
2020/06/28-17:00:25 [main] INFO  com.netflix.config.sources.URLConfigurationSource- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020/06/28-17:00:25 [main] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor- Initializing ExecutorService 'applicationTaskExecutor'
2020/06/28-17:00:26 [main] WARN  org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger- You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020/06/28-17:00:26 [main] WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger- Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020/06/28-17:00:26 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory- Setting initial instance status as: STARTING
2020/06/28-17:00:26 [main] INFO  com.netflix.discovery.DiscoveryClient- Initializing Eureka in region us-east-1
2020/06/28-17:00:27 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using JSON encoding codec LegacyJacksonJson
2020/06/28-17:00:27 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using JSON decoding codec LegacyJacksonJson
2020/06/28-17:00:27 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using XML encoding codec XStreamXml
2020/06/28-17:00:27 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using XML decoding codec XStreamXml
2020/06/28-17:00:27 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-17:00:27 [main] INFO  com.netflix.discovery.DiscoveryClient- Disable delta property : false
2020/06/28-17:00:27 [main] INFO  com.netflix.discovery.DiscoveryClient- Single vip registry refresh property : null
2020/06/28-17:00:27 [main] INFO  com.netflix.discovery.DiscoveryClient- Force full registry fetch : false
2020/06/28-17:00:27 [main] INFO  com.netflix.discovery.DiscoveryClient- Application is null : false
2020/06/28-17:00:27 [main] INFO  com.netflix.discovery.DiscoveryClient- Registered Applications size is zero : true
2020/06/28-17:00:27 [main] INFO  com.netflix.discovery.DiscoveryClient- Application version is -1: true
2020/06/28-17:00:27 [main] INFO  com.netflix.discovery.DiscoveryClient- Getting all instance registry info from the eureka server
2020/06/28-17:00:27 [main] INFO  com.netflix.discovery.DiscoveryClient- The response status is 200
2020/06/28-17:00:27 [main] INFO  com.netflix.discovery.DiscoveryClient- Starting heartbeat executor: renew interval is: 30
2020/06/28-17:00:27 [main] INFO  com.netflix.discovery.InstanceInfoReplicator- InstanceInfoReplicator onDemand update allowed rate per min is 4
2020/06/28-17:00:27 [main] INFO  com.netflix.discovery.DiscoveryClient- Discovery Client initialized at timestamp 1593334827712 with initial instances count: 1
2020/06/28-17:00:27 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry- Registering application RAC-ORDER-SERVICE with eureka with status UP
2020/06/28-17:00:27 [main] INFO  com.netflix.discovery.DiscoveryClient- Saw local status change event StatusChangeEvent [timestamp=1593334827716, current=UP, previous=STARTING]
2020/06/28-17:00:27 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-ORDER-SERVICE/MSI.mshome.net:rac-order-service:8084: registering service...
2020/06/28-17:00:27 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Attempting to connect to: [192.168.161.129:5672]
2020/06/28-17:00:27 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Created new connection: rabbitConnectionFactory#277b8fa4:0/SimpleConnection@13fe5bb7 [delegate=amqp://admin@192.168.161.129:5672/, localPort= 57962]
2020/06/28-17:00:27 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-ORDER-SERVICE/MSI.mshome.net:rac-order-service:8084 - registration status: 204
2020/06/28-17:00:27 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat started on port(s): 8084 (http) with context path ''
2020/06/28-17:00:27 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration- Updating port to 8084
2020/06/28-17:00:28 [main] INFO  com.huijian.rac.RacOrderServiceApplication- Started RacOrderServiceApplication in 5.372 seconds (JVM running for 6.206)
2020/06/28-17:00:45 [main] INFO  com.huijian.rac.RacStockServiceApplication- No active profile set, falling back to default profiles: default
2020/06/28-17:00:45 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Multiple Spring Data modules found, entering strict repository configuration mode!
2020/06/28-17:00:45 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Bootstrapping Spring Data repositories in DEFAULT mode.
2020/06/28-17:00:45 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Finished Spring Data repository scanning in 40ms. Found 0 repository interfaces.
2020/06/28-17:00:46 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'deliveryUnitMapper' and 'com.huijian.rac.mapper.DeliveryUnitMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-17:00:46 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'departMapper' and 'com.huijian.rac.mapper.DepartMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-17:00:46 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'discardDetailMapper' and 'com.huijian.rac.mapper.DiscardDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-17:00:46 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'discardMapper' and 'com.huijian.rac.mapper.DiscardMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-17:00:46 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsDictionaryMapper' and 'com.huijian.rac.mapper.GoodsDictionaryMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-17:00:46 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsRecordMapper' and 'com.huijian.rac.mapper.GoodsRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-17:00:46 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsSupplierMapper' and 'com.huijian.rac.mapper.GoodsSupplierMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-17:00:46 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'leaveStockListDetailMapper' and 'com.huijian.rac.mapper.LeaveStockListDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-17:00:46 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'materialMapper' and 'com.huijian.rac.mapper.MaterialMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-17:00:46 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'outboundRecordMapper' and 'com.huijian.rac.mapper.OutboundRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-17:00:46 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'outboundSecondRecordMapper' and 'com.huijian.rac.mapper.OutboundSecondRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-17:00:46 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'reagentMapper' and 'com.huijian.rac.mapper.ReagentMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-17:00:46 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'returnGoodsDetailMapper' and 'com.huijian.rac.mapper.ReturnGoodsDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-17:00:46 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'returnGoodsMapper' and 'com.huijian.rac.mapper.ReturnGoodsMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-17:00:46 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'secondGoodsRecordMapper' and 'com.huijian.rac.mapper.SecondGoodsRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-17:00:46 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'secondLeaveStockListDetailMapper' and 'com.huijian.rac.mapper.SecondLeaveStockListDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-17:00:46 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'unitMapper' and 'com.huijian.rac.mapper.UnitMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-17:00:46 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseMapper' and 'com.huijian.rac.mapper.WarehouseMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-17:00:46 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseRecordMapper' and 'com.huijian.rac.mapper.WarehouseRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-17:00:46 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseSecondMapper' and 'com.huijian.rac.mapper.WarehouseSecondMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-17:00:46 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseSecondRecordMapper' and 'com.huijian.rac.mapper.WarehouseSecondRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-17:00:46 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'departsMapper' and 'com.huijian.rac.mapper.DepartsMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-17:00:46 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsPackageDetailMapper' and 'com.huijian.rac.mapper.GoodsPackageDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-17:00:46 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsPackageMapper' and 'com.huijian.rac.mapper.GoodsPackageMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-17:00:46 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'hospitalMapper' and 'com.huijian.rac.mapper.HospitalMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-17:00:46 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'leaveStockListSecondMapper' and 'com.huijian.rac.mapper.LeaveStockListSecondMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-17:00:46 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderDetailMapper' and 'com.huijian.rac.mapper.OrderDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-17:00:46 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderMapper' and 'com.huijian.rac.mapper.OrderMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-17:00:46 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderOperateMapper' and 'com.huijian.rac.mapper.OrderOperateMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-17:00:46 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderReturnDetailMapper' and 'com.huijian.rac.mapper.OrderReturnDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-17:00:46 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderReturnMapper' and 'com.huijian.rac.mapper.OrderReturnMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-17:00:46 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderReviewMapper' and 'com.huijian.rac.mapper.OrderReviewMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-17:00:46 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- No MyBatis mapper was found in '[com.huijian.rac.mapper]' package. Please check your configuration.
2020/06/28-17:00:46 [main] INFO  org.springframework.cloud.context.scope.GenericScope- BeanFactory id=b2907805-f796-3a2c-9729-4f51ea31ae6e
2020/06/28-17:00:46 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/28-17:00:46 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'redisConfig' of type [com.huijian.rac.config.RedisConfig$$EnhancerBySpringCGLIB$$b48f9d03] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/28-17:00:46 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/28-17:00:46 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat initialized with port(s): 8083 (http)
2020/06/28-17:00:46 [main] INFO  org.apache.catalina.core.StandardService- Starting service [Tomcat]
2020/06/28-17:00:46 [main] INFO  org.apache.catalina.core.StandardEngine- Starting Servlet engine: [Apache Tomcat/9.0.27]
2020/06/28-17:00:46 [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]- Initializing Spring embedded WebApplicationContext
2020/06/28-17:00:46 [main] INFO  org.springframework.web.context.ContextLoader- Root WebApplicationContext: initialization completed in 1917 ms
2020/06/28-17:00:48 [main] WARN  com.netflix.config.sources.URLConfigurationSource- No URLs will be polled as dynamic configuration sources.
2020/06/28-17:00:48 [main] INFO  com.netflix.config.sources.URLConfigurationSource- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020/06/28-17:00:48 [main] WARN  com.netflix.config.sources.URLConfigurationSource- No URLs will be polled as dynamic configuration sources.
2020/06/28-17:00:48 [main] INFO  com.netflix.config.sources.URLConfigurationSource- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020/06/28-17:00:48 [main] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor- Initializing ExecutorService 'applicationTaskExecutor'
2020/06/28-17:00:50 [main] WARN  org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger- You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020/06/28-17:00:50 [main] WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger- Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020/06/28-17:00:50 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory- Setting initial instance status as: STARTING
2020/06/28-17:00:50 [main] INFO  com.netflix.discovery.DiscoveryClient- Initializing Eureka in region us-east-1
2020/06/28-17:00:50 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using JSON encoding codec LegacyJacksonJson
2020/06/28-17:00:50 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using JSON decoding codec LegacyJacksonJson
2020/06/28-17:00:50 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using XML encoding codec XStreamXml
2020/06/28-17:00:50 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using XML decoding codec XStreamXml
2020/06/28-17:00:50 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-17:00:51 [main] INFO  com.netflix.discovery.DiscoveryClient- Disable delta property : false
2020/06/28-17:00:51 [main] INFO  com.netflix.discovery.DiscoveryClient- Single vip registry refresh property : null
2020/06/28-17:00:51 [main] INFO  com.netflix.discovery.DiscoveryClient- Force full registry fetch : false
2020/06/28-17:00:51 [main] INFO  com.netflix.discovery.DiscoveryClient- Application is null : false
2020/06/28-17:00:51 [main] INFO  com.netflix.discovery.DiscoveryClient- Registered Applications size is zero : true
2020/06/28-17:00:51 [main] INFO  com.netflix.discovery.DiscoveryClient- Application version is -1: true
2020/06/28-17:00:51 [main] INFO  com.netflix.discovery.DiscoveryClient- Getting all instance registry info from the eureka server
2020/06/28-17:00:51 [main] INFO  com.netflix.discovery.DiscoveryClient- The response status is 200
2020/06/28-17:00:51 [main] INFO  com.netflix.discovery.DiscoveryClient- Starting heartbeat executor: renew interval is: 30
2020/06/28-17:00:51 [main] INFO  com.netflix.discovery.InstanceInfoReplicator- InstanceInfoReplicator onDemand update allowed rate per min is 4
2020/06/28-17:00:51 [main] INFO  com.netflix.discovery.DiscoveryClient- Discovery Client initialized at timestamp 1593334851276 with initial instances count: 1
2020/06/28-17:00:51 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry- Registering application RAC-STOCK-SERVICE with eureka with status UP
2020/06/28-17:00:51 [main] INFO  com.netflix.discovery.DiscoveryClient- Saw local status change event StatusChangeEvent [timestamp=1593334851279, current=UP, previous=STARTING]
2020/06/28-17:00:51 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-STOCK-SERVICE/MSI.mshome.net:rac-stock-service:8083: registering service...
2020/06/28-17:00:51 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Attempting to connect to: [192.168.161.129:5672]
2020/06/28-17:00:51 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Created new connection: rabbitConnectionFactory#3127cb44:0/SimpleConnection@41be8db9 [delegate=amqp://admin@192.168.161.129:5672/, localPort= 58021]
2020/06/28-17:00:51 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-STOCK-SERVICE/MSI.mshome.net:rac-stock-service:8083 - registration status: 204
2020/06/28-17:00:51 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat started on port(s): 8083 (http) with context path ''
2020/06/28-17:00:51 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration- Updating port to 8083
2020/06/28-17:00:51 [main] INFO  com.huijian.rac.RacStockServiceApplication- Started RacStockServiceApplication in 8.149 seconds (JVM running for 8.957)
2020/06/28-17:01:25 [http-nio-8083-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]- Initializing Spring DispatcherServlet 'dispatcherServlet'
2020/06/28-17:01:25 [http-nio-8083-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet- Initializing Servlet 'dispatcherServlet'
2020/06/28-17:01:25 [http-nio-8083-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet- Completed initialization in 10 ms
2020/06/28-17:01:25 [http-nio-8084-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]- Initializing Spring DispatcherServlet 'dispatcherServlet'
2020/06/28-17:01:25 [http-nio-8084-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet- Initializing Servlet 'dispatcherServlet'
2020/06/28-17:01:25 [http-nio-8084-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet- Completed initialization in 8 ms
2020/06/28-17:01:25 [http-nio-8084-exec-1] INFO  com.zaxxer.hikari.HikariDataSource- HikariPool-1 - Starting...
2020/06/28-17:01:25 [http-nio-8084-exec-1] INFO  com.zaxxer.hikari.HikariDataSource- HikariPool-1 - Start completed.
2020/06/28-17:01:25 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==>  Preparing: select count(*) from sj_order where YEAR(OrderDate)=YEAR(NOW()); 
2020/06/28-17:01:25 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==> Parameters: 
2020/06/28-17:01:25 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==>  Preparing: select * from pub_depart where HOSPITALID=? 
2020/06/28-17:01:25 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==> Parameters: 901600(String)
2020/06/28-17:01:25 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- <==      Total: 1
2020/06/28-17:01:25 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- <==      Total: 22
2020/06/28-17:01:35 [http-nio-8083-exec-2] INFO  io.lettuce.core.EpollProvider- Starting without optional epoll library
2020/06/28-17:01:35 [http-nio-8083-exec-2] INFO  io.lettuce.core.KqueueProvider- Starting without optional kqueue library
2020/06/28-17:01:36 [http-nio-8083-exec-2] INFO  com.zaxxer.hikari.HikariDataSource- HikariPool-1 - Starting...
2020/06/28-17:01:36 [http-nio-8083-exec-2] INFO  com.zaxxer.hikari.HikariDataSource- HikariPool-1 - Start completed.
2020/06/28-17:01:36 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.getAllGoods- ==>  Preparing: select sg.*, su.UnitName from sj_goodsdictionary sg INNER join sj_unit su on sg.UnitID = su.UnitID 
2020/06/28-17:01:36 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.getAllGoods- ==> Parameters: 
2020/06/28-17:01:36 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.getAllGoods- <==      Total: 20
2020/06/28-17:01:36 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-17:01:36 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-17:01:36 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-17:01:36 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-17:01:36 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 2(Integer)
2020/06/28-17:01:36 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-17:01:36 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-17:01:36 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-17:01:36 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-17:01:36 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-17:01:36 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-17:01:36 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-17:01:36 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-17:01:36 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 2(Integer)
2020/06/28-17:01:36 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-17:01:36 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-17:01:36 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-17:01:36 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-17:01:36 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-17:01:36 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-17:01:36 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-17:01:36 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-17:01:36 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 2(Integer)
2020/06/28-17:01:36 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-17:01:36 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-17:01:36 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-17:01:36 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-17:01:36 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-17:01:36 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-17:01:36 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-17:01:36 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-17:01:36 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-17:01:36 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-17:01:36 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-17:01:36 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 2(Integer)
2020/06/28-17:01:36 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-17:01:36 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-17:01:36 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-17:01:36 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-17:01:36 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-17:01:36 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-17:01:36 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-17:01:36 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-17:01:36 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 2(Integer)
2020/06/28-17:01:36 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-17:01:36 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-17:01:36 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-17:01:36 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-17:01:36 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-17:01:36 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-17:01:36 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-17:01:36 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-17:01:36 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 2(Integer)
2020/06/28-17:01:36 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-17:01:36 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-17:01:36 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-17:01:36 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-17:01:36 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-17:01:36 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-17:01:36 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-17:01:39 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- ==>  Preparing: select * from sj_order where HospitalID = ? order by OrderDate DESC limit 1; 
2020/06/28-17:01:39 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- ==> Parameters: 901600(String)
2020/06/28-17:01:39 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- <==      Total: 1
2020/06/28-17:01:39 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- ==>  Preparing: select * from sj_orderdetail sod, sj_order so where GoodsID in ( ? , ? , ? ) and sod.OrderNo = so.OrderNo and so.OrderState >= 1 order by OrderDate limit 1 
2020/06/28-17:01:39 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- ==> Parameters: 2(Integer), 1(Integer), 3(Integer)
2020/06/28-17:01:39 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- <==      Total: 1
2020/06/28-17:01:40 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- ==>  Preparing: select * from sj_secondleavestocklistdetail where HospitalID = ? and GoodsID in ( ? , ? , ? ) and now() >= DATE_SUB(CURDATE(), INTERVAL 12 month) 
2020/06/28-17:01:40 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- ==> Parameters: 901600(String), 2(Integer), 1(Integer), 3(Integer)
2020/06/28-17:01:40 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- <==      Total: 1
2020/06/28-17:01:40 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==>  Preparing: select * from sj_warehousesecond where GoodsID = ? and HospitalID = ? 
2020/06/28-17:01:40 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==> Parameters: 2(Integer), 901600(String)
2020/06/28-17:01:40 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- <==      Total: 1
2020/06/28-17:01:40 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==>  Preparing: select * from sj_warehousesecond where GoodsID = ? and HospitalID = ? 
2020/06/28-17:01:40 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==> Parameters: 1(Integer), 901600(String)
2020/06/28-17:01:40 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- <==      Total: 1
2020/06/28-17:01:40 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==>  Preparing: select * from sj_warehousesecond where GoodsID = ? and HospitalID = ? 
2020/06/28-17:01:40 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==> Parameters: 3(Integer), 901600(String)
2020/06/28-17:01:40 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- <==      Total: 1
2020/06/28-17:01:45 [http-nio-8084-exec-2] ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]- Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Handler dispatch failed; nested exception is java.lang.NoClassDefFoundError: com/fasterxml/jackson/databind/exc/InvalidDefinitionException] with root cause
java.lang.ClassNotFoundException: com.fasterxml.jackson.databind.exc.InvalidDefinitionException
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382) ~[na:1.8.0_231]
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418) ~[na:1.8.0_231]
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:355) ~[na:1.8.0_231]
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351) ~[na:1.8.0_231]
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:239) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.read(AbstractJackson2HttpMessageConverter.java:227) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodArgumentResolver.readWithMessageConverters(AbstractMessageConverterMethodArgumentResolver.java:205) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.readWithMessageConverters(RequestResponseBodyMethodProcessor.java:158) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:131) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:121) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:167) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_231]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_231]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_231]
2020/06/28-17:03:00 [main] INFO  com.huijian.rac.RacOrderServiceApplication- No active profile set, falling back to default profiles: default
2020/06/28-17:03:00 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Multiple Spring Data modules found, entering strict repository configuration mode!
2020/06/28-17:03:00 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020/06/28-17:03:00 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Finished Spring Data repository scanning in 14ms. Found 0 Redis repository interfaces.
2020/06/28-17:03:00 [main] INFO  org.springframework.cloud.context.scope.GenericScope- BeanFactory id=2c90678a-245b-3649-9a10-8600ba52bc1b
2020/06/28-17:03:00 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/28-17:03:00 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/28-17:03:00 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat initialized with port(s): 8084 (http)
2020/06/28-17:03:00 [main] INFO  org.apache.catalina.core.StandardService- Starting service [Tomcat]
2020/06/28-17:03:00 [main] INFO  org.apache.catalina.core.StandardEngine- Starting Servlet engine: [Apache Tomcat/9.0.29]
2020/06/28-17:03:01 [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]- Initializing Spring embedded WebApplicationContext
2020/06/28-17:03:01 [main] INFO  org.springframework.web.context.ContextLoader- Root WebApplicationContext: initialization completed in 1053 ms
2020/06/28-17:03:01 [main] WARN  com.netflix.config.sources.URLConfigurationSource- No URLs will be polled as dynamic configuration sources.
2020/06/28-17:03:01 [main] INFO  com.netflix.config.sources.URLConfigurationSource- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020/06/28-17:03:01 [main] WARN  com.netflix.config.sources.URLConfigurationSource- No URLs will be polled as dynamic configuration sources.
2020/06/28-17:03:01 [main] INFO  com.netflix.config.sources.URLConfigurationSource- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020/06/28-17:03:01 [main] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor- Initializing ExecutorService 'applicationTaskExecutor'
2020/06/28-17:03:02 [main] WARN  org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger- You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020/06/28-17:03:02 [main] WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger- Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020/06/28-17:03:02 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory- Setting initial instance status as: STARTING
2020/06/28-17:03:02 [main] INFO  com.netflix.discovery.DiscoveryClient- Initializing Eureka in region us-east-1
2020/06/28-17:03:03 [main] ERROR org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration- error getting CloudEurekaClient
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'scopedTarget.eurekaClient' defined in class path resource [org/springframework/cloud/netflix/eureka/EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.netflix.discovery.EurekaClient]: Factory method 'eurekaClient' threw exception; nested exception is java.lang.RuntimeException: Failed to initialize DiscoveryClient!
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:656) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:636) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1338) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:557) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:359) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:389) ~[spring-cloud-context-2.2.0.RELEASE.jar:2.2.0.RELEASE]
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:186) ~[spring-cloud-context-2.2.0.RELEASE.jar:2.2.0.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:356) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35) ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getTargetObject(EurekaRegistration.java:129) ~[spring-cloud-netflix-eureka-client-2.2.0.RELEASE.jar:2.2.0.RELEASE]
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getEurekaClient(EurekaRegistration.java:117) ~[spring-cloud-netflix-eureka-client-2.2.0.RELEASE.jar:2.2.0.RELEASE]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_231]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_231]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_231]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_231]
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:282) [spring-core-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:499) [spring-cloud-context-2.2.0.RELEASE.jar:2.2.0.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747) [spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689) [spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration$$EnhancerBySpringCGLIB$$ed9b81b4.getEurekaClient(<generated>) [spring-cloud-netflix-eureka-client-2.2.0.RELEASE.jar:2.2.0.RELEASE]
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.maybeInitializeClient(EurekaServiceRegistry.java:57) [spring-cloud-netflix-eureka-client-2.2.0.RELEASE.jar:2.2.0.RELEASE]
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:38) [spring-cloud-netflix-eureka-client-2.2.0.RELEASE.jar:2.2.0.RELEASE]
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.start(EurekaAutoServiceRegistration.java:83) [spring-cloud-netflix-eureka-client-2.2.0.RELEASE.jar:2.2.0.RELEASE]
	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:182) [spring-context-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.context.support.DefaultLifecycleProcessor.access$200(DefaultLifecycleProcessor.java:53) [spring-context-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:360) [spring-context-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:158) [spring-context-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:122) [spring-context-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:894) [spring-context-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.finishRefresh(ServletWebServerApplicationContext.java:162) [spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:553) [spring-context-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141) [spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747) [spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397) [spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315) [spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226) [spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215) [spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at com.huijian.rac.RacOrderServiceApplication.main(RacOrderServiceApplication.java:14) [classes/:na]
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.netflix.discovery.EurekaClient]: Factory method 'eurekaClient' threw exception; nested exception is java.lang.RuntimeException: Failed to initialize DiscoveryClient!
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:651) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	... 41 common frames omitted
Caused by: java.lang.RuntimeException: Failed to initialize DiscoveryClient!
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:427) ~[eureka-client-1.9.13.jar:1.9.13]
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:276) ~[eureka-client-1.9.13.jar:1.9.13]
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:272) ~[eureka-client-1.9.13.jar:1.9.13]
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:67) ~[spring-cloud-netflix-eureka-client-2.2.0.RELEASE.jar:2.2.0.RELEASE]
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:324) ~[spring-cloud-netflix-eureka-client-2.2.0.RELEASE.jar:2.2.0.RELEASE]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_231]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_231]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_231]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_231]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	... 42 common frames omitted
Caused by: java.lang.NoClassDefFoundError: com/fasterxml/jackson/core/Version
	at com.netflix.discovery.converters.EurekaJacksonCodec.<clinit>(EurekaJacksonCodec.java:65) ~[eureka-client-1.9.13.jar:1.9.13]
	at com.netflix.discovery.converters.wrappers.CodecWrappers$LegacyJacksonJson.<init>(CodecWrappers.java:285) ~[eureka-client-1.9.13.jar:1.9.13]
	at com.netflix.discovery.converters.wrappers.CodecWrappers.create(CodecWrappers.java:125) ~[eureka-client-1.9.13.jar:1.9.13]
	at com.netflix.discovery.converters.wrappers.CodecWrappers.getEncoder(CodecWrappers.java:75) ~[eureka-client-1.9.13.jar:1.9.13]
	at com.netflix.discovery.converters.wrappers.CodecWrappers.getEncoder(CodecWrappers.java:66) ~[eureka-client-1.9.13.jar:1.9.13]
	at com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:68) ~[eureka-client-1.9.13.jar:1.9.13]
	at com.netflix.discovery.shared.transport.jersey.EurekaJerseyClientImpl$EurekaJerseyClientBuilder$MyDefaultApacheHttpClient4Config.<init>(EurekaJerseyClientImpl.java:202) ~[eureka-client-1.9.13.jar:1.9.13]
	at com.netflix.discovery.shared.transport.jersey.EurekaJerseyClientImpl$EurekaJerseyClientBuilder.build(EurekaJerseyClientImpl.java:178) ~[eureka-client-1.9.13.jar:1.9.13]
	at com.netflix.discovery.shared.transport.jersey.JerseyEurekaHttpClientFactory$JerseyEurekaHttpClientFactoryBuilder.buildLegacy(JerseyEurekaHttpClientFactory.java:230) ~[eureka-client-1.9.13.jar:1.9.13]
	at com.netflix.discovery.shared.transport.jersey.JerseyEurekaHttpClientFactory$JerseyEurekaHttpClientFactoryBuilder.build(JerseyEurekaHttpClientFactory.java:204) ~[eureka-client-1.9.13.jar:1.9.13]
	at com.netflix.discovery.shared.transport.jersey.JerseyEurekaHttpClientFactory.create(JerseyEurekaHttpClientFactory.java:161) ~[eureka-client-1.9.13.jar:1.9.13]
	at com.netflix.discovery.shared.transport.jersey.Jersey1TransportClientFactories.newTransportClientFactory(Jersey1TransportClientFactories.java:59) ~[eureka-client-1.9.13.jar:1.9.13]
	at com.netflix.discovery.DiscoveryClient.scheduleServerEndpointTask(DiscoveryClient.java:501) ~[eureka-client-1.9.13.jar:1.9.13]
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:414) ~[eureka-client-1.9.13.jar:1.9.13]
	... 51 common frames omitted
Caused by: java.lang.ClassNotFoundException: com.fasterxml.jackson.core.Version
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382) ~[na:1.8.0_231]
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418) ~[na:1.8.0_231]
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:355) ~[na:1.8.0_231]
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351) ~[na:1.8.0_231]
	... 65 common frames omitted
2020/06/28-17:03:03 [main] WARN  org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext- Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Failed to start bean 'eurekaAutoServiceRegistration'; nested exception is java.lang.NullPointerException
2020/06/28-17:03:03 [main] INFO  org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer- Shutdown ignored - container is not active already
2020/06/28-17:03:03 [main] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor- Shutting down ExecutorService 'applicationTaskExecutor'
2020/06/28-17:03:03 [main] INFO  org.apache.catalina.core.StandardService- Stopping service [Tomcat]
2020/06/28-17:03:03 [main] INFO  org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener- 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020/06/28-17:03:03 [main] ERROR org.springframework.boot.SpringApplication- Application run failed
org.springframework.context.ApplicationContextException: Failed to start bean 'eurekaAutoServiceRegistration'; nested exception is java.lang.NullPointerException
	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:185) ~[spring-context-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.context.support.DefaultLifecycleProcessor.access$200(DefaultLifecycleProcessor.java:53) ~[spring-context-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:360) ~[spring-context-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:158) ~[spring-context-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:122) ~[spring-context-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:894) ~[spring-context-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.finishRefresh(ServletWebServerApplicationContext.java:162) ~[spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:553) ~[spring-context-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141) ~[spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747) [spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397) [spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315) [spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226) [spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215) [spring-boot-2.2.2.RELEASE.jar:2.2.2.RELEASE]
	at com.huijian.rac.RacOrderServiceApplication.main(RacOrderServiceApplication.java:14) [classes/:na]
Caused by: java.lang.NullPointerException: null
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.maybeInitializeClient(EurekaServiceRegistry.java:57) ~[spring-cloud-netflix-eureka-client-2.2.0.RELEASE.jar:2.2.0.RELEASE]
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:38) ~[spring-cloud-netflix-eureka-client-2.2.0.RELEASE.jar:2.2.0.RELEASE]
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.start(EurekaAutoServiceRegistration.java:83) ~[spring-cloud-netflix-eureka-client-2.2.0.RELEASE.jar:2.2.0.RELEASE]
	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:182) ~[spring-context-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	... 14 common frames omitted
2020/06/28-17:04:45 [main] INFO  com.huijian.rac.RacOrderServiceApplication- No active profile set, falling back to default profiles: default
2020/06/28-17:04:45 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Multiple Spring Data modules found, entering strict repository configuration mode!
2020/06/28-17:04:45 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020/06/28-17:04:45 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Finished Spring Data repository scanning in 14ms. Found 0 Redis repository interfaces.
2020/06/28-17:04:46 [main] INFO  org.springframework.cloud.context.scope.GenericScope- BeanFactory id=f3f23537-6900-3ad0-88d5-cec7769c130c
2020/06/28-17:04:46 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/28-17:04:46 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/28-17:04:46 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat initialized with port(s): 8084 (http)
2020/06/28-17:04:46 [main] INFO  org.apache.catalina.core.StandardService- Starting service [Tomcat]
2020/06/28-17:04:46 [main] INFO  org.apache.catalina.core.StandardEngine- Starting Servlet engine: [Apache Tomcat/9.0.29]
2020/06/28-17:04:46 [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]- Initializing Spring embedded WebApplicationContext
2020/06/28-17:04:46 [main] INFO  org.springframework.web.context.ContextLoader- Root WebApplicationContext: initialization completed in 990 ms
2020/06/28-17:04:46 [main] WARN  com.netflix.config.sources.URLConfigurationSource- No URLs will be polled as dynamic configuration sources.
2020/06/28-17:04:46 [main] INFO  com.netflix.config.sources.URLConfigurationSource- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020/06/28-17:04:46 [main] WARN  com.netflix.config.sources.URLConfigurationSource- No URLs will be polled as dynamic configuration sources.
2020/06/28-17:04:46 [main] INFO  com.netflix.config.sources.URLConfigurationSource- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020/06/28-17:04:46 [main] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor- Initializing ExecutorService 'applicationTaskExecutor'
2020/06/28-17:04:48 [main] WARN  org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger- You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020/06/28-17:04:48 [main] WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger- Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020/06/28-17:04:48 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory- Setting initial instance status as: STARTING
2020/06/28-17:04:48 [main] INFO  com.netflix.discovery.DiscoveryClient- Initializing Eureka in region us-east-1
2020/06/28-17:04:48 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using JSON encoding codec LegacyJacksonJson
2020/06/28-17:04:48 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using JSON decoding codec LegacyJacksonJson
2020/06/28-17:04:48 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using XML encoding codec XStreamXml
2020/06/28-17:04:48 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using XML decoding codec XStreamXml
2020/06/28-17:04:48 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-17:04:48 [main] INFO  com.netflix.discovery.DiscoveryClient- Disable delta property : false
2020/06/28-17:04:48 [main] INFO  com.netflix.discovery.DiscoveryClient- Single vip registry refresh property : null
2020/06/28-17:04:48 [main] INFO  com.netflix.discovery.DiscoveryClient- Force full registry fetch : false
2020/06/28-17:04:48 [main] INFO  com.netflix.discovery.DiscoveryClient- Application is null : false
2020/06/28-17:04:48 [main] INFO  com.netflix.discovery.DiscoveryClient- Registered Applications size is zero : true
2020/06/28-17:04:48 [main] INFO  com.netflix.discovery.DiscoveryClient- Application version is -1: true
2020/06/28-17:04:48 [main] INFO  com.netflix.discovery.DiscoveryClient- Getting all instance registry info from the eureka server
2020/06/28-17:04:49 [main] INFO  com.netflix.discovery.DiscoveryClient- The response status is 200
2020/06/28-17:04:49 [main] INFO  com.netflix.discovery.DiscoveryClient- Starting heartbeat executor: renew interval is: 30
2020/06/28-17:04:49 [main] INFO  com.netflix.discovery.InstanceInfoReplicator- InstanceInfoReplicator onDemand update allowed rate per min is 4
2020/06/28-17:04:49 [main] INFO  com.netflix.discovery.DiscoveryClient- Discovery Client initialized at timestamp 1593335089060 with initial instances count: 2
2020/06/28-17:04:49 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry- Registering application RAC-ORDER-SERVICE with eureka with status UP
2020/06/28-17:04:49 [main] INFO  com.netflix.discovery.DiscoveryClient- Saw local status change event StatusChangeEvent [timestamp=1593335089062, current=UP, previous=STARTING]
2020/06/28-17:04:49 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-ORDER-SERVICE/MSI.mshome.net:rac-order-service:8084: registering service...
2020/06/28-17:04:49 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Attempting to connect to: [192.168.161.129:5672]
2020/06/28-17:04:49 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Created new connection: rabbitConnectionFactory#352c44a8:0/SimpleConnection@1570cad0 [delegate=amqp://admin@192.168.161.129:5672/, localPort= 58391]
2020/06/28-17:04:49 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-ORDER-SERVICE/MSI.mshome.net:rac-order-service:8084 - registration status: 204
2020/06/28-17:04:49 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat started on port(s): 8084 (http) with context path ''
2020/06/28-17:04:49 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration- Updating port to 8084
2020/06/28-17:04:49 [main] INFO  com.huijian.rac.RacOrderServiceApplication- Started RacOrderServiceApplication in 5.279 seconds (JVM running for 6.079)
2020/06/28-17:04:57 [main] INFO  com.huijian.rac.RacStockServiceApplication- No active profile set, falling back to default profiles: default
2020/06/28-17:04:58 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Multiple Spring Data modules found, entering strict repository configuration mode!
2020/06/28-17:04:58 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Bootstrapping Spring Data repositories in DEFAULT mode.
2020/06/28-17:04:58 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Finished Spring Data repository scanning in 33ms. Found 0 repository interfaces.
2020/06/28-17:04:58 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'deliveryUnitMapper' and 'com.huijian.rac.mapper.DeliveryUnitMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-17:04:58 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'departMapper' and 'com.huijian.rac.mapper.DepartMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-17:04:58 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'discardDetailMapper' and 'com.huijian.rac.mapper.DiscardDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-17:04:58 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'discardMapper' and 'com.huijian.rac.mapper.DiscardMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-17:04:58 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsDictionaryMapper' and 'com.huijian.rac.mapper.GoodsDictionaryMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-17:04:58 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsRecordMapper' and 'com.huijian.rac.mapper.GoodsRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-17:04:58 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsSupplierMapper' and 'com.huijian.rac.mapper.GoodsSupplierMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-17:04:58 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'leaveStockListDetailMapper' and 'com.huijian.rac.mapper.LeaveStockListDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-17:04:58 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'materialMapper' and 'com.huijian.rac.mapper.MaterialMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-17:04:58 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'outboundRecordMapper' and 'com.huijian.rac.mapper.OutboundRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-17:04:58 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'outboundSecondRecordMapper' and 'com.huijian.rac.mapper.OutboundSecondRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-17:04:58 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'reagentMapper' and 'com.huijian.rac.mapper.ReagentMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-17:04:58 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'returnGoodsDetailMapper' and 'com.huijian.rac.mapper.ReturnGoodsDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-17:04:58 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'returnGoodsMapper' and 'com.huijian.rac.mapper.ReturnGoodsMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-17:04:58 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'secondGoodsRecordMapper' and 'com.huijian.rac.mapper.SecondGoodsRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-17:04:58 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'secondLeaveStockListDetailMapper' and 'com.huijian.rac.mapper.SecondLeaveStockListDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-17:04:58 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'unitMapper' and 'com.huijian.rac.mapper.UnitMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-17:04:58 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseMapper' and 'com.huijian.rac.mapper.WarehouseMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-17:04:58 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseRecordMapper' and 'com.huijian.rac.mapper.WarehouseRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-17:04:58 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseSecondMapper' and 'com.huijian.rac.mapper.WarehouseSecondMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-17:04:58 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseSecondRecordMapper' and 'com.huijian.rac.mapper.WarehouseSecondRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-17:04:58 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'departsMapper' and 'com.huijian.rac.mapper.DepartsMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-17:04:58 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsPackageDetailMapper' and 'com.huijian.rac.mapper.GoodsPackageDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-17:04:58 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsPackageMapper' and 'com.huijian.rac.mapper.GoodsPackageMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-17:04:58 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'hospitalMapper' and 'com.huijian.rac.mapper.HospitalMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-17:04:58 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'leaveStockListSecondMapper' and 'com.huijian.rac.mapper.LeaveStockListSecondMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-17:04:58 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderDetailMapper' and 'com.huijian.rac.mapper.OrderDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-17:04:58 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderMapper' and 'com.huijian.rac.mapper.OrderMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-17:04:58 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderOperateMapper' and 'com.huijian.rac.mapper.OrderOperateMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-17:04:58 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderReturnDetailMapper' and 'com.huijian.rac.mapper.OrderReturnDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-17:04:58 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderReturnMapper' and 'com.huijian.rac.mapper.OrderReturnMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-17:04:58 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderReviewMapper' and 'com.huijian.rac.mapper.OrderReviewMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-17:04:58 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- No MyBatis mapper was found in '[com.huijian.rac.mapper]' package. Please check your configuration.
2020/06/28-17:04:59 [main] INFO  org.springframework.cloud.context.scope.GenericScope- BeanFactory id=b2907805-f796-3a2c-9729-4f51ea31ae6e
2020/06/28-17:04:59 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/28-17:04:59 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'redisConfig' of type [com.huijian.rac.config.RedisConfig$$EnhancerBySpringCGLIB$$244bc3e4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/28-17:04:59 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/28-17:04:59 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat initialized with port(s): 8083 (http)
2020/06/28-17:04:59 [main] INFO  org.apache.catalina.core.StandardService- Starting service [Tomcat]
2020/06/28-17:04:59 [main] INFO  org.apache.catalina.core.StandardEngine- Starting Servlet engine: [Apache Tomcat/9.0.27]
2020/06/28-17:04:59 [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]- Initializing Spring embedded WebApplicationContext
2020/06/28-17:04:59 [main] INFO  org.springframework.web.context.ContextLoader- Root WebApplicationContext: initialization completed in 1629 ms
2020/06/28-17:05:00 [main] WARN  com.netflix.config.sources.URLConfigurationSource- No URLs will be polled as dynamic configuration sources.
2020/06/28-17:05:00 [main] INFO  com.netflix.config.sources.URLConfigurationSource- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020/06/28-17:05:00 [main] WARN  com.netflix.config.sources.URLConfigurationSource- No URLs will be polled as dynamic configuration sources.
2020/06/28-17:05:00 [main] INFO  com.netflix.config.sources.URLConfigurationSource- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020/06/28-17:05:00 [main] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor- Initializing ExecutorService 'applicationTaskExecutor'
2020/06/28-17:05:01 [main] WARN  org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger- You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020/06/28-17:05:01 [main] WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger- Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020/06/28-17:05:02 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory- Setting initial instance status as: STARTING
2020/06/28-17:05:02 [main] INFO  com.netflix.discovery.DiscoveryClient- Initializing Eureka in region us-east-1
2020/06/28-17:05:02 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using JSON encoding codec LegacyJacksonJson
2020/06/28-17:05:02 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using JSON decoding codec LegacyJacksonJson
2020/06/28-17:05:02 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using XML encoding codec XStreamXml
2020/06/28-17:05:02 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using XML decoding codec XStreamXml
2020/06/28-17:05:02 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-17:05:02 [main] INFO  com.netflix.discovery.DiscoveryClient- Disable delta property : false
2020/06/28-17:05:02 [main] INFO  com.netflix.discovery.DiscoveryClient- Single vip registry refresh property : null
2020/06/28-17:05:02 [main] INFO  com.netflix.discovery.DiscoveryClient- Force full registry fetch : false
2020/06/28-17:05:02 [main] INFO  com.netflix.discovery.DiscoveryClient- Application is null : false
2020/06/28-17:05:02 [main] INFO  com.netflix.discovery.DiscoveryClient- Registered Applications size is zero : true
2020/06/28-17:05:02 [main] INFO  com.netflix.discovery.DiscoveryClient- Application version is -1: true
2020/06/28-17:05:02 [main] INFO  com.netflix.discovery.DiscoveryClient- Getting all instance registry info from the eureka server
2020/06/28-17:05:02 [main] INFO  com.netflix.discovery.DiscoveryClient- The response status is 200
2020/06/28-17:05:02 [main] INFO  com.netflix.discovery.DiscoveryClient- Starting heartbeat executor: renew interval is: 30
2020/06/28-17:05:02 [main] INFO  com.netflix.discovery.InstanceInfoReplicator- InstanceInfoReplicator onDemand update allowed rate per min is 4
2020/06/28-17:05:02 [main] INFO  com.netflix.discovery.DiscoveryClient- Discovery Client initialized at timestamp 1593335102940 with initial instances count: 2
2020/06/28-17:05:02 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry- Registering application RAC-STOCK-SERVICE with eureka with status UP
2020/06/28-17:05:02 [main] INFO  com.netflix.discovery.DiscoveryClient- Saw local status change event StatusChangeEvent [timestamp=1593335102943, current=UP, previous=STARTING]
2020/06/28-17:05:02 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-STOCK-SERVICE/MSI.mshome.net:rac-stock-service:8083: registering service...
2020/06/28-17:05:02 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Attempting to connect to: [192.168.161.129:5672]
2020/06/28-17:05:02 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Created new connection: rabbitConnectionFactory#3fd05b3e:0/SimpleConnection@5c0e2ec [delegate=amqp://admin@192.168.161.129:5672/, localPort= 58428]
2020/06/28-17:05:02 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-STOCK-SERVICE/MSI.mshome.net:rac-stock-service:8083 - registration status: 204
2020/06/28-17:05:03 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat started on port(s): 8083 (http) with context path ''
2020/06/28-17:05:03 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration- Updating port to 8083
2020/06/28-17:05:03 [main] INFO  com.huijian.rac.RacStockServiceApplication- Started RacStockServiceApplication in 6.729 seconds (JVM running for 7.454)
2020/06/28-17:05:17 [http-nio-8084-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]- Initializing Spring DispatcherServlet 'dispatcherServlet'
2020/06/28-17:05:17 [http-nio-8084-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet- Initializing Servlet 'dispatcherServlet'
2020/06/28-17:05:17 [http-nio-8083-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]- Initializing Spring DispatcherServlet 'dispatcherServlet'
2020/06/28-17:05:17 [http-nio-8083-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet- Initializing Servlet 'dispatcherServlet'
2020/06/28-17:05:17 [http-nio-8084-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet- Completed initialization in 7 ms
2020/06/28-17:05:17 [http-nio-8083-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet- Completed initialization in 7 ms
2020/06/28-17:05:17 [http-nio-8084-exec-1] INFO  com.zaxxer.hikari.HikariDataSource- HikariPool-1 - Starting...
2020/06/28-17:05:18 [http-nio-8084-exec-1] INFO  com.zaxxer.hikari.HikariDataSource- HikariPool-1 - Start completed.
2020/06/28-17:05:18 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==>  Preparing: select * from pub_depart where HOSPITALID=? 
2020/06/28-17:05:18 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==> Parameters: 901600(String)
2020/06/28-17:05:18 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- <==      Total: 22
2020/06/28-17:05:18 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==>  Preparing: select count(*) from sj_order where YEAR(OrderDate)=YEAR(NOW()); 
2020/06/28-17:05:18 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==> Parameters: 
2020/06/28-17:05:18 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- <==      Total: 1
2020/06/28-17:05:28 [http-nio-8083-exec-2] INFO  io.lettuce.core.EpollProvider- Starting without optional epoll library
2020/06/28-17:05:28 [http-nio-8083-exec-2] INFO  io.lettuce.core.KqueueProvider- Starting without optional kqueue library
2020/06/28-17:05:32 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- ==>  Preparing: select * from sj_order where HospitalID = ? order by OrderDate DESC limit 1; 
2020/06/28-17:05:32 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- ==> Parameters: 901600(String)
2020/06/28-17:05:32 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- <==      Total: 1
2020/06/28-17:05:32 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- ==>  Preparing: select * from sj_orderdetail sod, sj_order so where GoodsID in ( ? , ? , ? ) and sod.OrderNo = so.OrderNo and so.OrderState >= 1 order by OrderDate limit 1 
2020/06/28-17:05:32 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- ==> Parameters: 1(Integer), 2(Integer), 3(Integer)
2020/06/28-17:05:32 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- <==      Total: 1
2020/06/28-17:05:32 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- ==>  Preparing: select * from sj_secondleavestocklistdetail where HospitalID = ? and GoodsID in ( ? , ? , ? ) and now() >= DATE_SUB(CURDATE(), INTERVAL 12 month) 
2020/06/28-17:05:32 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- ==> Parameters: 901600(String), 1(Integer), 2(Integer), 3(Integer)
2020/06/28-17:05:32 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- <==      Total: 1
2020/06/28-17:05:32 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==>  Preparing: select * from sj_warehousesecond where GoodsID = ? and HospitalID = ? 
2020/06/28-17:05:32 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==> Parameters: 1(Integer), 901600(String)
2020/06/28-17:05:32 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- <==      Total: 1
2020/06/28-17:05:32 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==>  Preparing: select * from sj_warehousesecond where GoodsID = ? and HospitalID = ? 
2020/06/28-17:05:32 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==> Parameters: 2(Integer), 901600(String)
2020/06/28-17:05:32 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- <==      Total: 1
2020/06/28-17:05:32 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==>  Preparing: select * from sj_warehousesecond where GoodsID = ? and HospitalID = ? 
2020/06/28-17:05:32 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==> Parameters: 3(Integer), 901600(String)
2020/06/28-17:05:32 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- <==      Total: 1
2020/06/28-17:06:18 [http-nio-8084-exec-6] WARN  org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver- Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize instance of `java.lang.Integer` out of START_OBJECT token; nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize instance of `java.lang.Integer` out of START_OBJECT token
 at [Source: (PushbackInputStream); line: 1, column: 527] (through reference chain: com.huijian.rac.bean.Order["list"]->java.util.ArrayList[0]->com.huijian.rac.bean.OrderDetail["lastOrderQuantity"])]
2020/06/28-17:07:06 [main] INFO  com.huijian.rac.RacStockServiceApplication- No active profile set, falling back to default profiles: default
2020/06/28-17:07:06 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Multiple Spring Data modules found, entering strict repository configuration mode!
2020/06/28-17:07:06 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Bootstrapping Spring Data repositories in DEFAULT mode.
2020/06/28-17:07:06 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Finished Spring Data repository scanning in 21ms. Found 0 repository interfaces.
2020/06/28-17:07:06 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'deliveryUnitMapper' and 'com.huijian.rac.mapper.DeliveryUnitMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-17:07:06 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'departMapper' and 'com.huijian.rac.mapper.DepartMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-17:07:06 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'discardDetailMapper' and 'com.huijian.rac.mapper.DiscardDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-17:07:06 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'discardMapper' and 'com.huijian.rac.mapper.DiscardMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-17:07:06 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsDictionaryMapper' and 'com.huijian.rac.mapper.GoodsDictionaryMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-17:07:06 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsRecordMapper' and 'com.huijian.rac.mapper.GoodsRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-17:07:06 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsSupplierMapper' and 'com.huijian.rac.mapper.GoodsSupplierMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-17:07:06 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'leaveStockListDetailMapper' and 'com.huijian.rac.mapper.LeaveStockListDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-17:07:06 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'materialMapper' and 'com.huijian.rac.mapper.MaterialMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-17:07:06 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'outboundRecordMapper' and 'com.huijian.rac.mapper.OutboundRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-17:07:06 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'outboundSecondRecordMapper' and 'com.huijian.rac.mapper.OutboundSecondRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-17:07:06 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'reagentMapper' and 'com.huijian.rac.mapper.ReagentMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-17:07:06 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'returnGoodsDetailMapper' and 'com.huijian.rac.mapper.ReturnGoodsDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-17:07:06 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'returnGoodsMapper' and 'com.huijian.rac.mapper.ReturnGoodsMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-17:07:06 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'secondGoodsRecordMapper' and 'com.huijian.rac.mapper.SecondGoodsRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-17:07:06 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'secondLeaveStockListDetailMapper' and 'com.huijian.rac.mapper.SecondLeaveStockListDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-17:07:06 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'unitMapper' and 'com.huijian.rac.mapper.UnitMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-17:07:06 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseMapper' and 'com.huijian.rac.mapper.WarehouseMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-17:07:06 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseRecordMapper' and 'com.huijian.rac.mapper.WarehouseRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-17:07:06 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseSecondMapper' and 'com.huijian.rac.mapper.WarehouseSecondMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-17:07:06 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseSecondRecordMapper' and 'com.huijian.rac.mapper.WarehouseSecondRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-17:07:06 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'departsMapper' and 'com.huijian.rac.mapper.DepartsMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-17:07:06 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsPackageDetailMapper' and 'com.huijian.rac.mapper.GoodsPackageDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-17:07:06 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsPackageMapper' and 'com.huijian.rac.mapper.GoodsPackageMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-17:07:06 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'hospitalMapper' and 'com.huijian.rac.mapper.HospitalMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-17:07:06 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'leaveStockListSecondMapper' and 'com.huijian.rac.mapper.LeaveStockListSecondMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-17:07:06 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderDetailMapper' and 'com.huijian.rac.mapper.OrderDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-17:07:06 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderMapper' and 'com.huijian.rac.mapper.OrderMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-17:07:06 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderOperateMapper' and 'com.huijian.rac.mapper.OrderOperateMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-17:07:06 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderReturnDetailMapper' and 'com.huijian.rac.mapper.OrderReturnDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-17:07:06 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderReturnMapper' and 'com.huijian.rac.mapper.OrderReturnMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-17:07:06 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderReviewMapper' and 'com.huijian.rac.mapper.OrderReviewMapper' mapperInterface. Bean already defined with the same name!
2020/06/28-17:07:06 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- No MyBatis mapper was found in '[com.huijian.rac.mapper]' package. Please check your configuration.
2020/06/28-17:07:07 [main] INFO  org.springframework.cloud.context.scope.GenericScope- BeanFactory id=b2907805-f796-3a2c-9729-4f51ea31ae6e
2020/06/28-17:07:07 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/28-17:07:07 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'redisConfig' of type [com.huijian.rac.config.RedisConfig$$EnhancerBySpringCGLIB$$86c44352] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/28-17:07:07 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/28-17:07:07 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat initialized with port(s): 8083 (http)
2020/06/28-17:07:07 [main] INFO  org.apache.catalina.core.StandardService- Starting service [Tomcat]
2020/06/28-17:07:07 [main] INFO  org.apache.catalina.core.StandardEngine- Starting Servlet engine: [Apache Tomcat/9.0.27]
2020/06/28-17:07:07 [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]- Initializing Spring embedded WebApplicationContext
2020/06/28-17:07:07 [main] INFO  org.springframework.web.context.ContextLoader- Root WebApplicationContext: initialization completed in 1421 ms
2020/06/28-17:07:08 [main] WARN  com.netflix.config.sources.URLConfigurationSource- No URLs will be polled as dynamic configuration sources.
2020/06/28-17:07:08 [main] INFO  com.netflix.config.sources.URLConfigurationSource- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020/06/28-17:07:08 [main] WARN  com.netflix.config.sources.URLConfigurationSource- No URLs will be polled as dynamic configuration sources.
2020/06/28-17:07:08 [main] INFO  com.netflix.config.sources.URLConfigurationSource- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020/06/28-17:07:08 [main] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor- Initializing ExecutorService 'applicationTaskExecutor'
2020/06/28-17:07:09 [main] WARN  org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger- You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020/06/28-17:07:09 [main] WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger- Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020/06/28-17:07:09 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory- Setting initial instance status as: STARTING
2020/06/28-17:07:09 [main] INFO  com.netflix.discovery.DiscoveryClient- Initializing Eureka in region us-east-1
2020/06/28-17:07:10 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using JSON encoding codec LegacyJacksonJson
2020/06/28-17:07:10 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using JSON decoding codec LegacyJacksonJson
2020/06/28-17:07:10 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using XML encoding codec XStreamXml
2020/06/28-17:07:10 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using XML decoding codec XStreamXml
2020/06/28-17:07:10 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-17:07:10 [main] INFO  com.netflix.discovery.DiscoveryClient- Disable delta property : false
2020/06/28-17:07:10 [main] INFO  com.netflix.discovery.DiscoveryClient- Single vip registry refresh property : null
2020/06/28-17:07:10 [main] INFO  com.netflix.discovery.DiscoveryClient- Force full registry fetch : false
2020/06/28-17:07:10 [main] INFO  com.netflix.discovery.DiscoveryClient- Application is null : false
2020/06/28-17:07:10 [main] INFO  com.netflix.discovery.DiscoveryClient- Registered Applications size is zero : true
2020/06/28-17:07:10 [main] INFO  com.netflix.discovery.DiscoveryClient- Application version is -1: true
2020/06/28-17:07:10 [main] INFO  com.netflix.discovery.DiscoveryClient- Getting all instance registry info from the eureka server
2020/06/28-17:07:10 [main] INFO  com.netflix.discovery.DiscoveryClient- The response status is 200
2020/06/28-17:07:10 [main] INFO  com.netflix.discovery.DiscoveryClient- Starting heartbeat executor: renew interval is: 30
2020/06/28-17:07:10 [main] INFO  com.netflix.discovery.InstanceInfoReplicator- InstanceInfoReplicator onDemand update allowed rate per min is 4
2020/06/28-17:07:10 [main] INFO  com.netflix.discovery.DiscoveryClient- Discovery Client initialized at timestamp 1593335230734 with initial instances count: 2
2020/06/28-17:07:10 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry- Registering application RAC-STOCK-SERVICE with eureka with status UP
2020/06/28-17:07:10 [main] INFO  com.netflix.discovery.DiscoveryClient- Saw local status change event StatusChangeEvent [timestamp=1593335230737, current=UP, previous=STARTING]
2020/06/28-17:07:10 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-STOCK-SERVICE/MSI.mshome.net:rac-stock-service:8083: registering service...
2020/06/28-17:07:10 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Attempting to connect to: [192.168.161.129:5672]
2020/06/28-17:07:10 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Created new connection: rabbitConnectionFactory#4e4894d:0/SimpleConnection@8beb0dd [delegate=amqp://admin@192.168.161.129:5672/, localPort= 58672]
2020/06/28-17:07:10 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-STOCK-SERVICE/MSI.mshome.net:rac-stock-service:8083 - registration status: 204
2020/06/28-17:07:10 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat started on port(s): 8083 (http) with context path ''
2020/06/28-17:07:10 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration- Updating port to 8083
2020/06/28-17:07:11 [main] INFO  com.huijian.rac.RacStockServiceApplication- Started RacStockServiceApplication in 6.238 seconds (JVM running for 7.48)
2020/06/28-17:07:15 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==>  Preparing: select * from pub_depart where HOSPITALID=? 
2020/06/28-17:07:15 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==> Parameters: 901600(String)
2020/06/28-17:07:15 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==>  Preparing: SELECT * from sj_order where OrderNo like concat('%',?,'%') and OrderDate >= ? and OrderDate < ? and OrderState != 0 order by OrderDate desc limit ?, ? 
2020/06/28-17:07:15 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-28 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/28-17:07:15 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- <==      Total: 0
2020/06/28-17:07:15 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- <==      Total: 22
2020/06/28-17:07:17 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==>  Preparing: select count(*) from sj_order where YEAR(OrderDate)=YEAR(NOW()); 
2020/06/28-17:07:17 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==> Parameters: 
2020/06/28-17:07:17 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- <==      Total: 1
2020/06/28-17:07:17 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==>  Preparing: select * from pub_depart where HOSPITALID=? 
2020/06/28-17:07:17 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==> Parameters: 901600(String)
2020/06/28-17:07:17 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- <==      Total: 22
2020/06/28-17:07:17 [http-nio-8083-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]- Initializing Spring DispatcherServlet 'dispatcherServlet'
2020/06/28-17:07:17 [http-nio-8083-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet- Initializing Servlet 'dispatcherServlet'
2020/06/28-17:07:17 [http-nio-8083-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet- Completed initialization in 10 ms
2020/06/28-17:07:19 [http-nio-8083-exec-2] INFO  io.lettuce.core.EpollProvider- Starting without optional epoll library
2020/06/28-17:07:19 [http-nio-8083-exec-2] INFO  io.lettuce.core.KqueueProvider- Starting without optional kqueue library
2020/06/28-17:07:24 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- ==>  Preparing: select * from sj_order where HospitalID = ? order by OrderDate DESC limit 1; 
2020/06/28-17:07:24 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- ==> Parameters: 901600(String)
2020/06/28-17:07:24 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- <==      Total: 1
2020/06/28-17:07:24 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- ==>  Preparing: select * from sj_orderdetail sod, sj_order so where GoodsID in ( ? , ? , ? ) and sod.OrderNo = so.OrderNo and so.OrderState >= 1 order by OrderDate limit 1 
2020/06/28-17:07:24 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- ==> Parameters: 1(Integer), 3(Integer), 2(Integer)
2020/06/28-17:07:24 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- <==      Total: 1
2020/06/28-17:07:24 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- ==>  Preparing: select * from sj_secondleavestocklistdetail where HospitalID = ? and GoodsID in ( ? , ? , ? ) and now() >= DATE_SUB(CURDATE(), INTERVAL 12 month) 
2020/06/28-17:07:24 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- ==> Parameters: 901600(String), 1(Integer), 3(Integer), 2(Integer)
2020/06/28-17:07:24 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- <==      Total: 1
2020/06/28-17:07:25 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==>  Preparing: select * from sj_warehousesecond where GoodsID = ? and HospitalID = ? 
2020/06/28-17:07:25 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==> Parameters: 1(Integer), 901600(String)
2020/06/28-17:07:25 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- <==      Total: 1
2020/06/28-17:07:25 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==>  Preparing: select * from sj_warehousesecond where GoodsID = ? and HospitalID = ? 
2020/06/28-17:07:25 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==> Parameters: 3(Integer), 901600(String)
2020/06/28-17:07:25 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- <==      Total: 1
2020/06/28-17:07:25 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==>  Preparing: select * from sj_warehousesecond where GoodsID = ? and HospitalID = ? 
2020/06/28-17:07:25 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==> Parameters: 2(Integer), 901600(String)
2020/06/28-17:07:25 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- <==      Total: 1
2020/06/28-17:09:48 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-17:11:03 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==>  Preparing: select count(*) from sj_order where YEAR(OrderDate)=YEAR(NOW()); 
2020/06/28-17:11:03 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==>  Preparing: select * from pub_depart where HOSPITALID=? 
2020/06/28-17:11:03 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==> Parameters: 
2020/06/28-17:11:03 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==> Parameters: 901600(String)
2020/06/28-17:11:03 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- <==      Total: 1
2020/06/28-17:11:03 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- <==      Total: 22
2020/06/28-17:11:06 [http-nio-8083-exec-4] INFO  com.zaxxer.hikari.HikariDataSource- HikariPool-1 - Starting...
2020/06/28-17:11:06 [http-nio-8083-exec-4] INFO  com.zaxxer.hikari.HikariDataSource- HikariPool-1 - Start completed.
2020/06/28-17:11:06 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- ==>  Preparing: select sg.*, su.UnitName from sj_goodsdictionary sg INNER join sj_unit su on GoodsName like concat('%',?,'%') and sg.UnitID = su.UnitID 
2020/06/28-17:11:06 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- ==> Parameters: ip(String)
2020/06/28-17:11:06 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- <==      Total: 1
2020/06/28-17:11:06 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/28-17:11:06 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/28-17:11:06 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/28-17:11:06 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/28-17:11:06 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 1(Integer), 901600(String)
2020/06/28-17:11:06 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/28-17:11:08 [http-nio-8083-exec-4] INFO  com.netflix.config.ChainedDynamicProperty- Flipping property: rac-order-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020/06/28-17:11:08 [http-nio-8083-exec-4] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer- Shutdown hook installed for: NFLoadBalancer-PingTimer-rac-order-service
2020/06/28-17:11:08 [http-nio-8083-exec-4] INFO  com.netflix.loadbalancer.BaseLoadBalancer- Client: rac-order-service instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=rac-order-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020/06/28-17:11:09 [http-nio-8083-exec-4] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer- Using serverListUpdater PollingServerListUpdater
2020/06/28-17:11:09 [http-nio-8083-exec-4] INFO  com.netflix.config.ChainedDynamicProperty- Flipping property: rac-order-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020/06/28-17:11:09 [http-nio-8083-exec-4] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer- DynamicServerListLoadBalancer for client rac-order-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=rac-order-service,current list of Servers=[MSI.mshome.net:8084],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:MSI.mshome.net:8084;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 GMT+08:00 1970;	First connection made: Thu Jan 01 08:00:00 GMT+08:00 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@6c723e85
2020/06/28-17:11:09 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- ==>  Preparing: select * from sj_order where HospitalID = ? order by OrderDate DESC limit 1; 
2020/06/28-17:11:09 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- ==> Parameters: 901600(String)
2020/06/28-17:11:09 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- <==      Total: 1
2020/06/28-17:11:09 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- ==>  Preparing: select * from sj_orderdetail sod, sj_order so where GoodsID in ( ? ) and sod.OrderNo = so.OrderNo and so.OrderState >= 1 order by OrderDate limit 1 
2020/06/28-17:11:09 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- ==> Parameters: 1(Integer)
2020/06/28-17:11:09 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- <==      Total: 1
2020/06/28-17:11:09 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- ==>  Preparing: select * from sj_secondleavestocklistdetail where HospitalID = ? and GoodsID in ( ? ) and now() >= DATE_SUB(CURDATE(), INTERVAL 12 month) 
2020/06/28-17:11:09 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- ==> Parameters: 901600(String), 1(Integer)
2020/06/28-17:11:09 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- <==      Total: 1
2020/06/28-17:11:10 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty- Flipping property: rac-order-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020/06/28-17:12:10 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-17:14:48 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-17:17:10 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-17:19:39 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==>  Preparing: select * from pub_depart where HOSPITALID=? 
2020/06/28-17:19:39 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==> Parameters: 901600(String)
2020/06/28-17:19:39 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==>  Preparing: SELECT * from sj_order where OrderNo like concat('%',?,'%') and OrderDate >= ? and OrderDate < ? and OrderState != 0 order by OrderDate desc limit ?, ? 
2020/06/28-17:19:39 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-28 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/28-17:19:40 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- <==      Total: 0
2020/06/28-17:19:40 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- <==      Total: 22
2020/06/28-17:19:41 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==>  Preparing: select count(*) from sj_order where YEAR(OrderDate)=YEAR(NOW()); 
2020/06/28-17:19:41 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==> Parameters: 
2020/06/28-17:19:41 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- <==      Total: 1
2020/06/28-17:19:42 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==>  Preparing: select * from pub_depart where HOSPITALID=? 
2020/06/28-17:19:42 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==> Parameters: 901600(String)
2020/06/28-17:19:42 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- <==      Total: 22
2020/06/28-17:19:46 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- ==>  Preparing: select * from sj_order where HospitalID = ? order by OrderDate DESC limit 1; 
2020/06/28-17:19:46 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- ==> Parameters: 901600(String)
2020/06/28-17:19:46 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- <==      Total: 1
2020/06/28-17:19:46 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- ==>  Preparing: select * from sj_orderdetail sod, sj_order so where GoodsID in ( ? , ? , ? ) and sod.OrderNo = so.OrderNo and so.OrderState >= 1 order by OrderDate limit 1 
2020/06/28-17:19:46 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- ==> Parameters: 1(Integer), 2(Integer), 3(Integer)
2020/06/28-17:19:46 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- <==      Total: 1
2020/06/28-17:19:46 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- ==>  Preparing: select * from sj_secondleavestocklistdetail where HospitalID = ? and GoodsID in ( ? , ? , ? ) and now() >= DATE_SUB(CURDATE(), INTERVAL 12 month) 
2020/06/28-17:19:46 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- ==> Parameters: 901600(String), 1(Integer), 2(Integer), 3(Integer)
2020/06/28-17:19:46 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- <==      Total: 1
2020/06/28-17:19:46 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==>  Preparing: select * from sj_warehousesecond where GoodsID = ? and HospitalID = ? 
2020/06/28-17:19:46 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==> Parameters: 1(Integer), 901600(String)
2020/06/28-17:19:46 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- <==      Total: 1
2020/06/28-17:19:46 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==>  Preparing: select * from sj_warehousesecond where GoodsID = ? and HospitalID = ? 
2020/06/28-17:19:46 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==> Parameters: 2(Integer), 901600(String)
2020/06/28-17:19:46 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- <==      Total: 1
2020/06/28-17:19:46 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==>  Preparing: select * from sj_warehousesecond where GoodsID = ? and HospitalID = ? 
2020/06/28-17:19:46 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==> Parameters: 3(Integer), 901600(String)
2020/06/28-17:19:46 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- <==      Total: 1
2020/06/28-17:19:48 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-17:20:39 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==>  Preparing: select * from pub_depart where HOSPITALID=? 
2020/06/28-17:20:39 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==>  Preparing: select count(*) from sj_order where YEAR(OrderDate)=YEAR(NOW()); 
2020/06/28-17:20:39 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==> Parameters: 
2020/06/28-17:20:39 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==> Parameters: 901600(String)
2020/06/28-17:20:39 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- <==      Total: 1
2020/06/28-17:20:39 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- <==      Total: 22
2020/06/28-17:20:44 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- ==>  Preparing: select * from sj_order where HospitalID = ? order by OrderDate DESC limit 1; 
2020/06/28-17:20:44 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- ==> Parameters: 901600(String)
2020/06/28-17:20:44 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- <==      Total: 1
2020/06/28-17:20:44 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- ==>  Preparing: select * from sj_orderdetail sod, sj_order so where GoodsID in ( ? , ? , ? ) and sod.OrderNo = so.OrderNo and so.OrderState >= 1 order by OrderDate limit 1 
2020/06/28-17:20:44 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- ==> Parameters: 1(Integer), 2(Integer), 3(Integer)
2020/06/28-17:20:44 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- <==      Total: 1
2020/06/28-17:20:44 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- ==>  Preparing: select * from sj_secondleavestocklistdetail where HospitalID = ? and GoodsID in ( ? , ? , ? ) and now() >= DATE_SUB(CURDATE(), INTERVAL 12 month) 
2020/06/28-17:20:44 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- ==> Parameters: 901600(String), 1(Integer), 2(Integer), 3(Integer)
2020/06/28-17:20:44 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- <==      Total: 1
2020/06/28-17:20:44 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==>  Preparing: select * from sj_warehousesecond where GoodsID = ? and HospitalID = ? 
2020/06/28-17:20:44 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==> Parameters: 1(Integer), 901600(String)
2020/06/28-17:20:44 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- <==      Total: 1
2020/06/28-17:20:44 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==>  Preparing: select * from sj_warehousesecond where GoodsID = ? and HospitalID = ? 
2020/06/28-17:20:44 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==> Parameters: 2(Integer), 901600(String)
2020/06/28-17:20:44 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- <==      Total: 1
2020/06/28-17:20:44 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==>  Preparing: select * from sj_warehousesecond where GoodsID = ? and HospitalID = ? 
2020/06/28-17:20:44 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==> Parameters: 3(Integer), 901600(String)
2020/06/28-17:20:44 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- <==      Total: 1
2020/06/28-17:21:34 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==>  Preparing: select count(*) from sj_order where YEAR(OrderDate)=YEAR(NOW()); 
2020/06/28-17:21:34 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==>  Preparing: select * from pub_depart where HOSPITALID=? 
2020/06/28-17:21:34 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==> Parameters: 
2020/06/28-17:21:34 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==> Parameters: 901600(String)
2020/06/28-17:21:34 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- <==      Total: 1
2020/06/28-17:21:34 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- <==      Total: 22
2020/06/28-17:21:39 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- ==>  Preparing: select * from sj_order where HospitalID = ? order by OrderDate DESC limit 1; 
2020/06/28-17:21:39 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- ==> Parameters: 901600(String)
2020/06/28-17:21:39 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- <==      Total: 1
2020/06/28-17:21:39 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- ==>  Preparing: select * from sj_orderdetail sod, sj_order so where GoodsID in ( ? , ? , ? ) and sod.OrderNo = so.OrderNo and so.OrderState >= 1 order by OrderDate limit 1 
2020/06/28-17:21:39 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- ==> Parameters: 1(Integer), 2(Integer), 3(Integer)
2020/06/28-17:21:39 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- <==      Total: 1
2020/06/28-17:21:42 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- ==>  Preparing: select * from sj_secondleavestocklistdetail where HospitalID = ? and GoodsID in ( ? , ? , ? ) and now() >= DATE_SUB(CURDATE(), INTERVAL 12 month) 
2020/06/28-17:21:42 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- ==> Parameters: 901600(String), 1(Integer), 2(Integer), 3(Integer)
2020/06/28-17:21:42 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- <==      Total: 1
2020/06/28-17:21:42 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==>  Preparing: select * from sj_warehousesecond where GoodsID = ? and HospitalID = ? 
2020/06/28-17:21:42 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==> Parameters: 1(Integer), 901600(String)
2020/06/28-17:21:42 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- <==      Total: 1
2020/06/28-17:21:42 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==>  Preparing: select * from sj_warehousesecond where GoodsID = ? and HospitalID = ? 
2020/06/28-17:21:42 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==> Parameters: 2(Integer), 901600(String)
2020/06/28-17:21:42 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- <==      Total: 1
2020/06/28-17:21:42 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==>  Preparing: select * from sj_warehousesecond where GoodsID = ? and HospitalID = ? 
2020/06/28-17:21:42 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==> Parameters: 3(Integer), 901600(String)
2020/06/28-17:21:42 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- <==      Total: 1
2020/06/28-17:22:10 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-17:22:15 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- ==>  Preparing: select * from sj_order where HospitalID = ? order by OrderDate DESC limit 1; 
2020/06/28-17:22:15 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- ==> Parameters: 901600(String)
2020/06/28-17:22:15 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- <==      Total: 1
2020/06/28-17:22:15 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- ==>  Preparing: select * from sj_orderdetail sod, sj_order so where GoodsID in ( ? , ? , ? ) and sod.OrderNo = so.OrderNo and so.OrderState >= 1 order by OrderDate limit 1 
2020/06/28-17:22:15 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- ==> Parameters: 1(Integer), 3(Integer), 2(Integer)
2020/06/28-17:22:15 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- <==      Total: 1
2020/06/28-17:24:50 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-17:25:30 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- ==>  Preparing: select * from sj_secondleavestocklistdetail where HospitalID = ? and GoodsID in ( ? , ? , ? ) and now() >= DATE_SUB(CURDATE(), INTERVAL 12 month) 
2020/06/28-17:25:30 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- ==> Parameters: 901600(String), 1(Integer), 3(Integer), 2(Integer)
2020/06/28-17:25:30 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- <==      Total: 1
2020/06/28-17:25:30 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==>  Preparing: select * from sj_warehousesecond where GoodsID = ? and HospitalID = ? 
2020/06/28-17:25:30 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==> Parameters: 1(Integer), 901600(String)
2020/06/28-17:25:30 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- <==      Total: 1
2020/06/28-17:25:30 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==>  Preparing: select * from sj_warehousesecond where GoodsID = ? and HospitalID = ? 
2020/06/28-17:25:30 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==> Parameters: 3(Integer), 901600(String)
2020/06/28-17:25:30 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- <==      Total: 1
2020/06/28-17:25:30 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==>  Preparing: select * from sj_warehousesecond where GoodsID = ? and HospitalID = ? 
2020/06/28-17:25:30 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==> Parameters: 2(Integer), 901600(String)
2020/06/28-17:25:30 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- <==      Total: 1
2020/06/28-17:25:32 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==>  Preparing: select * from pub_depart where HOSPITALID=? 
2020/06/28-17:25:32 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==>  Preparing: SELECT * from sj_order where OrderNo like concat('%',?,'%') and OrderDate >= ? and OrderDate < ? and OrderState != 0 order by OrderDate desc limit ?, ? 
2020/06/28-17:25:32 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==> Parameters: 901600(String)
2020/06/28-17:25:32 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-28 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/28-17:25:32 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- <==      Total: 0
2020/06/28-17:25:32 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- <==      Total: 22
2020/06/28-17:25:33 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==>  Preparing: select count(*) from sj_order where YEAR(OrderDate)=YEAR(NOW()); 
2020/06/28-17:25:33 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==> Parameters: 
2020/06/28-17:25:33 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- <==      Total: 1
2020/06/28-17:25:33 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==>  Preparing: select * from pub_depart where HOSPITALID=? 
2020/06/28-17:25:33 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==> Parameters: 901600(String)
2020/06/28-17:25:33 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- <==      Total: 22
2020/06/28-17:25:40 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- ==>  Preparing: select * from sj_order where HospitalID = ? order by OrderDate DESC limit 1; 
2020/06/28-17:25:40 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- ==> Parameters: 901600(String)
2020/06/28-17:25:40 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- <==      Total: 1
2020/06/28-17:25:40 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- ==>  Preparing: select * from sj_orderdetail sod, sj_order so where GoodsID in ( ? , ? , ? ) and sod.OrderNo = so.OrderNo and so.OrderState >= 1 order by OrderDate limit 1 
2020/06/28-17:25:40 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- ==> Parameters: 1(Integer), 2(Integer), 3(Integer)
2020/06/28-17:25:40 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- <==      Total: 1
2020/06/28-17:25:41 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- ==>  Preparing: select * from sj_secondleavestocklistdetail where HospitalID = ? and GoodsID in ( ? , ? , ? ) and now() >= DATE_SUB(CURDATE(), INTERVAL 12 month) 
2020/06/28-17:25:41 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- ==> Parameters: 901600(String), 1(Integer), 2(Integer), 3(Integer)
2020/06/28-17:25:42 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- <==      Total: 1
2020/06/28-17:25:42 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==>  Preparing: select * from sj_warehousesecond where GoodsID = ? and HospitalID = ? 
2020/06/28-17:25:42 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==> Parameters: 1(Integer), 901600(String)
2020/06/28-17:25:42 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- <==      Total: 1
2020/06/28-17:25:42 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==>  Preparing: select * from sj_warehousesecond where GoodsID = ? and HospitalID = ? 
2020/06/28-17:25:42 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==> Parameters: 2(Integer), 901600(String)
2020/06/28-17:25:42 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- <==      Total: 1
2020/06/28-17:25:42 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==>  Preparing: select * from sj_warehousesecond where GoodsID = ? and HospitalID = ? 
2020/06/28-17:25:42 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==> Parameters: 3(Integer), 901600(String)
2020/06/28-17:25:42 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- <==      Total: 1
2020/06/28-17:25:47 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderMapper.insert- ==>  Preparing: insert into sj_order ( OrderNo, DepartCode, CollarPersonID, AuditPersonID, Memo, SumPrice, Urgent, OrderState, OrderDate, HospitalID ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2020/06/28-17:25:47 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderMapper.insert- ==> Parameters: 9016002000039(String), (String), (String), (String), (String), 6.11(String), 0(Integer), 0(Integer), 2020-6-28 17:25:47(String), 901600(String)
2020/06/28-17:25:47 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderMapper.insert- <==    Updates: 1
2020/06/28-17:25:47 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderDetailMapper.insert- ==>  Preparing: insert into sj_orderdetail ( OrderNo, GoodsID, GoodsName, Brand, UnitPrice, Memo, OrderNum, ReceiveNum, SendNum, RecommendedOrderQuantity, LastOrderQuantity, Specification, UnitID ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2020/06/28-17:25:47 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderDetailMapper.insert- ==> Parameters: 9016002000039(String), 1(Integer), iphone12(String), apple(String), 1.11(BigDecimal), (String), 1(Integer), 0(Integer), 0(Integer), 1(Integer), 1(Integer), 1(String), 1(Integer)
2020/06/28-17:25:47 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderDetailMapper.insert- <==    Updates: 1
2020/06/28-17:25:47 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderDetailMapper.insert- ==>  Preparing: insert into sj_orderdetail ( OrderNo, GoodsID, GoodsName, Brand, UnitPrice, Memo, OrderNum, ReceiveNum, SendNum, RecommendedOrderQuantity, LastOrderQuantity, Specification, UnitID ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2020/06/28-17:25:47 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderDetailMapper.insert- ==> Parameters: 9016002000039(String), 2(Integer), 2(String), 2(String), 2.00(BigDecimal), (String), 1(Integer), 0(Integer), 0(Integer), 1(Integer), 0(Integer), 2(String), 1(Integer)
2020/06/28-17:25:47 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderDetailMapper.insert- <==    Updates: 1
2020/06/28-17:25:47 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderDetailMapper.insert- ==>  Preparing: insert into sj_orderdetail ( OrderNo, GoodsID, GoodsName, Brand, UnitPrice, Memo, OrderNum, ReceiveNum, SendNum, RecommendedOrderQuantity, LastOrderQuantity, Specification, UnitID ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2020/06/28-17:25:47 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderDetailMapper.insert- ==> Parameters: 9016002000039(String), 3(Integer), 3(String), 3(String), 3.00(BigDecimal), (String), 1(Integer), 0(Integer), 0(Integer), 1(Integer), 0(Integer), 3(String), 1(Integer)
2020/06/28-17:25:47 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderDetailMapper.insert- <==    Updates: 1
2020/06/28-17:25:47 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderMapper.getOrderByPage- ==>  Preparing: SELECT * from sj_order where OrderNo like concat('%',?,'%') and OrderDate >= ? and OrderDate < ? and HospitalID = ? order by OrderDate desc limit ?, ? 
2020/06/28-17:25:47 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderMapper.getOrderByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-28 23:59:59.0(Timestamp), 901600(String), 0(Integer), 10(Integer)
2020/06/28-17:25:47 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderMapper.getOrderByPage- <==      Total: 10
2020/06/28-17:27:12 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/28-17:29:50 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
