2020/06/24-08:56:17 [main] INFO  com.huijian.rac.RacStockServiceApplication- No active profile set, falling back to default profiles: default
2020/06/24-08:56:18 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Multiple Spring Data modules found, entering strict repository configuration mode!
2020/06/24-08:56:18 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Bootstrapping Spring Data repositories in DEFAULT mode.
2020/06/24-08:56:18 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Finished Spring Data repository scanning in 20ms. Found 0 repository interfaces.
2020/06/24-08:56:18 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'deliveryUnitMapper' and 'com.huijian.rac.mapper.DeliveryUnitMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-08:56:18 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'departMapper' and 'com.huijian.rac.mapper.DepartMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-08:56:18 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'discardDetailMapper' and 'com.huijian.rac.mapper.DiscardDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-08:56:18 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'discardMapper' and 'com.huijian.rac.mapper.DiscardMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-08:56:18 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsDictionaryMapper' and 'com.huijian.rac.mapper.GoodsDictionaryMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-08:56:18 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsRecordMapper' and 'com.huijian.rac.mapper.GoodsRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-08:56:18 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsSupplierMapper' and 'com.huijian.rac.mapper.GoodsSupplierMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-08:56:18 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'leaveStockListDetailMapper' and 'com.huijian.rac.mapper.LeaveStockListDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-08:56:18 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'materialMapper' and 'com.huijian.rac.mapper.MaterialMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-08:56:18 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'outboundRecordMapper' and 'com.huijian.rac.mapper.OutboundRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-08:56:18 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'outboundSecondRecordMapper' and 'com.huijian.rac.mapper.OutboundSecondRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-08:56:18 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'reagentMapper' and 'com.huijian.rac.mapper.ReagentMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-08:56:18 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'returnGoodsDetailMapper' and 'com.huijian.rac.mapper.ReturnGoodsDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-08:56:18 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'returnGoodsMapper' and 'com.huijian.rac.mapper.ReturnGoodsMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-08:56:18 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'secondGoodsRecordMapper' and 'com.huijian.rac.mapper.SecondGoodsRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-08:56:18 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'secondLeaveStockListDetailMapper' and 'com.huijian.rac.mapper.SecondLeaveStockListDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-08:56:18 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'unitMapper' and 'com.huijian.rac.mapper.UnitMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-08:56:18 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseMapper' and 'com.huijian.rac.mapper.WarehouseMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-08:56:18 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseRecordMapper' and 'com.huijian.rac.mapper.WarehouseRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-08:56:18 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseSecondMapper' and 'com.huijian.rac.mapper.WarehouseSecondMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-08:56:18 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseSecondRecordMapper' and 'com.huijian.rac.mapper.WarehouseSecondRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-08:56:18 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'departsMapper' and 'com.huijian.rac.mapper.DepartsMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-08:56:18 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsPackageDetailMapper' and 'com.huijian.rac.mapper.GoodsPackageDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-08:56:18 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsPackageMapper' and 'com.huijian.rac.mapper.GoodsPackageMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-08:56:18 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'hospitalMapper' and 'com.huijian.rac.mapper.HospitalMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-08:56:18 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'leaveStockListSecondMapper' and 'com.huijian.rac.mapper.LeaveStockListSecondMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-08:56:18 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderDetailMapper' and 'com.huijian.rac.mapper.OrderDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-08:56:18 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderMapper' and 'com.huijian.rac.mapper.OrderMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-08:56:18 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderOperateMapper' and 'com.huijian.rac.mapper.OrderOperateMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-08:56:18 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderReviewMapper' and 'com.huijian.rac.mapper.OrderReviewMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-08:56:18 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- No MyBatis mapper was found in '[com.huijian.rac.mapper]' package. Please check your configuration.
2020/06/24-08:56:18 [main] INFO  org.springframework.cloud.context.scope.GenericScope- BeanFactory id=67a76e45-faee-37d4-bfd4-e136a0fefe86
2020/06/24-08:56:18 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/24-08:56:18 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'redisConfig' of type [com.huijian.rac.config.RedisConfig$$EnhancerBySpringCGLIB$$525ee01a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/24-08:56:18 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/24-08:56:18 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat initialized with port(s): 8083 (http)
2020/06/24-08:56:18 [main] INFO  org.apache.catalina.core.StandardService- Starting service [Tomcat]
2020/06/24-08:56:18 [main] INFO  org.apache.catalina.core.StandardEngine- Starting Servlet engine: [Apache Tomcat/9.0.27]
2020/06/24-08:56:19 [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]- Initializing Spring embedded WebApplicationContext
2020/06/24-08:56:19 [main] INFO  org.springframework.web.context.ContextLoader- Root WebApplicationContext: initialization completed in 1459 ms
2020/06/24-08:56:19 [main] WARN  com.netflix.config.sources.URLConfigurationSource- No URLs will be polled as dynamic configuration sources.
2020/06/24-08:56:19 [main] INFO  com.netflix.config.sources.URLConfigurationSource- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020/06/24-08:56:20 [main] WARN  com.netflix.config.sources.URLConfigurationSource- No URLs will be polled as dynamic configuration sources.
2020/06/24-08:56:20 [main] INFO  com.netflix.config.sources.URLConfigurationSource- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020/06/24-08:56:20 [main] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor- Initializing ExecutorService 'applicationTaskExecutor'
2020/06/24-08:56:21 [main] WARN  org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger- You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020/06/24-08:56:21 [main] WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger- Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020/06/24-08:56:21 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory- Setting initial instance status as: STARTING
2020/06/24-08:56:21 [main] INFO  com.netflix.discovery.DiscoveryClient- Initializing Eureka in region us-east-1
2020/06/24-08:56:21 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using JSON encoding codec LegacyJacksonJson
2020/06/24-08:56:21 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using JSON decoding codec LegacyJacksonJson
2020/06/24-08:56:21 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using XML encoding codec XStreamXml
2020/06/24-08:56:21 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using XML decoding codec XStreamXml
2020/06/24-08:56:21 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-08:56:22 [main] INFO  com.netflix.discovery.DiscoveryClient- Disable delta property : false
2020/06/24-08:56:22 [main] INFO  com.netflix.discovery.DiscoveryClient- Single vip registry refresh property : null
2020/06/24-08:56:22 [main] INFO  com.netflix.discovery.DiscoveryClient- Force full registry fetch : false
2020/06/24-08:56:22 [main] INFO  com.netflix.discovery.DiscoveryClient- Application is null : false
2020/06/24-08:56:22 [main] INFO  com.netflix.discovery.DiscoveryClient- Registered Applications size is zero : true
2020/06/24-08:56:22 [main] INFO  com.netflix.discovery.DiscoveryClient- Application version is -1: true
2020/06/24-08:56:22 [main] INFO  com.netflix.discovery.DiscoveryClient- Getting all instance registry info from the eureka server
2020/06/24-08:56:22 [main] INFO  com.netflix.discovery.DiscoveryClient- The response status is 200
2020/06/24-08:56:22 [main] INFO  com.netflix.discovery.DiscoveryClient- Starting heartbeat executor: renew interval is: 30
2020/06/24-08:56:22 [main] INFO  com.netflix.discovery.InstanceInfoReplicator- InstanceInfoReplicator onDemand update allowed rate per min is 4
2020/06/24-08:56:22 [main] INFO  com.netflix.discovery.DiscoveryClient- Discovery Client initialized at timestamp 1592960182199 with initial instances count: 0
2020/06/24-08:56:22 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry- Registering application RAC-STOCK-SERVICE with eureka with status UP
2020/06/24-08:56:22 [main] INFO  com.netflix.discovery.DiscoveryClient- Saw local status change event StatusChangeEvent [timestamp=1592960182202, current=UP, previous=STARTING]
2020/06/24-08:56:22 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-STOCK-SERVICE/MSI.mshome.net:rac-stock-service:8083: registering service...
2020/06/24-08:56:22 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Attempting to connect to: [192.168.161.129:5672]
2020/06/24-08:56:22 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Created new connection: rabbitConnectionFactory#267cde2e:0/SimpleConnection@41938e1e [delegate=amqp://admin@192.168.161.129:5672/, localPort= 53585]
2020/06/24-08:56:22 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-STOCK-SERVICE/MSI.mshome.net:rac-stock-service:8083 - registration status: 204
2020/06/24-08:56:22 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat started on port(s): 8083 (http) with context path ''
2020/06/24-08:56:22 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration- Updating port to 8083
2020/06/24-08:56:22 [main] INFO  com.huijian.rac.RacStockServiceApplication- Started RacStockServiceApplication in 6.213 seconds (JVM running for 7.084)
2020/06/24-08:56:46 [main] INFO  com.huijian.rac.RacOrderServiceApplication- No active profile set, falling back to default profiles: default
2020/06/24-08:56:47 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Multiple Spring Data modules found, entering strict repository configuration mode!
2020/06/24-08:56:47 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020/06/24-08:56:47 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Finished Spring Data repository scanning in 13ms. Found 0 Redis repository interfaces.
2020/06/24-08:56:47 [main] INFO  org.springframework.cloud.context.scope.GenericScope- BeanFactory id=f9e752be-742c-3d90-a32c-086a87b39fc6
2020/06/24-08:56:47 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/24-08:56:47 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/24-08:56:47 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat initialized with port(s): 8084 (http)
2020/06/24-08:56:47 [main] INFO  org.apache.catalina.core.StandardService- Starting service [Tomcat]
2020/06/24-08:56:47 [main] INFO  org.apache.catalina.core.StandardEngine- Starting Servlet engine: [Apache Tomcat/9.0.29]
2020/06/24-08:56:47 [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]- Initializing Spring embedded WebApplicationContext
2020/06/24-08:56:47 [main] INFO  org.springframework.web.context.ContextLoader- Root WebApplicationContext: initialization completed in 1025 ms
2020/06/24-08:56:48 [main] WARN  com.netflix.config.sources.URLConfigurationSource- No URLs will be polled as dynamic configuration sources.
2020/06/24-08:56:48 [main] INFO  com.netflix.config.sources.URLConfigurationSource- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020/06/24-08:56:48 [main] WARN  com.netflix.config.sources.URLConfigurationSource- No URLs will be polled as dynamic configuration sources.
2020/06/24-08:56:48 [main] INFO  com.netflix.config.sources.URLConfigurationSource- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020/06/24-08:56:48 [main] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor- Initializing ExecutorService 'applicationTaskExecutor'
2020/06/24-08:56:49 [main] WARN  org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger- You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020/06/24-08:56:49 [main] WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger- Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020/06/24-08:56:49 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory- Setting initial instance status as: STARTING
2020/06/24-08:56:49 [main] INFO  com.netflix.discovery.DiscoveryClient- Initializing Eureka in region us-east-1
2020/06/24-08:56:50 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using JSON encoding codec LegacyJacksonJson
2020/06/24-08:56:50 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using JSON decoding codec LegacyJacksonJson
2020/06/24-08:56:50 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using XML encoding codec XStreamXml
2020/06/24-08:56:50 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using XML decoding codec XStreamXml
2020/06/24-08:56:50 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-08:56:50 [main] INFO  com.netflix.discovery.DiscoveryClient- Disable delta property : false
2020/06/24-08:56:50 [main] INFO  com.netflix.discovery.DiscoveryClient- Single vip registry refresh property : null
2020/06/24-08:56:50 [main] INFO  com.netflix.discovery.DiscoveryClient- Force full registry fetch : false
2020/06/24-08:56:50 [main] INFO  com.netflix.discovery.DiscoveryClient- Application is null : false
2020/06/24-08:56:50 [main] INFO  com.netflix.discovery.DiscoveryClient- Registered Applications size is zero : true
2020/06/24-08:56:50 [main] INFO  com.netflix.discovery.DiscoveryClient- Application version is -1: true
2020/06/24-08:56:50 [main] INFO  com.netflix.discovery.DiscoveryClient- Getting all instance registry info from the eureka server
2020/06/24-08:56:50 [main] INFO  com.netflix.discovery.DiscoveryClient- The response status is 200
2020/06/24-08:56:50 [main] INFO  com.netflix.discovery.DiscoveryClient- Starting heartbeat executor: renew interval is: 30
2020/06/24-08:56:50 [main] INFO  com.netflix.discovery.InstanceInfoReplicator- InstanceInfoReplicator onDemand update allowed rate per min is 4
2020/06/24-08:56:50 [main] INFO  com.netflix.discovery.DiscoveryClient- Discovery Client initialized at timestamp 1592960210548 with initial instances count: 1
2020/06/24-08:56:50 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry- Registering application RAC-ORDER-SERVICE with eureka with status UP
2020/06/24-08:56:50 [main] INFO  com.netflix.discovery.DiscoveryClient- Saw local status change event StatusChangeEvent [timestamp=1592960210550, current=UP, previous=STARTING]
2020/06/24-08:56:50 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-ORDER-SERVICE/MSI.mshome.net:rac-order-service:8084: registering service...
2020/06/24-08:56:50 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Attempting to connect to: [192.168.161.129:5672]
2020/06/24-08:56:50 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Created new connection: rabbitConnectionFactory#2eae4349:0/SimpleConnection@5563bb40 [delegate=amqp://admin@192.168.161.129:5672/, localPort= 53619]
2020/06/24-08:56:50 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-ORDER-SERVICE/MSI.mshome.net:rac-order-service:8084 - registration status: 204
2020/06/24-08:56:50 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat started on port(s): 8084 (http) with context path ''
2020/06/24-08:56:50 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration- Updating port to 8084
2020/06/24-08:56:50 [main] INFO  com.huijian.rac.RacOrderServiceApplication- Started RacOrderServiceApplication in 5.189 seconds (JVM running for 5.899)
2020/06/24-08:56:52 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient- Disable delta property : false
2020/06/24-08:56:52 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient- Single vip registry refresh property : null
2020/06/24-08:56:52 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient- Force full registry fetch : false
2020/06/24-08:56:52 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient- Application is null : false
2020/06/24-08:56:52 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient- Registered Applications size is zero : true
2020/06/24-08:56:52 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient- Application version is -1: false
2020/06/24-08:56:52 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient- Getting all instance registry info from the eureka server
2020/06/24-08:56:52 [DiscoveryClient-CacheRefreshExecutor-0] INFO  com.netflix.discovery.DiscoveryClient- The response status is 200
2020/06/24-08:57:29 [http-nio-8083-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]- Initializing Spring DispatcherServlet 'dispatcherServlet'
2020/06/24-08:57:29 [http-nio-8083-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet- Initializing Servlet 'dispatcherServlet'
2020/06/24-08:57:29 [http-nio-8083-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet- Completed initialization in 6 ms
2020/06/24-08:57:29 [http-nio-8083-exec-1] INFO  com.zaxxer.hikari.HikariDataSource- HikariPool-1 - Starting...
2020/06/24-08:57:29 [http-nio-8083-exec-1] INFO  com.zaxxer.hikari.HikariDataSource- HikariPool-1 - Start completed.
2020/06/24-08:57:29 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.ReturnGoodsMapper.inquiryOneDay- ==>  Preparing: select count(*) from sj_returngoods where return_goods_date>CURRENT_DATE and hospital_id = ?; 
2020/06/24-08:57:29 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.ReturnGoodsMapper.inquiryOneDay- ==> Parameters: 901600(String)
2020/06/24-08:57:29 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.ReturnGoodsMapper.inquiryOneDay- <==      Total: 1
2020/06/24-08:57:41 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByIDAndName- ==>  Preparing: select * from sj_goodsdictionary where GoodsName=? and GoodsID=? 
2020/06/24-08:57:41 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByIDAndName- ==> Parameters: iphone12(String), 1(Integer)
2020/06/24-08:57:41 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByIDAndName- <==      Total: 1
2020/06/24-08:57:41 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/24-08:57:41 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/24-08:57:41 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/24-08:57:41 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehouse where GoodsID = ?), 0) 
2020/06/24-08:57:41 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==> Parameters: 1(Integer)
2020/06/24-08:57:41 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/24-08:57:58 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByIDAndName- ==>  Preparing: select * from sj_goodsdictionary where GoodsName=? and GoodsID=? 
2020/06/24-08:57:58 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByIDAndName- ==> Parameters: 2(String), 2(Integer)
2020/06/24-08:57:58 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByIDAndName- <==      Total: 1
2020/06/24-08:57:58 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/24-08:57:58 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 2(Integer)
2020/06/24-08:57:58 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/24-08:57:58 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehouse where GoodsID = ?), 0) 
2020/06/24-08:57:58 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==> Parameters: 2(Integer)
2020/06/24-08:57:58 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/24-09:01:22 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-09:01:44 [main] INFO  com.huijian.rac.RacStockServiceApplication- No active profile set, falling back to default profiles: default
2020/06/24-09:01:45 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Multiple Spring Data modules found, entering strict repository configuration mode!
2020/06/24-09:01:45 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Bootstrapping Spring Data repositories in DEFAULT mode.
2020/06/24-09:01:45 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Finished Spring Data repository scanning in 19ms. Found 0 repository interfaces.
2020/06/24-09:01:45 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'deliveryUnitMapper' and 'com.huijian.rac.mapper.DeliveryUnitMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-09:01:45 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'departMapper' and 'com.huijian.rac.mapper.DepartMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-09:01:45 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'discardDetailMapper' and 'com.huijian.rac.mapper.DiscardDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-09:01:45 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'discardMapper' and 'com.huijian.rac.mapper.DiscardMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-09:01:45 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsDictionaryMapper' and 'com.huijian.rac.mapper.GoodsDictionaryMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-09:01:45 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsRecordMapper' and 'com.huijian.rac.mapper.GoodsRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-09:01:45 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsSupplierMapper' and 'com.huijian.rac.mapper.GoodsSupplierMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-09:01:45 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'leaveStockListDetailMapper' and 'com.huijian.rac.mapper.LeaveStockListDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-09:01:45 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'materialMapper' and 'com.huijian.rac.mapper.MaterialMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-09:01:45 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'outboundRecordMapper' and 'com.huijian.rac.mapper.OutboundRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-09:01:45 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'outboundSecondRecordMapper' and 'com.huijian.rac.mapper.OutboundSecondRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-09:01:45 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'reagentMapper' and 'com.huijian.rac.mapper.ReagentMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-09:01:45 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'returnGoodsDetailMapper' and 'com.huijian.rac.mapper.ReturnGoodsDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-09:01:45 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'returnGoodsMapper' and 'com.huijian.rac.mapper.ReturnGoodsMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-09:01:45 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'secondGoodsRecordMapper' and 'com.huijian.rac.mapper.SecondGoodsRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-09:01:45 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'secondLeaveStockListDetailMapper' and 'com.huijian.rac.mapper.SecondLeaveStockListDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-09:01:45 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'unitMapper' and 'com.huijian.rac.mapper.UnitMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-09:01:45 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseMapper' and 'com.huijian.rac.mapper.WarehouseMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-09:01:45 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseRecordMapper' and 'com.huijian.rac.mapper.WarehouseRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-09:01:45 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseSecondMapper' and 'com.huijian.rac.mapper.WarehouseSecondMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-09:01:45 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseSecondRecordMapper' and 'com.huijian.rac.mapper.WarehouseSecondRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-09:01:45 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'departsMapper' and 'com.huijian.rac.mapper.DepartsMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-09:01:45 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsPackageDetailMapper' and 'com.huijian.rac.mapper.GoodsPackageDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-09:01:45 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsPackageMapper' and 'com.huijian.rac.mapper.GoodsPackageMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-09:01:45 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'hospitalMapper' and 'com.huijian.rac.mapper.HospitalMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-09:01:45 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'leaveStockListSecondMapper' and 'com.huijian.rac.mapper.LeaveStockListSecondMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-09:01:45 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderDetailMapper' and 'com.huijian.rac.mapper.OrderDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-09:01:45 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderMapper' and 'com.huijian.rac.mapper.OrderMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-09:01:45 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderOperateMapper' and 'com.huijian.rac.mapper.OrderOperateMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-09:01:45 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderReviewMapper' and 'com.huijian.rac.mapper.OrderReviewMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-09:01:45 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- No MyBatis mapper was found in '[com.huijian.rac.mapper]' package. Please check your configuration.
2020/06/24-09:01:45 [main] INFO  org.springframework.cloud.context.scope.GenericScope- BeanFactory id=67a76e45-faee-37d4-bfd4-e136a0fefe86
2020/06/24-09:01:45 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/24-09:01:45 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'redisConfig' of type [com.huijian.rac.config.RedisConfig$$EnhancerBySpringCGLIB$$92ec32ac] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/24-09:01:45 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/24-09:01:45 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat initialized with port(s): 8083 (http)
2020/06/24-09:01:45 [main] INFO  org.apache.catalina.core.StandardService- Starting service [Tomcat]
2020/06/24-09:01:45 [main] INFO  org.apache.catalina.core.StandardEngine- Starting Servlet engine: [Apache Tomcat/9.0.27]
2020/06/24-09:01:45 [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]- Initializing Spring embedded WebApplicationContext
2020/06/24-09:01:45 [main] INFO  org.springframework.web.context.ContextLoader- Root WebApplicationContext: initialization completed in 1242 ms
2020/06/24-09:01:46 [main] WARN  com.netflix.config.sources.URLConfigurationSource- No URLs will be polled as dynamic configuration sources.
2020/06/24-09:01:46 [main] INFO  com.netflix.config.sources.URLConfigurationSource- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020/06/24-09:01:46 [main] WARN  com.netflix.config.sources.URLConfigurationSource- No URLs will be polled as dynamic configuration sources.
2020/06/24-09:01:46 [main] INFO  com.netflix.config.sources.URLConfigurationSource- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020/06/24-09:01:46 [main] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor- Initializing ExecutorService 'applicationTaskExecutor'
2020/06/24-09:01:47 [main] WARN  org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger- You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020/06/24-09:01:47 [main] WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger- Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020/06/24-09:01:48 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory- Setting initial instance status as: STARTING
2020/06/24-09:01:48 [main] INFO  com.netflix.discovery.DiscoveryClient- Initializing Eureka in region us-east-1
2020/06/24-09:01:48 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using JSON encoding codec LegacyJacksonJson
2020/06/24-09:01:48 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using JSON decoding codec LegacyJacksonJson
2020/06/24-09:01:48 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using XML encoding codec XStreamXml
2020/06/24-09:01:48 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using XML decoding codec XStreamXml
2020/06/24-09:01:48 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-09:01:48 [main] INFO  com.netflix.discovery.DiscoveryClient- Disable delta property : false
2020/06/24-09:01:48 [main] INFO  com.netflix.discovery.DiscoveryClient- Single vip registry refresh property : null
2020/06/24-09:01:48 [main] INFO  com.netflix.discovery.DiscoveryClient- Force full registry fetch : false
2020/06/24-09:01:48 [main] INFO  com.netflix.discovery.DiscoveryClient- Application is null : false
2020/06/24-09:01:48 [main] INFO  com.netflix.discovery.DiscoveryClient- Registered Applications size is zero : true
2020/06/24-09:01:48 [main] INFO  com.netflix.discovery.DiscoveryClient- Application version is -1: true
2020/06/24-09:01:48 [main] INFO  com.netflix.discovery.DiscoveryClient- Getting all instance registry info from the eureka server
2020/06/24-09:01:48 [main] INFO  com.netflix.discovery.DiscoveryClient- The response status is 200
2020/06/24-09:01:48 [main] INFO  com.netflix.discovery.DiscoveryClient- Starting heartbeat executor: renew interval is: 30
2020/06/24-09:01:48 [main] INFO  com.netflix.discovery.InstanceInfoReplicator- InstanceInfoReplicator onDemand update allowed rate per min is 4
2020/06/24-09:01:48 [main] INFO  com.netflix.discovery.DiscoveryClient- Discovery Client initialized at timestamp 1592960508851 with initial instances count: 2
2020/06/24-09:01:48 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry- Registering application RAC-STOCK-SERVICE with eureka with status UP
2020/06/24-09:01:48 [main] INFO  com.netflix.discovery.DiscoveryClient- Saw local status change event StatusChangeEvent [timestamp=1592960508854, current=UP, previous=STARTING]
2020/06/24-09:01:48 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-STOCK-SERVICE/MSI.mshome.net:rac-stock-service:8083: registering service...
2020/06/24-09:01:48 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Attempting to connect to: [192.168.161.129:5672]
2020/06/24-09:01:48 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Created new connection: rabbitConnectionFactory#3178219a:0/SimpleConnection@15f861ee [delegate=amqp://admin@192.168.161.129:5672/, localPort= 53956]
2020/06/24-09:01:48 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-STOCK-SERVICE/MSI.mshome.net:rac-stock-service:8083 - registration status: 204
2020/06/24-09:01:49 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat started on port(s): 8083 (http) with context path ''
2020/06/24-09:01:49 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration- Updating port to 8083
2020/06/24-09:01:49 [main] INFO  com.huijian.rac.RacStockServiceApplication- Started RacStockServiceApplication in 5.605 seconds (JVM running for 6.315)
2020/06/24-09:01:50 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-09:02:49 [main] INFO  com.huijian.rac.RacStockServiceApplication- No active profile set, falling back to default profiles: default
2020/06/24-09:02:50 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Multiple Spring Data modules found, entering strict repository configuration mode!
2020/06/24-09:02:50 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Bootstrapping Spring Data repositories in DEFAULT mode.
2020/06/24-09:02:50 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Finished Spring Data repository scanning in 19ms. Found 0 repository interfaces.
2020/06/24-09:02:50 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'deliveryUnitMapper' and 'com.huijian.rac.mapper.DeliveryUnitMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-09:02:50 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'departMapper' and 'com.huijian.rac.mapper.DepartMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-09:02:50 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'discardDetailMapper' and 'com.huijian.rac.mapper.DiscardDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-09:02:50 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'discardMapper' and 'com.huijian.rac.mapper.DiscardMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-09:02:50 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsDictionaryMapper' and 'com.huijian.rac.mapper.GoodsDictionaryMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-09:02:50 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsRecordMapper' and 'com.huijian.rac.mapper.GoodsRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-09:02:50 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsSupplierMapper' and 'com.huijian.rac.mapper.GoodsSupplierMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-09:02:50 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'leaveStockListDetailMapper' and 'com.huijian.rac.mapper.LeaveStockListDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-09:02:50 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'materialMapper' and 'com.huijian.rac.mapper.MaterialMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-09:02:50 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'outboundRecordMapper' and 'com.huijian.rac.mapper.OutboundRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-09:02:50 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'outboundSecondRecordMapper' and 'com.huijian.rac.mapper.OutboundSecondRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-09:02:50 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'reagentMapper' and 'com.huijian.rac.mapper.ReagentMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-09:02:50 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'returnGoodsDetailMapper' and 'com.huijian.rac.mapper.ReturnGoodsDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-09:02:50 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'returnGoodsMapper' and 'com.huijian.rac.mapper.ReturnGoodsMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-09:02:50 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'secondGoodsRecordMapper' and 'com.huijian.rac.mapper.SecondGoodsRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-09:02:50 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'secondLeaveStockListDetailMapper' and 'com.huijian.rac.mapper.SecondLeaveStockListDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-09:02:50 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'unitMapper' and 'com.huijian.rac.mapper.UnitMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-09:02:50 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseMapper' and 'com.huijian.rac.mapper.WarehouseMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-09:02:50 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseRecordMapper' and 'com.huijian.rac.mapper.WarehouseRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-09:02:50 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseSecondMapper' and 'com.huijian.rac.mapper.WarehouseSecondMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-09:02:50 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseSecondRecordMapper' and 'com.huijian.rac.mapper.WarehouseSecondRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-09:02:50 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'departsMapper' and 'com.huijian.rac.mapper.DepartsMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-09:02:50 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsPackageDetailMapper' and 'com.huijian.rac.mapper.GoodsPackageDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-09:02:50 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsPackageMapper' and 'com.huijian.rac.mapper.GoodsPackageMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-09:02:50 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'hospitalMapper' and 'com.huijian.rac.mapper.HospitalMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-09:02:50 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'leaveStockListSecondMapper' and 'com.huijian.rac.mapper.LeaveStockListSecondMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-09:02:50 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderDetailMapper' and 'com.huijian.rac.mapper.OrderDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-09:02:50 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderMapper' and 'com.huijian.rac.mapper.OrderMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-09:02:50 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderOperateMapper' and 'com.huijian.rac.mapper.OrderOperateMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-09:02:50 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderReviewMapper' and 'com.huijian.rac.mapper.OrderReviewMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-09:02:50 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- No MyBatis mapper was found in '[com.huijian.rac.mapper]' package. Please check your configuration.
2020/06/24-09:02:50 [main] INFO  org.springframework.cloud.context.scope.GenericScope- BeanFactory id=67a76e45-faee-37d4-bfd4-e136a0fefe86
2020/06/24-09:02:50 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/24-09:02:50 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'redisConfig' of type [com.huijian.rac.config.RedisConfig$$EnhancerBySpringCGLIB$$f410e9b0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/24-09:02:50 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/24-09:02:50 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat initialized with port(s): 8083 (http)
2020/06/24-09:02:50 [main] INFO  org.apache.catalina.core.StandardService- Starting service [Tomcat]
2020/06/24-09:02:50 [main] INFO  org.apache.catalina.core.StandardEngine- Starting Servlet engine: [Apache Tomcat/9.0.27]
2020/06/24-09:02:50 [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]- Initializing Spring embedded WebApplicationContext
2020/06/24-09:02:50 [main] INFO  org.springframework.web.context.ContextLoader- Root WebApplicationContext: initialization completed in 1227 ms
2020/06/24-09:02:51 [main] WARN  com.netflix.config.sources.URLConfigurationSource- No URLs will be polled as dynamic configuration sources.
2020/06/24-09:02:51 [main] INFO  com.netflix.config.sources.URLConfigurationSource- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020/06/24-09:02:51 [main] WARN  com.netflix.config.sources.URLConfigurationSource- No URLs will be polled as dynamic configuration sources.
2020/06/24-09:02:51 [main] INFO  com.netflix.config.sources.URLConfigurationSource- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020/06/24-09:02:51 [main] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor- Initializing ExecutorService 'applicationTaskExecutor'
2020/06/24-09:02:52 [main] WARN  org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger- You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020/06/24-09:02:52 [main] WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger- Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020/06/24-09:02:53 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory- Setting initial instance status as: STARTING
2020/06/24-09:02:53 [main] INFO  com.netflix.discovery.DiscoveryClient- Initializing Eureka in region us-east-1
2020/06/24-09:02:53 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using JSON encoding codec LegacyJacksonJson
2020/06/24-09:02:53 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using JSON decoding codec LegacyJacksonJson
2020/06/24-09:02:53 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using XML encoding codec XStreamXml
2020/06/24-09:02:53 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using XML decoding codec XStreamXml
2020/06/24-09:02:53 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-09:02:53 [main] INFO  com.netflix.discovery.DiscoveryClient- Disable delta property : false
2020/06/24-09:02:53 [main] INFO  com.netflix.discovery.DiscoveryClient- Single vip registry refresh property : null
2020/06/24-09:02:53 [main] INFO  com.netflix.discovery.DiscoveryClient- Force full registry fetch : false
2020/06/24-09:02:53 [main] INFO  com.netflix.discovery.DiscoveryClient- Application is null : false
2020/06/24-09:02:53 [main] INFO  com.netflix.discovery.DiscoveryClient- Registered Applications size is zero : true
2020/06/24-09:02:53 [main] INFO  com.netflix.discovery.DiscoveryClient- Application version is -1: true
2020/06/24-09:02:53 [main] INFO  com.netflix.discovery.DiscoveryClient- Getting all instance registry info from the eureka server
2020/06/24-09:02:53 [main] INFO  com.netflix.discovery.DiscoveryClient- The response status is 200
2020/06/24-09:02:53 [main] INFO  com.netflix.discovery.DiscoveryClient- Starting heartbeat executor: renew interval is: 30
2020/06/24-09:02:53 [main] INFO  com.netflix.discovery.InstanceInfoReplicator- InstanceInfoReplicator onDemand update allowed rate per min is 4
2020/06/24-09:02:53 [main] INFO  com.netflix.discovery.DiscoveryClient- Discovery Client initialized at timestamp 1592960573856 with initial instances count: 2
2020/06/24-09:02:53 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry- Registering application RAC-STOCK-SERVICE with eureka with status UP
2020/06/24-09:02:53 [main] INFO  com.netflix.discovery.DiscoveryClient- Saw local status change event StatusChangeEvent [timestamp=1592960573859, current=UP, previous=STARTING]
2020/06/24-09:02:53 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-STOCK-SERVICE/MSI.mshome.net:rac-stock-service:8083: registering service...
2020/06/24-09:02:53 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Attempting to connect to: [192.168.161.129:5672]
2020/06/24-09:02:53 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Created new connection: rabbitConnectionFactory#3f598450:0/SimpleConnection@2830315f [delegate=amqp://admin@192.168.161.129:5672/, localPort= 54021]
2020/06/24-09:02:53 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-STOCK-SERVICE/MSI.mshome.net:rac-stock-service:8083 - registration status: 204
2020/06/24-09:02:54 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat started on port(s): 8083 (http) with context path ''
2020/06/24-09:02:54 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration- Updating port to 8083
2020/06/24-09:02:54 [main] INFO  com.huijian.rac.RacStockServiceApplication- Started RacStockServiceApplication in 5.715 seconds (JVM running for 6.425)
2020/06/24-09:04:20 [http-nio-8083-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]- Initializing Spring DispatcherServlet 'dispatcherServlet'
2020/06/24-09:04:20 [http-nio-8083-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet- Initializing Servlet 'dispatcherServlet'
2020/06/24-09:04:20 [http-nio-8083-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet- Completed initialization in 5 ms
2020/06/24-09:04:20 [http-nio-8083-exec-1] INFO  com.zaxxer.hikari.HikariDataSource- HikariPool-1 - Starting...
2020/06/24-09:04:21 [http-nio-8083-exec-1] INFO  com.zaxxer.hikari.HikariDataSource- HikariPool-1 - Start completed.
2020/06/24-09:04:21 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.ReturnGoodsMapper.inquiryOneDay- ==>  Preparing: select count(*) from sj_returngoods where return_goods_date>CURRENT_DATE and hospital_id = ?; 
2020/06/24-09:04:21 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.ReturnGoodsMapper.inquiryOneDay- ==> Parameters: 901600(String)
2020/06/24-09:04:21 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.ReturnGoodsMapper.inquiryOneDay- <==      Total: 1
2020/06/24-09:04:25 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByIDAndName- ==>  Preparing: select sg.*, su.UnitName from sj_goodsdictionary sg INNER join sj_unit su on sg.GoodsName=? and sg.GoodsID=? and sg.UnitID = su.UnitID 
2020/06/24-09:04:25 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByIDAndName- ==> Parameters: iphone12(String), 1(Integer)
2020/06/24-09:04:25 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByIDAndName- <==      Total: 1
2020/06/24-09:04:25 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/24-09:04:25 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/24-09:04:25 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/24-09:04:25 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehouse where GoodsID = ?), 0) 
2020/06/24-09:04:25 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==> Parameters: 1(Integer)
2020/06/24-09:04:25 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/24-09:06:50 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-09:06:59 [http-nio-8084-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]- Initializing Spring DispatcherServlet 'dispatcherServlet'
2020/06/24-09:06:59 [http-nio-8084-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet- Initializing Servlet 'dispatcherServlet'
2020/06/24-09:06:59 [http-nio-8084-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet- Completed initialization in 6 ms
2020/06/24-09:06:59 [http-nio-8084-exec-2] INFO  com.zaxxer.hikari.HikariDataSource- HikariPool-1 - Starting...
2020/06/24-09:06:59 [http-nio-8084-exec-2] INFO  com.zaxxer.hikari.HikariDataSource- HikariPool-1 - Start completed.
2020/06/24-09:06:59 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==>  Preparing: SELECT * from sj_order where OrderNo like concat('%',?,'%') and OrderDate >= ? and OrderDate < ? and OrderState != 0 order by OrderDate desc limit ?, ? 
2020/06/24-09:06:59 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-24 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/24-09:07:00 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- <==      Total: 0
2020/06/24-09:07:53 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-09:08:36 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseRecordMapper.getWarehouseRecordByPage- ==>  Preparing: SELECT * from sj_warehouserecord where WarehouseNo like concat('%',?,'%') and WarehouseDate >= ? and WarehouseDate < ? order by ID desc limit ?, ? 
2020/06/24-09:08:36 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseRecordMapper.getWarehouseRecordByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-24 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/24-09:08:36 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseRecordMapper.getWarehouseRecordByPage- <==      Total: 4
2020/06/24-09:08:36 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseRecordMapper.inquiryCount- ==>  Preparing: SELECT count(*) from sj_warehouserecord where WarehouseNo like concat('%',?,'%') and WarehouseDate >= ? and WarehouseDate < ? 
2020/06/24-09:08:36 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseRecordMapper.inquiryCount- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-24 23:59:59.0(Timestamp)
2020/06/24-09:08:36 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseRecordMapper.inquiryCount- <==      Total: 1
2020/06/24-09:08:38 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.GoodsRecordMapper.inquiryGoodsRecordByID- ==>  Preparing: select * from sj_goodsrecord where WarehouseRecordID = ? 
2020/06/24-09:08:38 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.GoodsRecordMapper.inquiryGoodsRecordByID- ==> Parameters: 85(Integer)
2020/06/24-09:08:38 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.GoodsRecordMapper.inquiryGoodsRecordByID- <==      Total: 13
2020/06/24-09:08:38 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehouse where GoodsID = ?), 0) 
2020/06/24-09:08:38 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==> Parameters: 1(Integer)
2020/06/24-09:08:38 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/24-09:08:38 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehouse where GoodsID = ?), 0) 
2020/06/24-09:08:38 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==> Parameters: 2(Integer)
2020/06/24-09:08:38 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/24-09:08:38 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehouse where GoodsID = ?), 0) 
2020/06/24-09:08:38 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==> Parameters: 3(Integer)
2020/06/24-09:08:38 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/24-09:08:38 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehouse where GoodsID = ?), 0) 
2020/06/24-09:08:38 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==> Parameters: 4(Integer)
2020/06/24-09:08:38 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/24-09:08:38 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehouse where GoodsID = ?), 0) 
2020/06/24-09:08:38 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==> Parameters: 5(Integer)
2020/06/24-09:08:38 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/24-09:08:38 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehouse where GoodsID = ?), 0) 
2020/06/24-09:08:38 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==> Parameters: 6(Integer)
2020/06/24-09:08:38 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/24-09:08:38 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehouse where GoodsID = ?), 0) 
2020/06/24-09:08:38 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==> Parameters: 7(Integer)
2020/06/24-09:08:38 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/24-09:08:38 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehouse where GoodsID = ?), 0) 
2020/06/24-09:08:38 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==> Parameters: 8(Integer)
2020/06/24-09:08:38 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/24-09:08:38 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehouse where GoodsID = ?), 0) 
2020/06/24-09:08:38 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==> Parameters: 9(Integer)
2020/06/24-09:08:38 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/24-09:08:38 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehouse where GoodsID = ?), 0) 
2020/06/24-09:08:38 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==> Parameters: 10(Integer)
2020/06/24-09:08:38 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/24-09:08:38 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehouse where GoodsID = ?), 0) 
2020/06/24-09:08:38 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==> Parameters: 11(Integer)
2020/06/24-09:08:38 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/24-09:08:38 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehouse where GoodsID = ?), 0) 
2020/06/24-09:08:38 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==> Parameters: 12(Integer)
2020/06/24-09:08:38 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/24-09:08:38 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehouse where GoodsID = ?), 0) 
2020/06/24-09:08:38 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==> Parameters: 13(Integer)
2020/06/24-09:08:38 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/24-09:08:39 [http-nio-8083-exec-8] DEBUG com.huijian.rac.mapper.GoodsRecordMapper.inquiryGoodsRecordByID- ==>  Preparing: select * from sj_goodsrecord where WarehouseRecordID = ? 
2020/06/24-09:08:39 [http-nio-8083-exec-8] DEBUG com.huijian.rac.mapper.GoodsRecordMapper.inquiryGoodsRecordByID- ==> Parameters: 85(Integer)
2020/06/24-09:08:39 [http-nio-8083-exec-8] DEBUG com.huijian.rac.mapper.GoodsRecordMapper.inquiryGoodsRecordByID- <==      Total: 13
2020/06/24-09:08:39 [http-nio-8083-exec-8] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehouse where GoodsID = ?), 0) 
2020/06/24-09:08:39 [http-nio-8083-exec-8] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==> Parameters: 1(Integer)
2020/06/24-09:08:39 [http-nio-8083-exec-8] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/24-09:08:39 [http-nio-8083-exec-8] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehouse where GoodsID = ?), 0) 
2020/06/24-09:08:39 [http-nio-8083-exec-8] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==> Parameters: 2(Integer)
2020/06/24-09:08:39 [http-nio-8083-exec-8] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/24-09:08:39 [http-nio-8083-exec-8] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehouse where GoodsID = ?), 0) 
2020/06/24-09:08:39 [http-nio-8083-exec-8] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==> Parameters: 3(Integer)
2020/06/24-09:08:39 [http-nio-8083-exec-8] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/24-09:08:39 [http-nio-8083-exec-8] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehouse where GoodsID = ?), 0) 
2020/06/24-09:08:39 [http-nio-8083-exec-8] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==> Parameters: 4(Integer)
2020/06/24-09:08:39 [http-nio-8083-exec-8] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/24-09:08:39 [http-nio-8083-exec-8] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehouse where GoodsID = ?), 0) 
2020/06/24-09:08:39 [http-nio-8083-exec-8] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==> Parameters: 5(Integer)
2020/06/24-09:08:39 [http-nio-8083-exec-8] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/24-09:08:39 [http-nio-8083-exec-8] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehouse where GoodsID = ?), 0) 
2020/06/24-09:08:39 [http-nio-8083-exec-8] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==> Parameters: 6(Integer)
2020/06/24-09:08:39 [http-nio-8083-exec-8] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/24-09:08:39 [http-nio-8083-exec-8] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehouse where GoodsID = ?), 0) 
2020/06/24-09:08:39 [http-nio-8083-exec-8] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==> Parameters: 7(Integer)
2020/06/24-09:08:39 [http-nio-8083-exec-8] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/24-09:08:39 [http-nio-8083-exec-8] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehouse where GoodsID = ?), 0) 
2020/06/24-09:08:39 [http-nio-8083-exec-8] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==> Parameters: 8(Integer)
2020/06/24-09:08:39 [http-nio-8083-exec-8] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/24-09:08:39 [http-nio-8083-exec-8] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehouse where GoodsID = ?), 0) 
2020/06/24-09:08:39 [http-nio-8083-exec-8] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==> Parameters: 9(Integer)
2020/06/24-09:08:39 [http-nio-8083-exec-8] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/24-09:08:39 [http-nio-8083-exec-8] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehouse where GoodsID = ?), 0) 
2020/06/24-09:08:39 [http-nio-8083-exec-8] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==> Parameters: 10(Integer)
2020/06/24-09:08:39 [http-nio-8083-exec-8] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/24-09:08:39 [http-nio-8083-exec-8] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehouse where GoodsID = ?), 0) 
2020/06/24-09:08:39 [http-nio-8083-exec-8] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==> Parameters: 11(Integer)
2020/06/24-09:08:39 [http-nio-8083-exec-8] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/24-09:08:39 [http-nio-8083-exec-8] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehouse where GoodsID = ?), 0) 
2020/06/24-09:08:39 [http-nio-8083-exec-8] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==> Parameters: 12(Integer)
2020/06/24-09:08:39 [http-nio-8083-exec-8] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/24-09:08:39 [http-nio-8083-exec-8] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehouse where GoodsID = ?), 0) 
2020/06/24-09:08:39 [http-nio-8083-exec-8] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==> Parameters: 13(Integer)
2020/06/24-09:08:39 [http-nio-8083-exec-8] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/24-09:08:49 [http-nio-8083-exec-7] DEBUG com.huijian.rac.mapper.OutboundRecordMapper.getOutboundRecordByPage- ==>  Preparing: SELECT * from sj_leavestocklist where LeaveStockNo like concat('%',?,'%') and LeaveStock >= ? and LeaveStock < ? order by LeaveStockNo desc limit ?, ? 
2020/06/24-09:08:49 [http-nio-8083-exec-7] DEBUG com.huijian.rac.mapper.OutboundRecordMapper.getOutboundRecordByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-24 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/24-09:08:49 [http-nio-8083-exec-7] DEBUG com.huijian.rac.mapper.OutboundRecordMapper.getOutboundRecordByPage- <==      Total: 0
2020/06/24-09:08:50 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.OutboundRecordMapper.getOutboundRecordByPage- ==>  Preparing: SELECT * from sj_leavestocklist where LeaveStockNo like concat('%',?,'%') and LeaveStock >= ? and LeaveStock < ? order by LeaveStockNo desc limit ?, ? 
2020/06/24-09:08:50 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.OutboundRecordMapper.getOutboundRecordByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-24 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/24-09:08:50 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.OutboundRecordMapper.getOutboundRecordByPage- <==      Total: 0
2020/06/24-09:08:58 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.OutboundRecordMapper.getOutboundRecordByPage- ==>  Preparing: SELECT * from sj_leavestocklist where LeaveStockNo like concat('%',?,'%') and LeaveStock >= ? and LeaveStock < ? order by LeaveStockNo desc limit ?, ? 
2020/06/24-09:08:58 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.OutboundRecordMapper.getOutboundRecordByPage- ==> Parameters: (String), 2019-12-01 00:00:00.0(Timestamp), 2020-05-01 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/24-09:08:58 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.OutboundRecordMapper.getOutboundRecordByPage- <==      Total: 10
2020/06/24-09:08:58 [http-nio-8083-exec-4] INFO  com.netflix.config.ChainedDynamicProperty- Flipping property: rac-order-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020/06/24-09:08:59 [http-nio-8083-exec-4] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer- Shutdown hook installed for: NFLoadBalancer-PingTimer-rac-order-service
2020/06/24-09:08:59 [http-nio-8083-exec-4] INFO  com.netflix.loadbalancer.BaseLoadBalancer- Client: rac-order-service instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=rac-order-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020/06/24-09:08:59 [http-nio-8083-exec-4] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer- Using serverListUpdater PollingServerListUpdater
2020/06/24-09:08:59 [http-nio-8083-exec-4] INFO  com.netflix.config.ChainedDynamicProperty- Flipping property: rac-order-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020/06/24-09:08:59 [http-nio-8083-exec-4] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer- DynamicServerListLoadBalancer for client rac-order-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=rac-order-service,current list of Servers=[MSI.mshome.net:8084],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:MSI.mshome.net:8084;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 GMT+08:00 1970;	First connection made: Thu Jan 01 08:00:00 GMT+08:00 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@52e21108
2020/06/24-09:08:59 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==>  Preparing: select OrderState from sj_order where OrderNo = ? 
2020/06/24-09:08:59 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==> Parameters: 9016002000027(String)
2020/06/24-09:08:59 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- <==      Total: 1
2020/06/24-09:08:59 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==>  Preparing: select OrderState from sj_order where OrderNo = ? 
2020/06/24-09:08:59 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==> Parameters: 9016002000027(String)
2020/06/24-09:08:59 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- <==      Total: 1
2020/06/24-09:08:59 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==>  Preparing: select OrderState from sj_order where OrderNo = ? 
2020/06/24-09:08:59 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==> Parameters: 9016002000026(String)
2020/06/24-09:08:59 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- <==      Total: 1
2020/06/24-09:08:59 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==>  Preparing: select OrderState from sj_order where OrderNo = ? 
2020/06/24-09:08:59 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==> Parameters: 9016002000027(String)
2020/06/24-09:08:59 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- <==      Total: 1
2020/06/24-09:08:59 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==>  Preparing: select OrderState from sj_order where OrderNo = ? 
2020/06/24-09:08:59 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==> Parameters: 9016002000026(String)
2020/06/24-09:08:59 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- <==      Total: 1
2020/06/24-09:08:59 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==>  Preparing: select OrderState from sj_order where OrderNo = ? 
2020/06/24-09:08:59 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==> Parameters: 9016002000022(String)
2020/06/24-09:08:59 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- <==      Total: 1
2020/06/24-09:08:59 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==>  Preparing: select OrderState from sj_order where OrderNo = ? 
2020/06/24-09:08:59 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==> Parameters: 9016002000021(String)
2020/06/24-09:08:59 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- <==      Total: 1
2020/06/24-09:08:59 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==>  Preparing: select OrderState from sj_order where OrderNo = ? 
2020/06/24-09:08:59 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==> Parameters: 9016002000020(String)
2020/06/24-09:08:59 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- <==      Total: 1
2020/06/24-09:08:59 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==>  Preparing: select OrderState from sj_order where OrderNo = ? 
2020/06/24-09:08:59 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==> Parameters: 9016002000019(String)
2020/06/24-09:08:59 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- <==      Total: 1
2020/06/24-09:08:59 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==>  Preparing: select OrderState from sj_order where OrderNo = ? 
2020/06/24-09:08:59 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==> Parameters: 9016002000018(String)
2020/06/24-09:08:59 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- <==      Total: 1
2020/06/24-09:09:00 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty- Flipping property: rac-order-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020/06/24-09:09:00 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.LeaveStockListDetailMapper.inquiryLeaveStockListDetail- ==>  Preparing: select * from sj_leavestocklistdetail where LeaveStockNo = ? 
2020/06/24-09:09:00 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.LeaveStockListDetailMapper.inquiryLeaveStockListDetail- ==> Parameters: 202000013(Integer)
2020/06/24-09:09:00 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.LeaveStockListDetailMapper.inquiryLeaveStockListDetail- <==      Total: 0
2020/06/24-09:09:00 [http-nio-8083-exec-10] DEBUG com.huijian.rac.mapper.LeaveStockListDetailMapper.inquiryLeaveStockListDetail- ==>  Preparing: select * from sj_leavestocklistdetail where LeaveStockNo = ? 
2020/06/24-09:09:00 [http-nio-8083-exec-10] DEBUG com.huijian.rac.mapper.LeaveStockListDetailMapper.inquiryLeaveStockListDetail- ==> Parameters: 202000014(Integer)
2020/06/24-09:09:00 [http-nio-8083-exec-10] DEBUG com.huijian.rac.mapper.LeaveStockListDetailMapper.inquiryLeaveStockListDetail- <==      Total: 1
2020/06/24-09:09:00 [http-nio-8083-exec-10] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.findGoodsIDByGoodsName- ==>  Preparing: select GoodsID from sj_goodsdictionary where GoodsName = ? 
2020/06/24-09:09:00 [http-nio-8083-exec-10] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.findGoodsIDByGoodsName- ==> Parameters: 1(String)
2020/06/24-09:09:00 [http-nio-8083-exec-10] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.findGoodsIDByGoodsName- <==      Total: 0
2020/06/24-09:09:00 [http-nio-8083-exec-10] ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]- Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.apache.ibatis.binding.BindingException: Mapper method 'com.huijian.rac.mapper.GoodsDictionaryMapper.findGoodsIDByGoodsName attempted to return null from a method with a primitive return type (int).] with root cause
org.apache.ibatis.binding.BindingException: Mapper method 'com.huijian.rac.mapper.GoodsDictionaryMapper.findGoodsIDByGoodsName attempted to return null from a method with a primitive return type (int).
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:102) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:93) ~[mybatis-3.5.3.jar:3.5.3]
	at com.sun.proxy.$Proxy101.findGoodsIDByGoodsName(Unknown Source) ~[na:na]
	at com.huijian.rac.service.OutboundRecordService.lambda$inquiryLeaveStockListDetail$1(OutboundRecordService.java:54) ~[classes/:na]
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193) ~[na:1.8.0_231]
	at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1382) ~[na:1.8.0_231]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482) ~[na:1.8.0_231]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472) ~[na:1.8.0_231]
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708) ~[na:1.8.0_231]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[na:1.8.0_231]
	at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499) ~[na:1.8.0_231]
	at com.huijian.rac.service.OutboundRecordService.inquiryLeaveStockListDetail(OutboundRecordService.java:58) ~[classes/:na]
	at com.huijian.rac.service.OutboundRecordService$$FastClassBySpringCGLIB$$9f76092e.invoke(<generated>) ~[classes/:na]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685) ~[spring-aop-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at com.huijian.rac.service.OutboundRecordService$$EnhancerBySpringCGLIB$$a0c6eb1b.inquiryLeaveStockListDetail(<generated>) ~[classes/:na]
	at com.huijian.rac.controller.OutboundRecordController.inquiryLeaveStockListDetail(OutboundRecordController.java:81) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_231]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_231]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_231]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_231]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_231]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_231]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_231]
2020/06/24-09:09:03 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.LeaveStockListDetailMapper.inquiryLeaveStockListDetail- ==>  Preparing: select * from sj_leavestocklistdetail where LeaveStockNo = ? 
2020/06/24-09:09:03 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.LeaveStockListDetailMapper.inquiryLeaveStockListDetail- ==> Parameters: 202000013(Integer)
2020/06/24-09:09:03 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.LeaveStockListDetailMapper.inquiryLeaveStockListDetail- <==      Total: 0
2020/06/24-09:09:05 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.LeaveStockListDetailMapper.inquiryLeaveStockListDetail- ==>  Preparing: select * from sj_leavestocklistdetail where LeaveStockNo = ? 
2020/06/24-09:09:05 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.LeaveStockListDetailMapper.inquiryLeaveStockListDetail- ==> Parameters: 202000014(Integer)
2020/06/24-09:09:05 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.LeaveStockListDetailMapper.inquiryLeaveStockListDetail- <==      Total: 1
2020/06/24-09:09:05 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.findGoodsIDByGoodsName- ==>  Preparing: select GoodsID from sj_goodsdictionary where GoodsName = ? 
2020/06/24-09:09:05 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.findGoodsIDByGoodsName- ==> Parameters: 1(String)
2020/06/24-09:09:05 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.findGoodsIDByGoodsName- <==      Total: 0
2020/06/24-09:09:05 [http-nio-8083-exec-3] ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]- Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.apache.ibatis.binding.BindingException: Mapper method 'com.huijian.rac.mapper.GoodsDictionaryMapper.findGoodsIDByGoodsName attempted to return null from a method with a primitive return type (int).] with root cause
org.apache.ibatis.binding.BindingException: Mapper method 'com.huijian.rac.mapper.GoodsDictionaryMapper.findGoodsIDByGoodsName attempted to return null from a method with a primitive return type (int).
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:102) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:93) ~[mybatis-3.5.3.jar:3.5.3]
	at com.sun.proxy.$Proxy101.findGoodsIDByGoodsName(Unknown Source) ~[na:na]
	at com.huijian.rac.service.OutboundRecordService.lambda$inquiryLeaveStockListDetail$1(OutboundRecordService.java:54) ~[classes/:na]
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193) ~[na:1.8.0_231]
	at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1382) ~[na:1.8.0_231]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482) ~[na:1.8.0_231]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472) ~[na:1.8.0_231]
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708) ~[na:1.8.0_231]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[na:1.8.0_231]
	at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499) ~[na:1.8.0_231]
	at com.huijian.rac.service.OutboundRecordService.inquiryLeaveStockListDetail(OutboundRecordService.java:58) ~[classes/:na]
	at com.huijian.rac.service.OutboundRecordService$$FastClassBySpringCGLIB$$9f76092e.invoke(<generated>) ~[classes/:na]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685) ~[spring-aop-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at com.huijian.rac.service.OutboundRecordService$$EnhancerBySpringCGLIB$$a0c6eb1b.inquiryLeaveStockListDetail(<generated>) ~[classes/:na]
	at com.huijian.rac.controller.OutboundRecordController.inquiryLeaveStockListDetail(OutboundRecordController.java:81) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_231]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_231]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_231]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_231]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_231]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_231]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_231]
2020/06/24-09:10:17 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.LeaveStockListDetailMapper.inquiryLeaveStockListDetail- ==>  Preparing: select * from sj_leavestocklistdetail where LeaveStockNo = ? 
2020/06/24-09:10:17 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.LeaveStockListDetailMapper.inquiryLeaveStockListDetail- ==> Parameters: 202000013(Integer)
2020/06/24-09:10:17 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.LeaveStockListDetailMapper.inquiryLeaveStockListDetail- <==      Total: 0
2020/06/24-09:10:19 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.LeaveStockListDetailMapper.inquiryLeaveStockListDetail- ==>  Preparing: select * from sj_leavestocklistdetail where LeaveStockNo = ? 
2020/06/24-09:10:19 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.LeaveStockListDetailMapper.inquiryLeaveStockListDetail- ==> Parameters: 202000012(Integer)
2020/06/24-09:10:19 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.LeaveStockListDetailMapper.inquiryLeaveStockListDetail- <==      Total: 2
2020/06/24-09:10:19 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.findGoodsIDByGoodsName- ==>  Preparing: select GoodsID from sj_goodsdictionary where GoodsName = ? 
2020/06/24-09:10:19 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.findGoodsIDByGoodsName- ==> Parameters: 3(String)
2020/06/24-09:10:19 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.findGoodsIDByGoodsName- <==      Total: 1
2020/06/24-09:10:19 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehouse where GoodsID = ?), 0) 
2020/06/24-09:10:19 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- ==> Parameters: 3(Integer)
2020/06/24-09:10:19 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- <==      Total: 1
2020/06/24-09:10:19 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehouse where GoodsID = ?), 0) 
2020/06/24-09:10:19 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- ==> Parameters: 3(Integer)
2020/06/24-09:10:19 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- <==      Total: 1
2020/06/24-09:10:19 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.findGoodsIDByGoodsName- ==>  Preparing: select GoodsID from sj_goodsdictionary where GoodsName = ? 
2020/06/24-09:10:19 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.findGoodsIDByGoodsName- ==> Parameters: 6(String)
2020/06/24-09:10:19 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.findGoodsIDByGoodsName- <==      Total: 1
2020/06/24-09:10:19 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehouse where GoodsID = ?), 0) 
2020/06/24-09:10:19 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- ==> Parameters: 6(Integer)
2020/06/24-09:10:19 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- <==      Total: 1
2020/06/24-09:10:19 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehouse where GoodsID = ?), 0) 
2020/06/24-09:10:19 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- ==> Parameters: 6(Integer)
2020/06/24-09:10:19 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- <==      Total: 1
2020/06/24-09:10:20 [http-nio-8083-exec-8] DEBUG com.huijian.rac.mapper.LeaveStockListDetailMapper.inquiryLeaveStockListDetail- ==>  Preparing: select * from sj_leavestocklistdetail where LeaveStockNo = ? 
2020/06/24-09:10:20 [http-nio-8083-exec-8] DEBUG com.huijian.rac.mapper.LeaveStockListDetailMapper.inquiryLeaveStockListDetail- ==> Parameters: 202000011(Integer)
2020/06/24-09:10:20 [http-nio-8083-exec-8] DEBUG com.huijian.rac.mapper.LeaveStockListDetailMapper.inquiryLeaveStockListDetail- <==      Total: 0
2020/06/24-09:10:21 [http-nio-8083-exec-7] DEBUG com.huijian.rac.mapper.LeaveStockListDetailMapper.inquiryLeaveStockListDetail- ==>  Preparing: select * from sj_leavestocklistdetail where LeaveStockNo = ? 
2020/06/24-09:10:21 [http-nio-8083-exec-7] DEBUG com.huijian.rac.mapper.LeaveStockListDetailMapper.inquiryLeaveStockListDetail- ==> Parameters: 202000014(Integer)
2020/06/24-09:10:21 [http-nio-8083-exec-7] DEBUG com.huijian.rac.mapper.LeaveStockListDetailMapper.inquiryLeaveStockListDetail- <==      Total: 1
2020/06/24-09:10:21 [http-nio-8083-exec-7] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.findGoodsIDByGoodsName- ==>  Preparing: select GoodsID from sj_goodsdictionary where GoodsName = ? 
2020/06/24-09:10:21 [http-nio-8083-exec-7] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.findGoodsIDByGoodsName- ==> Parameters: 1(String)
2020/06/24-09:10:21 [http-nio-8083-exec-7] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.findGoodsIDByGoodsName- <==      Total: 0
2020/06/24-09:10:21 [http-nio-8083-exec-7] ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]- Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.apache.ibatis.binding.BindingException: Mapper method 'com.huijian.rac.mapper.GoodsDictionaryMapper.findGoodsIDByGoodsName attempted to return null from a method with a primitive return type (int).] with root cause
org.apache.ibatis.binding.BindingException: Mapper method 'com.huijian.rac.mapper.GoodsDictionaryMapper.findGoodsIDByGoodsName attempted to return null from a method with a primitive return type (int).
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:102) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:93) ~[mybatis-3.5.3.jar:3.5.3]
	at com.sun.proxy.$Proxy101.findGoodsIDByGoodsName(Unknown Source) ~[na:na]
	at com.huijian.rac.service.OutboundRecordService.lambda$inquiryLeaveStockListDetail$1(OutboundRecordService.java:54) ~[classes/:na]
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193) ~[na:1.8.0_231]
	at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1382) ~[na:1.8.0_231]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482) ~[na:1.8.0_231]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472) ~[na:1.8.0_231]
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708) ~[na:1.8.0_231]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[na:1.8.0_231]
	at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499) ~[na:1.8.0_231]
	at com.huijian.rac.service.OutboundRecordService.inquiryLeaveStockListDetail(OutboundRecordService.java:58) ~[classes/:na]
	at com.huijian.rac.service.OutboundRecordService$$FastClassBySpringCGLIB$$9f76092e.invoke(<generated>) ~[classes/:na]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685) ~[spring-aop-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at com.huijian.rac.service.OutboundRecordService$$EnhancerBySpringCGLIB$$a0c6eb1b.inquiryLeaveStockListDetail(<generated>) ~[classes/:na]
	at com.huijian.rac.controller.OutboundRecordController.inquiryLeaveStockListDetail(OutboundRecordController.java:81) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_231]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_231]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_231]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_231]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_231]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_231]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_231]
2020/06/24-09:10:31 [http-nio-8083-exec-2] ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]- Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.ArrayIndexOutOfBoundsException: 1] with root cause
java.lang.ArrayIndexOutOfBoundsException: 1
	at com.huijian.rac.service.OutboundRecordService.deleteleaveStockListDetailByGoodsIDAndNo(OutboundRecordService.java:139) ~[classes/:na]
	at com.huijian.rac.service.OutboundRecordService$$FastClassBySpringCGLIB$$9f76092e.invoke(<generated>) ~[classes/:na]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685) ~[spring-aop-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at com.huijian.rac.service.OutboundRecordService$$EnhancerBySpringCGLIB$$a0c6eb1b.deleteleaveStockListDetailByGoodsIDAndNo(<generated>) ~[classes/:na]
	at com.huijian.rac.controller.OutboundRecordController.delete(OutboundRecordController.java:184) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_231]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_231]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_231]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_231]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doDelete(FrameworkServlet.java:931) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:666) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_231]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_231]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_231]
2020/06/24-09:11:50 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-09:12:53 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-09:13:13 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.OutboundRecordMapper.getOutboundRecordByPage- ==>  Preparing: SELECT * from sj_leavestocklist where LeaveStockNo like concat('%',?,'%') and LeaveStock >= ? and LeaveStock < ? order by LeaveStockNo desc limit ?, ? 
2020/06/24-09:13:13 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.OutboundRecordMapper.getOutboundRecordByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-24 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/24-09:13:13 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.OutboundRecordMapper.getOutboundRecordByPage- <==      Total: 0
2020/06/24-09:13:14 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.OutboundRecordMapper.getOutboundRecordByPage- ==>  Preparing: SELECT * from sj_leavestocklist where LeaveStockNo like concat('%',?,'%') and LeaveStock >= ? and LeaveStock < ? order by LeaveStockNo desc limit ?, ? 
2020/06/24-09:13:14 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.OutboundRecordMapper.getOutboundRecordByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-24 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/24-09:13:14 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.OutboundRecordMapper.getOutboundRecordByPage- <==      Total: 0
2020/06/24-09:13:21 [http-nio-8083-exec-10] DEBUG com.huijian.rac.mapper.OutboundRecordMapper.getOutboundRecordByPage- ==>  Preparing: SELECT * from sj_leavestocklist where LeaveStockNo like concat('%',?,'%') and LeaveStock >= ? and LeaveStock < ? order by LeaveStockNo desc limit ?, ? 
2020/06/24-09:13:21 [http-nio-8083-exec-10] DEBUG com.huijian.rac.mapper.OutboundRecordMapper.getOutboundRecordByPage- ==> Parameters: (String), 2020-01-01 00:00:00.0(Timestamp), 2020-07-01 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/24-09:13:21 [http-nio-8083-exec-10] DEBUG com.huijian.rac.mapper.OutboundRecordMapper.getOutboundRecordByPage- <==      Total: 10
2020/06/24-09:13:21 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==>  Preparing: select OrderState from sj_order where OrderNo = ? 
2020/06/24-09:13:21 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==> Parameters: 9016002000027(String)
2020/06/24-09:13:22 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- <==      Total: 1
2020/06/24-09:13:22 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==>  Preparing: select OrderState from sj_order where OrderNo = ? 
2020/06/24-09:13:22 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==> Parameters: 9016002000026(String)
2020/06/24-09:13:22 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- <==      Total: 1
2020/06/24-09:13:22 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==>  Preparing: select OrderState from sj_order where OrderNo = ? 
2020/06/24-09:13:22 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==> Parameters: 9016002000027(String)
2020/06/24-09:13:22 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- <==      Total: 1
2020/06/24-09:13:22 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==>  Preparing: select OrderState from sj_order where OrderNo = ? 
2020/06/24-09:13:22 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==> Parameters: 9016002000026(String)
2020/06/24-09:13:22 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- <==      Total: 1
2020/06/24-09:13:22 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==>  Preparing: select OrderState from sj_order where OrderNo = ? 
2020/06/24-09:13:22 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==> Parameters: 9016002000022(String)
2020/06/24-09:13:22 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- <==      Total: 1
2020/06/24-09:13:22 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==>  Preparing: select OrderState from sj_order where OrderNo = ? 
2020/06/24-09:13:22 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==> Parameters: 9016002000021(String)
2020/06/24-09:13:22 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- <==      Total: 1
2020/06/24-09:13:22 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==>  Preparing: select OrderState from sj_order where OrderNo = ? 
2020/06/24-09:13:22 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==> Parameters: 9016002000020(String)
2020/06/24-09:13:22 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- <==      Total: 1
2020/06/24-09:13:22 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==>  Preparing: select OrderState from sj_order where OrderNo = ? 
2020/06/24-09:13:22 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==> Parameters: 9016002000019(String)
2020/06/24-09:13:22 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- <==      Total: 1
2020/06/24-09:13:22 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==>  Preparing: select OrderState from sj_order where OrderNo = ? 
2020/06/24-09:13:22 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==> Parameters: 9016002000018(String)
2020/06/24-09:13:22 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- <==      Total: 1
2020/06/24-09:13:22 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==>  Preparing: select OrderState from sj_order where OrderNo = ? 
2020/06/24-09:13:22 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==> Parameters: 9016002000017(String)
2020/06/24-09:13:22 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- <==      Total: 1
2020/06/24-09:13:23 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.LeaveStockListDetailMapper.inquiryLeaveStockListDetail- ==>  Preparing: select * from sj_leavestocklistdetail where LeaveStockNo = ? 
2020/06/24-09:13:23 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.LeaveStockListDetailMapper.inquiryLeaveStockListDetail- ==> Parameters: 202000013(Integer)
2020/06/24-09:13:23 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.LeaveStockListDetailMapper.inquiryLeaveStockListDetail- <==      Total: 0
2020/06/24-09:13:24 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.LeaveStockListDetailMapper.inquiryLeaveStockListDetail- ==>  Preparing: select * from sj_leavestocklistdetail where LeaveStockNo = ? 
2020/06/24-09:13:24 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.LeaveStockListDetailMapper.inquiryLeaveStockListDetail- ==> Parameters: 202000013(Integer)
2020/06/24-09:13:24 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.LeaveStockListDetailMapper.inquiryLeaveStockListDetail- <==      Total: 0
2020/06/24-09:13:25 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.LeaveStockListDetailMapper.inquiryLeaveStockListDetail- ==>  Preparing: select * from sj_leavestocklistdetail where LeaveStockNo = ? 
2020/06/24-09:13:25 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.LeaveStockListDetailMapper.inquiryLeaveStockListDetail- ==> Parameters: 202000012(Integer)
2020/06/24-09:13:25 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.LeaveStockListDetailMapper.inquiryLeaveStockListDetail- <==      Total: 2
2020/06/24-09:13:25 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.findGoodsIDByGoodsName- ==>  Preparing: select GoodsID from sj_goodsdictionary where GoodsName = ? 
2020/06/24-09:13:25 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.findGoodsIDByGoodsName- ==> Parameters: 3(String)
2020/06/24-09:13:25 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.findGoodsIDByGoodsName- <==      Total: 1
2020/06/24-09:13:25 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehouse where GoodsID = ?), 0) 
2020/06/24-09:13:25 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- ==> Parameters: 3(Integer)
2020/06/24-09:13:25 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- <==      Total: 1
2020/06/24-09:13:25 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehouse where GoodsID = ?), 0) 
2020/06/24-09:13:25 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- ==> Parameters: 3(Integer)
2020/06/24-09:13:25 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- <==      Total: 1
2020/06/24-09:13:25 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.findGoodsIDByGoodsName- ==>  Preparing: select GoodsID from sj_goodsdictionary where GoodsName = ? 
2020/06/24-09:13:25 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.findGoodsIDByGoodsName- ==> Parameters: 6(String)
2020/06/24-09:13:25 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.findGoodsIDByGoodsName- <==      Total: 1
2020/06/24-09:13:25 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehouse where GoodsID = ?), 0) 
2020/06/24-09:13:25 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- ==> Parameters: 6(Integer)
2020/06/24-09:13:25 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- <==      Total: 1
2020/06/24-09:13:25 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehouse where GoodsID = ?), 0) 
2020/06/24-09:13:25 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- ==> Parameters: 6(Integer)
2020/06/24-09:13:25 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- <==      Total: 1
2020/06/24-09:13:26 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.LeaveStockListDetailMapper.inquiryLeaveStockListDetail- ==>  Preparing: select * from sj_leavestocklistdetail where LeaveStockNo = ? 
2020/06/24-09:13:26 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.LeaveStockListDetailMapper.inquiryLeaveStockListDetail- ==> Parameters: 202000011(Integer)
2020/06/24-09:13:26 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.LeaveStockListDetailMapper.inquiryLeaveStockListDetail- <==      Total: 0
2020/06/24-09:13:26 [http-nio-8083-exec-8] DEBUG com.huijian.rac.mapper.LeaveStockListDetailMapper.inquiryLeaveStockListDetail- ==>  Preparing: select * from sj_leavestocklistdetail where LeaveStockNo = ? 
2020/06/24-09:13:26 [http-nio-8083-exec-8] DEBUG com.huijian.rac.mapper.LeaveStockListDetailMapper.inquiryLeaveStockListDetail- ==> Parameters: 202000010(Integer)
2020/06/24-09:13:26 [http-nio-8083-exec-8] DEBUG com.huijian.rac.mapper.LeaveStockListDetailMapper.inquiryLeaveStockListDetail- <==      Total: 2
2020/06/24-09:13:26 [http-nio-8083-exec-8] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.findGoodsIDByGoodsName- ==>  Preparing: select GoodsID from sj_goodsdictionary where GoodsName = ? 
2020/06/24-09:13:26 [http-nio-8083-exec-8] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.findGoodsIDByGoodsName- ==> Parameters: iphone12(String)
2020/06/24-09:13:26 [http-nio-8083-exec-8] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.findGoodsIDByGoodsName- <==      Total: 1
2020/06/24-09:13:26 [http-nio-8083-exec-8] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehouse where GoodsID = ?), 0) 
2020/06/24-09:13:26 [http-nio-8083-exec-8] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- ==> Parameters: 1(Integer)
2020/06/24-09:13:26 [http-nio-8083-exec-8] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- <==      Total: 1
2020/06/24-09:13:26 [http-nio-8083-exec-8] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehouse where GoodsID = ?), 0) 
2020/06/24-09:13:26 [http-nio-8083-exec-8] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- ==> Parameters: 1(Integer)
2020/06/24-09:13:26 [http-nio-8083-exec-8] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- <==      Total: 1
2020/06/24-09:13:26 [http-nio-8083-exec-8] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.findGoodsIDByGoodsName- ==>  Preparing: select GoodsID from sj_goodsdictionary where GoodsName = ? 
2020/06/24-09:13:26 [http-nio-8083-exec-8] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.findGoodsIDByGoodsName- ==> Parameters: 2(String)
2020/06/24-09:13:27 [http-nio-8083-exec-8] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.findGoodsIDByGoodsName- <==      Total: 1
2020/06/24-09:13:27 [http-nio-8083-exec-8] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehouse where GoodsID = ?), 0) 
2020/06/24-09:13:27 [http-nio-8083-exec-8] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- ==> Parameters: 2(Integer)
2020/06/24-09:13:27 [http-nio-8083-exec-8] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- <==      Total: 1
2020/06/24-09:13:27 [http-nio-8083-exec-8] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehouse where GoodsID = ?), 0) 
2020/06/24-09:13:27 [http-nio-8083-exec-8] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- ==> Parameters: 2(Integer)
2020/06/24-09:13:27 [http-nio-8083-exec-8] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- <==      Total: 1
2020/06/24-09:13:27 [http-nio-8083-exec-7] DEBUG com.huijian.rac.mapper.LeaveStockListDetailMapper.inquiryLeaveStockListDetail- ==>  Preparing: select * from sj_leavestocklistdetail where LeaveStockNo = ? 
2020/06/24-09:13:27 [http-nio-8083-exec-7] DEBUG com.huijian.rac.mapper.LeaveStockListDetailMapper.inquiryLeaveStockListDetail- ==> Parameters: 202000006(Integer)
2020/06/24-09:13:27 [http-nio-8083-exec-7] DEBUG com.huijian.rac.mapper.LeaveStockListDetailMapper.inquiryLeaveStockListDetail- <==      Total: 0
2020/06/24-09:13:28 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.LeaveStockListDetailMapper.inquiryLeaveStockListDetail- ==>  Preparing: select * from sj_leavestocklistdetail where LeaveStockNo = ? 
2020/06/24-09:13:28 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.LeaveStockListDetailMapper.inquiryLeaveStockListDetail- ==> Parameters: 202000004(Integer)
2020/06/24-09:13:28 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.LeaveStockListDetailMapper.inquiryLeaveStockListDetail- <==      Total: 1
2020/06/24-09:13:28 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.findGoodsIDByGoodsName- ==>  Preparing: select GoodsID from sj_goodsdictionary where GoodsName = ? 
2020/06/24-09:13:28 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.findGoodsIDByGoodsName- ==> Parameters: iphone12(String)
2020/06/24-09:13:28 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.findGoodsIDByGoodsName- <==      Total: 1
2020/06/24-09:13:28 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehouse where GoodsID = ?), 0) 
2020/06/24-09:13:28 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- ==> Parameters: 1(Integer)
2020/06/24-09:13:28 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- <==      Total: 1
2020/06/24-09:13:28 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehouse where GoodsID = ?), 0) 
2020/06/24-09:13:28 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- ==> Parameters: 1(Integer)
2020/06/24-09:13:28 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- <==      Total: 1
2020/06/24-09:13:29 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.LeaveStockListDetailMapper.inquiryLeaveStockListDetail- ==>  Preparing: select * from sj_leavestocklistdetail where LeaveStockNo = ? 
2020/06/24-09:13:29 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.LeaveStockListDetailMapper.inquiryLeaveStockListDetail- ==> Parameters: 202000005(Integer)
2020/06/24-09:13:29 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.LeaveStockListDetailMapper.inquiryLeaveStockListDetail- <==      Total: 1
2020/06/24-09:13:29 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.findGoodsIDByGoodsName- ==>  Preparing: select GoodsID from sj_goodsdictionary where GoodsName = ? 
2020/06/24-09:13:29 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.findGoodsIDByGoodsName- ==> Parameters: iphone12(String)
2020/06/24-09:13:29 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.findGoodsIDByGoodsName- <==      Total: 1
2020/06/24-09:13:29 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehouse where GoodsID = ?), 0) 
2020/06/24-09:13:29 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- ==> Parameters: 1(Integer)
2020/06/24-09:13:29 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- <==      Total: 1
2020/06/24-09:13:29 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehouse where GoodsID = ?), 0) 
2020/06/24-09:13:29 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- ==> Parameters: 1(Integer)
2020/06/24-09:13:29 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- <==      Total: 1
2020/06/24-09:13:29 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.LeaveStockListDetailMapper.inquiryLeaveStockListDetail- ==>  Preparing: select * from sj_leavestocklistdetail where LeaveStockNo = ? 
2020/06/24-09:13:29 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.LeaveStockListDetailMapper.inquiryLeaveStockListDetail- ==> Parameters: 202000003(Integer)
2020/06/24-09:13:29 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.LeaveStockListDetailMapper.inquiryLeaveStockListDetail- <==      Total: 1
2020/06/24-09:13:29 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.findGoodsIDByGoodsName- ==>  Preparing: select GoodsID from sj_goodsdictionary where GoodsName = ? 
2020/06/24-09:13:29 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.findGoodsIDByGoodsName- ==> Parameters: 2(String)
2020/06/24-09:13:29 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.findGoodsIDByGoodsName- <==      Total: 1
2020/06/24-09:13:29 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehouse where GoodsID = ?), 0) 
2020/06/24-09:13:29 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- ==> Parameters: 2(Integer)
2020/06/24-09:13:29 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- <==      Total: 1
2020/06/24-09:13:29 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehouse where GoodsID = ?), 0) 
2020/06/24-09:13:29 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- ==> Parameters: 2(Integer)
2020/06/24-09:13:29 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- <==      Total: 1
2020/06/24-09:13:38 [http-nio-8083-exec-10] DEBUG com.huijian.rac.mapper.LeaveStockListDetailMapper.inquiryLeaveStockListDetail- ==>  Preparing: select * from sj_leavestocklistdetail where LeaveStockNo = ? 
2020/06/24-09:13:38 [http-nio-8083-exec-10] DEBUG com.huijian.rac.mapper.LeaveStockListDetailMapper.inquiryLeaveStockListDetail- ==> Parameters: 202000013(Integer)
2020/06/24-09:13:38 [http-nio-8083-exec-10] DEBUG com.huijian.rac.mapper.LeaveStockListDetailMapper.inquiryLeaveStockListDetail- <==      Total: 0
2020/06/24-09:13:42 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.LeaveStockListDetailMapper.inquiryLeaveStockListDetail- ==>  Preparing: select * from sj_leavestocklistdetail where LeaveStockNo = ? 
2020/06/24-09:13:42 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.LeaveStockListDetailMapper.inquiryLeaveStockListDetail- ==> Parameters: 202000012(Integer)
2020/06/24-09:13:42 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.LeaveStockListDetailMapper.inquiryLeaveStockListDetail- <==      Total: 2
2020/06/24-09:13:42 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.findGoodsIDByGoodsName- ==>  Preparing: select GoodsID from sj_goodsdictionary where GoodsName = ? 
2020/06/24-09:13:42 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.findGoodsIDByGoodsName- ==> Parameters: 3(String)
2020/06/24-09:13:42 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.findGoodsIDByGoodsName- <==      Total: 1
2020/06/24-09:13:42 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehouse where GoodsID = ?), 0) 
2020/06/24-09:13:42 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- ==> Parameters: 3(Integer)
2020/06/24-09:13:42 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- <==      Total: 1
2020/06/24-09:13:42 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehouse where GoodsID = ?), 0) 
2020/06/24-09:13:42 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- ==> Parameters: 3(Integer)
2020/06/24-09:13:42 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- <==      Total: 1
2020/06/24-09:13:42 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.findGoodsIDByGoodsName- ==>  Preparing: select GoodsID from sj_goodsdictionary where GoodsName = ? 
2020/06/24-09:13:42 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.findGoodsIDByGoodsName- ==> Parameters: 6(String)
2020/06/24-09:13:42 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.findGoodsIDByGoodsName- <==      Total: 1
2020/06/24-09:13:42 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehouse where GoodsID = ?), 0) 
2020/06/24-09:13:42 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- ==> Parameters: 6(Integer)
2020/06/24-09:13:42 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- <==      Total: 1
2020/06/24-09:13:42 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehouse where GoodsID = ?), 0) 
2020/06/24-09:13:42 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- ==> Parameters: 6(Integer)
2020/06/24-09:13:42 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- <==      Total: 1
2020/06/24-09:14:05 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseRecordMapper.getWarehouseRecordByPage- ==>  Preparing: SELECT * from sj_warehouserecord where WarehouseNo like concat('%',?,'%') and WarehouseDate >= ? and WarehouseDate < ? order by ID desc limit ?, ? 
2020/06/24-09:14:05 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseRecordMapper.getWarehouseRecordByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-24 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/24-09:14:05 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseRecordMapper.getWarehouseRecordByPage- <==      Total: 4
2020/06/24-09:14:05 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseRecordMapper.inquiryCount- ==>  Preparing: SELECT count(*) from sj_warehouserecord where WarehouseNo like concat('%',?,'%') and WarehouseDate >= ? and WarehouseDate < ? 
2020/06/24-09:14:05 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseRecordMapper.inquiryCount- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-24 23:59:59.0(Timestamp)
2020/06/24-09:14:05 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseRecordMapper.inquiryCount- <==      Total: 1
2020/06/24-09:14:05 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsRecordMapper.inquiryGoodsRecordByID- ==>  Preparing: select * from sj_goodsrecord where WarehouseRecordID = ? 
2020/06/24-09:14:05 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsRecordMapper.inquiryGoodsRecordByID- ==> Parameters: 85(Integer)
2020/06/24-09:14:05 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsRecordMapper.inquiryGoodsRecordByID- <==      Total: 13
2020/06/24-09:14:05 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehouse where GoodsID = ?), 0) 
2020/06/24-09:14:05 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==> Parameters: 1(Integer)
2020/06/24-09:14:05 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/24-09:14:05 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehouse where GoodsID = ?), 0) 
2020/06/24-09:14:05 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==> Parameters: 2(Integer)
2020/06/24-09:14:05 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/24-09:14:05 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehouse where GoodsID = ?), 0) 
2020/06/24-09:14:05 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==> Parameters: 3(Integer)
2020/06/24-09:14:06 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/24-09:14:06 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehouse where GoodsID = ?), 0) 
2020/06/24-09:14:06 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==> Parameters: 4(Integer)
2020/06/24-09:14:06 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/24-09:14:06 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehouse where GoodsID = ?), 0) 
2020/06/24-09:14:06 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==> Parameters: 5(Integer)
2020/06/24-09:14:06 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/24-09:14:06 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehouse where GoodsID = ?), 0) 
2020/06/24-09:14:06 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==> Parameters: 6(Integer)
2020/06/24-09:14:06 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/24-09:14:06 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehouse where GoodsID = ?), 0) 
2020/06/24-09:14:06 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==> Parameters: 7(Integer)
2020/06/24-09:14:06 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/24-09:14:06 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehouse where GoodsID = ?), 0) 
2020/06/24-09:14:06 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==> Parameters: 8(Integer)
2020/06/24-09:14:06 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/24-09:14:06 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehouse where GoodsID = ?), 0) 
2020/06/24-09:14:06 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==> Parameters: 9(Integer)
2020/06/24-09:14:06 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/24-09:14:06 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehouse where GoodsID = ?), 0) 
2020/06/24-09:14:06 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==> Parameters: 10(Integer)
2020/06/24-09:14:06 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/24-09:14:06 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehouse where GoodsID = ?), 0) 
2020/06/24-09:14:06 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==> Parameters: 11(Integer)
2020/06/24-09:14:06 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/24-09:14:06 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehouse where GoodsID = ?), 0) 
2020/06/24-09:14:06 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==> Parameters: 12(Integer)
2020/06/24-09:14:06 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/24-09:14:06 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehouse where GoodsID = ?), 0) 
2020/06/24-09:14:06 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==> Parameters: 13(Integer)
2020/06/24-09:14:06 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/24-09:14:07 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.GoodsRecordMapper.inquiryGoodsRecordByID- ==>  Preparing: select * from sj_goodsrecord where WarehouseRecordID = ? 
2020/06/24-09:14:07 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.GoodsRecordMapper.inquiryGoodsRecordByID- ==> Parameters: 84(Integer)
2020/06/24-09:14:07 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.GoodsRecordMapper.inquiryGoodsRecordByID- <==      Total: 1
2020/06/24-09:14:07 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehouse where GoodsID = ?), 0) 
2020/06/24-09:14:07 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==> Parameters: 1(Integer)
2020/06/24-09:14:07 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/24-09:14:08 [http-nio-8083-exec-8] DEBUG com.huijian.rac.mapper.GoodsRecordMapper.inquiryGoodsRecordByID- ==>  Preparing: select * from sj_goodsrecord where WarehouseRecordID = ? 
2020/06/24-09:14:08 [http-nio-8083-exec-8] DEBUG com.huijian.rac.mapper.GoodsRecordMapper.inquiryGoodsRecordByID- ==> Parameters: 83(Integer)
2020/06/24-09:14:08 [http-nio-8083-exec-8] DEBUG com.huijian.rac.mapper.GoodsRecordMapper.inquiryGoodsRecordByID- <==      Total: 1
2020/06/24-09:14:08 [http-nio-8083-exec-8] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehouse where GoodsID = ?), 0) 
2020/06/24-09:14:08 [http-nio-8083-exec-8] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==> Parameters: 1(Integer)
2020/06/24-09:14:08 [http-nio-8083-exec-8] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/24-09:14:10 [http-nio-8083-exec-7] DEBUG com.huijian.rac.mapper.GoodsRecordMapper.inquiryGoodsRecordByID- ==>  Preparing: select * from sj_goodsrecord where WarehouseRecordID = ? 
2020/06/24-09:14:10 [http-nio-8083-exec-7] DEBUG com.huijian.rac.mapper.GoodsRecordMapper.inquiryGoodsRecordByID- ==> Parameters: 83(Integer)
2020/06/24-09:14:10 [http-nio-8083-exec-7] DEBUG com.huijian.rac.mapper.GoodsRecordMapper.inquiryGoodsRecordByID- <==      Total: 1
2020/06/24-09:14:10 [http-nio-8083-exec-7] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehouse where GoodsID = ?), 0) 
2020/06/24-09:14:10 [http-nio-8083-exec-7] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==> Parameters: 1(Integer)
2020/06/24-09:14:10 [http-nio-8083-exec-7] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/24-09:16:50 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-09:17:53 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-09:18:34 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.OutboundRecordMapper.getOutboundRecordByPage- ==>  Preparing: SELECT * from sj_leavestocklist where LeaveStockNo like concat('%',?,'%') and LeaveStock >= ? and LeaveStock < ? order by LeaveStockNo desc limit ?, ? 
2020/06/24-09:18:34 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.OutboundRecordMapper.getOutboundRecordByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-24 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/24-09:18:34 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.OutboundRecordMapper.getOutboundRecordByPage- <==      Total: 0
2020/06/24-09:18:42 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.OutboundRecordMapper.getOutboundRecordByPage- ==>  Preparing: SELECT * from sj_leavestocklist where LeaveStockNo like concat('%',?,'%') and LeaveStock >= ? and LeaveStock < ? order by LeaveStockNo desc limit ?, ? 
2020/06/24-09:18:42 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.OutboundRecordMapper.getOutboundRecordByPage- ==> Parameters: (String), 2020-01-01 00:00:00.0(Timestamp), 2020-07-01 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/24-09:18:42 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.OutboundRecordMapper.getOutboundRecordByPage- <==      Total: 10
2020/06/24-09:18:42 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==>  Preparing: select OrderState from sj_order where OrderNo = ? 
2020/06/24-09:18:42 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==> Parameters: 9016002000027(String)
2020/06/24-09:18:42 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- <==      Total: 1
2020/06/24-09:18:42 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==>  Preparing: select OrderState from sj_order where OrderNo = ? 
2020/06/24-09:18:42 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==> Parameters: 9016002000026(String)
2020/06/24-09:18:42 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- <==      Total: 1
2020/06/24-09:18:42 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==>  Preparing: select OrderState from sj_order where OrderNo = ? 
2020/06/24-09:18:42 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==> Parameters: 9016002000027(String)
2020/06/24-09:18:42 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- <==      Total: 1
2020/06/24-09:18:42 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==>  Preparing: select OrderState from sj_order where OrderNo = ? 
2020/06/24-09:18:42 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==> Parameters: 9016002000026(String)
2020/06/24-09:18:42 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- <==      Total: 1
2020/06/24-09:18:42 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==>  Preparing: select OrderState from sj_order where OrderNo = ? 
2020/06/24-09:18:42 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==> Parameters: 9016002000022(String)
2020/06/24-09:18:42 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- <==      Total: 1
2020/06/24-09:18:42 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==>  Preparing: select OrderState from sj_order where OrderNo = ? 
2020/06/24-09:18:42 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==> Parameters: 9016002000021(String)
2020/06/24-09:18:42 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- <==      Total: 1
2020/06/24-09:18:42 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==>  Preparing: select OrderState from sj_order where OrderNo = ? 
2020/06/24-09:18:42 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==> Parameters: 9016002000020(String)
2020/06/24-09:18:42 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- <==      Total: 1
2020/06/24-09:18:42 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==>  Preparing: select OrderState from sj_order where OrderNo = ? 
2020/06/24-09:18:42 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==> Parameters: 9016002000019(String)
2020/06/24-09:18:42 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- <==      Total: 1
2020/06/24-09:18:42 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==>  Preparing: select OrderState from sj_order where OrderNo = ? 
2020/06/24-09:18:42 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==> Parameters: 9016002000018(String)
2020/06/24-09:18:42 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- <==      Total: 1
2020/06/24-09:18:42 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==>  Preparing: select OrderState from sj_order where OrderNo = ? 
2020/06/24-09:18:42 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==> Parameters: 9016002000017(String)
2020/06/24-09:18:42 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- <==      Total: 1
2020/06/24-09:18:45 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.LeaveStockListDetailMapper.inquiryLeaveStockListDetail- ==>  Preparing: select * from sj_leavestocklistdetail where LeaveStockNo = ? 
2020/06/24-09:18:45 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.LeaveStockListDetailMapper.inquiryLeaveStockListDetail- ==> Parameters: 202000013(Integer)
2020/06/24-09:18:45 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.LeaveStockListDetailMapper.inquiryLeaveStockListDetail- <==      Total: 0
2020/06/24-09:18:45 [http-nio-8083-exec-10] DEBUG com.huijian.rac.mapper.OutboundRecordMapper.getOutboundRecordByPage- ==>  Preparing: SELECT * from sj_leavestocklist where LeaveStockNo like concat('%',?,'%') and LeaveStock >= ? and LeaveStock < ? order by LeaveStockNo desc limit ?, ? 
2020/06/24-09:18:45 [http-nio-8083-exec-10] DEBUG com.huijian.rac.mapper.OutboundRecordMapper.getOutboundRecordByPage- ==> Parameters: (String), 2020-01-01 00:00:00.0(Timestamp), 2020-07-01 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/24-09:18:45 [http-nio-8083-exec-10] DEBUG com.huijian.rac.mapper.OutboundRecordMapper.getOutboundRecordByPage- <==      Total: 10
2020/06/24-09:18:45 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==>  Preparing: select OrderState from sj_order where OrderNo = ? 
2020/06/24-09:18:45 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==> Parameters: 9016002000027(String)
2020/06/24-09:18:45 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- <==      Total: 1
2020/06/24-09:18:45 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==>  Preparing: select OrderState from sj_order where OrderNo = ? 
2020/06/24-09:18:45 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==> Parameters: 9016002000026(String)
2020/06/24-09:18:45 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- <==      Total: 1
2020/06/24-09:18:45 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==>  Preparing: select OrderState from sj_order where OrderNo = ? 
2020/06/24-09:18:45 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==> Parameters: 9016002000027(String)
2020/06/24-09:18:45 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- <==      Total: 1
2020/06/24-09:18:45 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==>  Preparing: select OrderState from sj_order where OrderNo = ? 
2020/06/24-09:18:45 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==> Parameters: 9016002000026(String)
2020/06/24-09:18:45 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- <==      Total: 1
2020/06/24-09:18:45 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==>  Preparing: select OrderState from sj_order where OrderNo = ? 
2020/06/24-09:18:45 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==> Parameters: 9016002000022(String)
2020/06/24-09:18:45 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- <==      Total: 1
2020/06/24-09:18:45 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==>  Preparing: select OrderState from sj_order where OrderNo = ? 
2020/06/24-09:18:45 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==> Parameters: 9016002000021(String)
2020/06/24-09:18:45 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- <==      Total: 1
2020/06/24-09:18:45 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==>  Preparing: select OrderState from sj_order where OrderNo = ? 
2020/06/24-09:18:45 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==> Parameters: 9016002000020(String)
2020/06/24-09:18:45 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- <==      Total: 1
2020/06/24-09:18:45 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==>  Preparing: select OrderState from sj_order where OrderNo = ? 
2020/06/24-09:18:45 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==> Parameters: 9016002000019(String)
2020/06/24-09:18:45 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- <==      Total: 1
2020/06/24-09:18:45 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==>  Preparing: select OrderState from sj_order where OrderNo = ? 
2020/06/24-09:18:45 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==> Parameters: 9016002000018(String)
2020/06/24-09:18:45 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- <==      Total: 1
2020/06/24-09:18:45 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==>  Preparing: select OrderState from sj_order where OrderNo = ? 
2020/06/24-09:18:45 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==> Parameters: 9016002000017(String)
2020/06/24-09:18:45 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- <==      Total: 1
2020/06/24-09:18:50 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.LeaveStockListDetailMapper.inquiryLeaveStockListDetail- ==>  Preparing: select * from sj_leavestocklistdetail where LeaveStockNo = ? 
2020/06/24-09:18:50 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.LeaveStockListDetailMapper.inquiryLeaveStockListDetail- ==> Parameters: 202000013(Integer)
2020/06/24-09:18:50 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.LeaveStockListDetailMapper.inquiryLeaveStockListDetail- <==      Total: 0
2020/06/24-09:18:54 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.LeaveStockListDetailMapper.inquiryLeaveStockListDetail- ==>  Preparing: select * from sj_leavestocklistdetail where LeaveStockNo = ? 
2020/06/24-09:18:54 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.LeaveStockListDetailMapper.inquiryLeaveStockListDetail- ==> Parameters: 202000012(Integer)
2020/06/24-09:18:54 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.LeaveStockListDetailMapper.inquiryLeaveStockListDetail- <==      Total: 2
2020/06/24-09:18:54 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.findGoodsIDByGoodsName- ==>  Preparing: select GoodsID from sj_goodsdictionary where GoodsName = ? 
2020/06/24-09:18:54 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.findGoodsIDByGoodsName- ==> Parameters: 3(String)
2020/06/24-09:18:54 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.findGoodsIDByGoodsName- <==      Total: 1
2020/06/24-09:18:54 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehouse where GoodsID = ?), 0) 
2020/06/24-09:18:54 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- ==> Parameters: 3(Integer)
2020/06/24-09:18:54 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- <==      Total: 1
2020/06/24-09:18:54 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehouse where GoodsID = ?), 0) 
2020/06/24-09:18:54 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- ==> Parameters: 3(Integer)
2020/06/24-09:18:54 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- <==      Total: 1
2020/06/24-09:18:54 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.findGoodsIDByGoodsName- ==>  Preparing: select GoodsID from sj_goodsdictionary where GoodsName = ? 
2020/06/24-09:18:54 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.findGoodsIDByGoodsName- ==> Parameters: 6(String)
2020/06/24-09:18:54 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.findGoodsIDByGoodsName- <==      Total: 1
2020/06/24-09:18:54 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehouse where GoodsID = ?), 0) 
2020/06/24-09:18:54 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- ==> Parameters: 6(Integer)
2020/06/24-09:18:54 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- <==      Total: 1
2020/06/24-09:18:54 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehouse where GoodsID = ?), 0) 
2020/06/24-09:18:54 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- ==> Parameters: 6(Integer)
2020/06/24-09:18:54 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- <==      Total: 1
2020/06/24-09:18:55 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.LeaveStockListDetailMapper.inquiryLeaveStockListDetail- ==>  Preparing: select * from sj_leavestocklistdetail where LeaveStockNo = ? 
2020/06/24-09:18:55 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.LeaveStockListDetailMapper.inquiryLeaveStockListDetail- ==> Parameters: 202000012(Integer)
2020/06/24-09:18:55 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.LeaveStockListDetailMapper.inquiryLeaveStockListDetail- <==      Total: 2
2020/06/24-09:18:55 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.findGoodsIDByGoodsName- ==>  Preparing: select GoodsID from sj_goodsdictionary where GoodsName = ? 
2020/06/24-09:18:55 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.findGoodsIDByGoodsName- ==> Parameters: 3(String)
2020/06/24-09:18:55 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.findGoodsIDByGoodsName- <==      Total: 1
2020/06/24-09:18:55 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehouse where GoodsID = ?), 0) 
2020/06/24-09:18:55 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- ==> Parameters: 3(Integer)
2020/06/24-09:18:55 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- <==      Total: 1
2020/06/24-09:18:55 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehouse where GoodsID = ?), 0) 
2020/06/24-09:18:55 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- ==> Parameters: 3(Integer)
2020/06/24-09:18:55 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- <==      Total: 1
2020/06/24-09:18:55 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.findGoodsIDByGoodsName- ==>  Preparing: select GoodsID from sj_goodsdictionary where GoodsName = ? 
2020/06/24-09:18:55 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.findGoodsIDByGoodsName- ==> Parameters: 6(String)
2020/06/24-09:18:55 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.findGoodsIDByGoodsName- <==      Total: 1
2020/06/24-09:18:55 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehouse where GoodsID = ?), 0) 
2020/06/24-09:18:55 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- ==> Parameters: 6(Integer)
2020/06/24-09:18:55 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- <==      Total: 1
2020/06/24-09:18:55 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehouse where GoodsID = ?), 0) 
2020/06/24-09:18:55 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- ==> Parameters: 6(Integer)
2020/06/24-09:18:55 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- <==      Total: 1
2020/06/24-09:18:56 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.OutboundRecordMapper.getOutboundRecordByPage- ==>  Preparing: SELECT * from sj_leavestocklist where LeaveStockNo like concat('%',?,'%') and LeaveStock >= ? and LeaveStock < ? order by LeaveStockNo desc limit ?, ? 
2020/06/24-09:18:56 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.OutboundRecordMapper.getOutboundRecordByPage- ==> Parameters: (String), 2020-01-01 00:00:00.0(Timestamp), 2020-07-01 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/24-09:18:56 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.OutboundRecordMapper.getOutboundRecordByPage- <==      Total: 10
2020/06/24-09:18:56 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==>  Preparing: select OrderState from sj_order where OrderNo = ? 
2020/06/24-09:18:56 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==> Parameters: 9016002000027(String)
2020/06/24-09:18:56 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- <==      Total: 1
2020/06/24-09:18:56 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==>  Preparing: select OrderState from sj_order where OrderNo = ? 
2020/06/24-09:18:56 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==> Parameters: 9016002000026(String)
2020/06/24-09:18:56 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- <==      Total: 1
2020/06/24-09:18:56 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==>  Preparing: select OrderState from sj_order where OrderNo = ? 
2020/06/24-09:18:56 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==> Parameters: 9016002000027(String)
2020/06/24-09:18:56 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- <==      Total: 1
2020/06/24-09:18:56 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==>  Preparing: select OrderState from sj_order where OrderNo = ? 
2020/06/24-09:18:56 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==> Parameters: 9016002000026(String)
2020/06/24-09:18:56 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- <==      Total: 1
2020/06/24-09:18:56 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==>  Preparing: select OrderState from sj_order where OrderNo = ? 
2020/06/24-09:18:56 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==> Parameters: 9016002000022(String)
2020/06/24-09:18:56 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- <==      Total: 1
2020/06/24-09:18:56 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==>  Preparing: select OrderState from sj_order where OrderNo = ? 
2020/06/24-09:18:56 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==> Parameters: 9016002000021(String)
2020/06/24-09:18:56 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- <==      Total: 1
2020/06/24-09:18:56 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==>  Preparing: select OrderState from sj_order where OrderNo = ? 
2020/06/24-09:18:56 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==> Parameters: 9016002000020(String)
2020/06/24-09:18:56 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- <==      Total: 1
2020/06/24-09:18:56 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==>  Preparing: select OrderState from sj_order where OrderNo = ? 
2020/06/24-09:18:56 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==> Parameters: 9016002000019(String)
2020/06/24-09:18:56 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- <==      Total: 1
2020/06/24-09:18:56 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==>  Preparing: select OrderState from sj_order where OrderNo = ? 
2020/06/24-09:18:56 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==> Parameters: 9016002000018(String)
2020/06/24-09:18:56 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- <==      Total: 1
2020/06/24-09:18:56 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==>  Preparing: select OrderState from sj_order where OrderNo = ? 
2020/06/24-09:18:56 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==> Parameters: 9016002000017(String)
2020/06/24-09:18:56 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- <==      Total: 1
2020/06/24-09:18:59 [http-nio-8083-exec-8] DEBUG com.huijian.rac.mapper.OutboundRecordMapper.getOutboundRecordByPage- ==>  Preparing: SELECT * from sj_leavestocklist where LeaveStockNo like concat('%',?,'%') and LeaveStock >= ? and LeaveStock < ? order by LeaveStockNo desc limit ?, ? 
2020/06/24-09:18:59 [http-nio-8083-exec-8] DEBUG com.huijian.rac.mapper.OutboundRecordMapper.getOutboundRecordByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-24 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/24-09:18:59 [http-nio-8083-exec-8] DEBUG com.huijian.rac.mapper.OutboundRecordMapper.getOutboundRecordByPage- <==      Total: 0
2020/06/24-09:19:15 [http-nio-8083-exec-7] DEBUG com.huijian.rac.mapper.OutboundRecordMapper.getOutboundRecordByPage- ==>  Preparing: SELECT * from sj_leavestocklist where LeaveStockNo like concat('%',?,'%') and LeaveStock >= ? and LeaveStock < ? order by LeaveStockNo desc limit ?, ? 
2020/06/24-09:19:15 [http-nio-8083-exec-7] DEBUG com.huijian.rac.mapper.OutboundRecordMapper.getOutboundRecordByPage- ==> Parameters: (String), 2019-10-01 00:00:00.0(Timestamp), 2020-07-01 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/24-09:19:15 [http-nio-8083-exec-7] DEBUG com.huijian.rac.mapper.OutboundRecordMapper.getOutboundRecordByPage- <==      Total: 10
2020/06/24-09:19:15 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==>  Preparing: select OrderState from sj_order where OrderNo = ? 
2020/06/24-09:19:15 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==> Parameters: 9016002000027(String)
2020/06/24-09:19:15 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- <==      Total: 1
2020/06/24-09:19:15 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==>  Preparing: select OrderState from sj_order where OrderNo = ? 
2020/06/24-09:19:15 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==> Parameters: 9016002000026(String)
2020/06/24-09:19:15 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- <==      Total: 1
2020/06/24-09:19:15 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==>  Preparing: select OrderState from sj_order where OrderNo = ? 
2020/06/24-09:19:15 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==> Parameters: 9016002000027(String)
2020/06/24-09:19:15 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- <==      Total: 1
2020/06/24-09:19:15 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==>  Preparing: select OrderState from sj_order where OrderNo = ? 
2020/06/24-09:19:15 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==> Parameters: 9016002000026(String)
2020/06/24-09:19:15 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- <==      Total: 1
2020/06/24-09:19:15 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==>  Preparing: select OrderState from sj_order where OrderNo = ? 
2020/06/24-09:19:15 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==> Parameters: 9016002000022(String)
2020/06/24-09:19:15 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- <==      Total: 1
2020/06/24-09:19:15 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==>  Preparing: select OrderState from sj_order where OrderNo = ? 
2020/06/24-09:19:15 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==> Parameters: 9016002000021(String)
2020/06/24-09:19:15 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- <==      Total: 1
2020/06/24-09:19:15 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==>  Preparing: select OrderState from sj_order where OrderNo = ? 
2020/06/24-09:19:15 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==> Parameters: 9016002000020(String)
2020/06/24-09:19:15 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- <==      Total: 1
2020/06/24-09:19:15 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==>  Preparing: select OrderState from sj_order where OrderNo = ? 
2020/06/24-09:19:15 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==> Parameters: 9016002000019(String)
2020/06/24-09:19:15 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- <==      Total: 1
2020/06/24-09:19:15 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==>  Preparing: select OrderState from sj_order where OrderNo = ? 
2020/06/24-09:19:15 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==> Parameters: 9016002000018(String)
2020/06/24-09:19:15 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- <==      Total: 1
2020/06/24-09:19:15 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==>  Preparing: select OrderState from sj_order where OrderNo = ? 
2020/06/24-09:19:15 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==> Parameters: 9016002000017(String)
2020/06/24-09:19:15 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- <==      Total: 1
2020/06/24-09:19:17 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.LeaveStockListDetailMapper.inquiryLeaveStockListDetail- ==>  Preparing: select * from sj_leavestocklistdetail where LeaveStockNo = ? 
2020/06/24-09:19:17 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.LeaveStockListDetailMapper.inquiryLeaveStockListDetail- ==> Parameters: 202000012(Integer)
2020/06/24-09:19:17 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.LeaveStockListDetailMapper.inquiryLeaveStockListDetail- <==      Total: 2
2020/06/24-09:19:17 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.findGoodsIDByGoodsName- ==>  Preparing: select GoodsID from sj_goodsdictionary where GoodsName = ? 
2020/06/24-09:19:17 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.findGoodsIDByGoodsName- ==> Parameters: 3(String)
2020/06/24-09:19:17 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.findGoodsIDByGoodsName- <==      Total: 1
2020/06/24-09:19:17 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehouse where GoodsID = ?), 0) 
2020/06/24-09:19:17 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- ==> Parameters: 3(Integer)
2020/06/24-09:19:17 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- <==      Total: 1
2020/06/24-09:19:17 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehouse where GoodsID = ?), 0) 
2020/06/24-09:19:17 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- ==> Parameters: 3(Integer)
2020/06/24-09:19:17 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- <==      Total: 1
2020/06/24-09:19:17 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.findGoodsIDByGoodsName- ==>  Preparing: select GoodsID from sj_goodsdictionary where GoodsName = ? 
2020/06/24-09:19:17 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.findGoodsIDByGoodsName- ==> Parameters: 6(String)
2020/06/24-09:19:17 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.findGoodsIDByGoodsName- <==      Total: 1
2020/06/24-09:19:17 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehouse where GoodsID = ?), 0) 
2020/06/24-09:19:17 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- ==> Parameters: 6(Integer)
2020/06/24-09:19:17 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- <==      Total: 1
2020/06/24-09:19:17 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehouse where GoodsID = ?), 0) 
2020/06/24-09:19:17 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- ==> Parameters: 6(Integer)
2020/06/24-09:19:17 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- <==      Total: 1
2020/06/24-09:19:18 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.OutboundRecordMapper.getOutboundRecordByPage- ==>  Preparing: SELECT * from sj_leavestocklist where LeaveStockNo like concat('%',?,'%') and LeaveStock >= ? and LeaveStock < ? order by LeaveStockNo desc limit ?, ? 
2020/06/24-09:19:18 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.OutboundRecordMapper.getOutboundRecordByPage- ==> Parameters: (String), 2019-10-01 00:00:00.0(Timestamp), 2020-07-01 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/24-09:19:18 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.OutboundRecordMapper.getOutboundRecordByPage- <==      Total: 10
2020/06/24-09:19:18 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==>  Preparing: select OrderState from sj_order where OrderNo = ? 
2020/06/24-09:19:18 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==> Parameters: 9016002000027(String)
2020/06/24-09:19:18 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- <==      Total: 1
2020/06/24-09:19:18 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==>  Preparing: select OrderState from sj_order where OrderNo = ? 
2020/06/24-09:19:18 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==> Parameters: 9016002000026(String)
2020/06/24-09:19:18 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- <==      Total: 1
2020/06/24-09:19:18 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==>  Preparing: select OrderState from sj_order where OrderNo = ? 
2020/06/24-09:19:18 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==> Parameters: 9016002000027(String)
2020/06/24-09:19:18 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- <==      Total: 1
2020/06/24-09:19:18 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==>  Preparing: select OrderState from sj_order where OrderNo = ? 
2020/06/24-09:19:18 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==> Parameters: 9016002000026(String)
2020/06/24-09:19:18 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- <==      Total: 1
2020/06/24-09:19:18 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==>  Preparing: select OrderState from sj_order where OrderNo = ? 
2020/06/24-09:19:18 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==> Parameters: 9016002000022(String)
2020/06/24-09:19:18 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- <==      Total: 1
2020/06/24-09:19:18 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==>  Preparing: select OrderState from sj_order where OrderNo = ? 
2020/06/24-09:19:18 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==> Parameters: 9016002000021(String)
2020/06/24-09:19:18 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- <==      Total: 1
2020/06/24-09:19:18 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==>  Preparing: select OrderState from sj_order where OrderNo = ? 
2020/06/24-09:19:18 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==> Parameters: 9016002000020(String)
2020/06/24-09:19:18 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- <==      Total: 1
2020/06/24-09:19:18 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==>  Preparing: select OrderState from sj_order where OrderNo = ? 
2020/06/24-09:19:18 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==> Parameters: 9016002000019(String)
2020/06/24-09:19:18 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- <==      Total: 1
2020/06/24-09:19:18 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==>  Preparing: select OrderState from sj_order where OrderNo = ? 
2020/06/24-09:19:18 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==> Parameters: 9016002000018(String)
2020/06/24-09:19:18 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- <==      Total: 1
2020/06/24-09:19:18 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==>  Preparing: select OrderState from sj_order where OrderNo = ? 
2020/06/24-09:19:18 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==> Parameters: 9016002000017(String)
2020/06/24-09:19:18 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- <==      Total: 1
2020/06/24-09:19:24 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.LeaveStockListDetailMapper.inquiryLeaveStockListDetail- ==>  Preparing: select * from sj_leavestocklistdetail where LeaveStockNo = ? 
2020/06/24-09:19:24 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.LeaveStockListDetailMapper.inquiryLeaveStockListDetail- ==> Parameters: 202000012(Integer)
2020/06/24-09:19:24 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.LeaveStockListDetailMapper.inquiryLeaveStockListDetail- <==      Total: 2
2020/06/24-09:19:24 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.findGoodsIDByGoodsName- ==>  Preparing: select GoodsID from sj_goodsdictionary where GoodsName = ? 
2020/06/24-09:19:24 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.findGoodsIDByGoodsName- ==> Parameters: 3(String)
2020/06/24-09:19:24 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.findGoodsIDByGoodsName- <==      Total: 1
2020/06/24-09:19:24 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehouse where GoodsID = ?), 0) 
2020/06/24-09:19:24 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- ==> Parameters: 3(Integer)
2020/06/24-09:19:24 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- <==      Total: 1
2020/06/24-09:19:24 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehouse where GoodsID = ?), 0) 
2020/06/24-09:19:24 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- ==> Parameters: 3(Integer)
2020/06/24-09:19:24 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- <==      Total: 1
2020/06/24-09:19:24 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.findGoodsIDByGoodsName- ==>  Preparing: select GoodsID from sj_goodsdictionary where GoodsName = ? 
2020/06/24-09:19:24 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.findGoodsIDByGoodsName- ==> Parameters: 6(String)
2020/06/24-09:19:24 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.findGoodsIDByGoodsName- <==      Total: 1
2020/06/24-09:19:24 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehouse where GoodsID = ?), 0) 
2020/06/24-09:19:24 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- ==> Parameters: 6(Integer)
2020/06/24-09:19:24 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- <==      Total: 1
2020/06/24-09:19:24 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehouse where GoodsID = ?), 0) 
2020/06/24-09:19:24 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- ==> Parameters: 6(Integer)
2020/06/24-09:19:24 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- <==      Total: 1
2020/06/24-09:19:25 [http-nio-8083-exec-10] DEBUG com.huijian.rac.mapper.LeaveStockListDetailMapper.inquiryLeaveStockListDetail- ==>  Preparing: select * from sj_leavestocklistdetail where LeaveStockNo = ? 
2020/06/24-09:19:25 [http-nio-8083-exec-10] DEBUG com.huijian.rac.mapper.LeaveStockListDetailMapper.inquiryLeaveStockListDetail- ==> Parameters: 202000011(Integer)
2020/06/24-09:19:25 [http-nio-8083-exec-10] DEBUG com.huijian.rac.mapper.LeaveStockListDetailMapper.inquiryLeaveStockListDetail- <==      Total: 0
2020/06/24-09:19:26 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.LeaveStockListDetailMapper.inquiryLeaveStockListDetail- ==>  Preparing: select * from sj_leavestocklistdetail where LeaveStockNo = ? 
2020/06/24-09:19:26 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.LeaveStockListDetailMapper.inquiryLeaveStockListDetail- ==> Parameters: 202000010(Integer)
2020/06/24-09:19:26 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.LeaveStockListDetailMapper.inquiryLeaveStockListDetail- <==      Total: 2
2020/06/24-09:19:26 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.findGoodsIDByGoodsName- ==>  Preparing: select GoodsID from sj_goodsdictionary where GoodsName = ? 
2020/06/24-09:19:26 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.findGoodsIDByGoodsName- ==> Parameters: iphone12(String)
2020/06/24-09:19:26 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.findGoodsIDByGoodsName- <==      Total: 1
2020/06/24-09:19:26 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehouse where GoodsID = ?), 0) 
2020/06/24-09:19:26 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- ==> Parameters: 1(Integer)
2020/06/24-09:19:26 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- <==      Total: 1
2020/06/24-09:19:26 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehouse where GoodsID = ?), 0) 
2020/06/24-09:19:26 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- ==> Parameters: 1(Integer)
2020/06/24-09:19:26 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- <==      Total: 1
2020/06/24-09:19:26 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.findGoodsIDByGoodsName- ==>  Preparing: select GoodsID from sj_goodsdictionary where GoodsName = ? 
2020/06/24-09:19:26 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.findGoodsIDByGoodsName- ==> Parameters: 2(String)
2020/06/24-09:19:26 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.findGoodsIDByGoodsName- <==      Total: 1
2020/06/24-09:19:26 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehouse where GoodsID = ?), 0) 
2020/06/24-09:19:26 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- ==> Parameters: 2(Integer)
2020/06/24-09:19:26 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- <==      Total: 1
2020/06/24-09:19:26 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehouse where GoodsID = ?), 0) 
2020/06/24-09:19:26 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- ==> Parameters: 2(Integer)
2020/06/24-09:19:26 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- <==      Total: 1
2020/06/24-09:19:27 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.LeaveStockListDetailMapper.inquiryLeaveStockListDetail- ==>  Preparing: select * from sj_leavestocklistdetail where LeaveStockNo = ? 
2020/06/24-09:19:27 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.LeaveStockListDetailMapper.inquiryLeaveStockListDetail- ==> Parameters: 202000006(Integer)
2020/06/24-09:19:27 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.LeaveStockListDetailMapper.inquiryLeaveStockListDetail- <==      Total: 0
2020/06/24-09:19:27 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.LeaveStockListDetailMapper.inquiryLeaveStockListDetail- ==>  Preparing: select * from sj_leavestocklistdetail where LeaveStockNo = ? 
2020/06/24-09:19:27 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.LeaveStockListDetailMapper.inquiryLeaveStockListDetail- ==> Parameters: 202000010(Integer)
2020/06/24-09:19:27 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.LeaveStockListDetailMapper.inquiryLeaveStockListDetail- <==      Total: 2
2020/06/24-09:19:27 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.findGoodsIDByGoodsName- ==>  Preparing: select GoodsID from sj_goodsdictionary where GoodsName = ? 
2020/06/24-09:19:27 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.findGoodsIDByGoodsName- ==> Parameters: iphone12(String)
2020/06/24-09:19:27 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.findGoodsIDByGoodsName- <==      Total: 1
2020/06/24-09:19:27 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehouse where GoodsID = ?), 0) 
2020/06/24-09:19:27 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- ==> Parameters: 1(Integer)
2020/06/24-09:19:27 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- <==      Total: 1
2020/06/24-09:19:27 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehouse where GoodsID = ?), 0) 
2020/06/24-09:19:27 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- ==> Parameters: 1(Integer)
2020/06/24-09:19:27 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- <==      Total: 1
2020/06/24-09:19:27 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.findGoodsIDByGoodsName- ==>  Preparing: select GoodsID from sj_goodsdictionary where GoodsName = ? 
2020/06/24-09:19:27 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.findGoodsIDByGoodsName- ==> Parameters: 2(String)
2020/06/24-09:19:27 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.findGoodsIDByGoodsName- <==      Total: 1
2020/06/24-09:19:27 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehouse where GoodsID = ?), 0) 
2020/06/24-09:19:27 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- ==> Parameters: 2(Integer)
2020/06/24-09:19:27 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- <==      Total: 1
2020/06/24-09:19:27 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehouse where GoodsID = ?), 0) 
2020/06/24-09:19:27 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- ==> Parameters: 2(Integer)
2020/06/24-09:19:27 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- <==      Total: 1
2020/06/24-09:19:29 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.LeaveStockListDetailMapper.inquiryLeaveStockListDetail- ==>  Preparing: select * from sj_leavestocklistdetail where LeaveStockNo = ? 
2020/06/24-09:19:29 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.LeaveStockListDetailMapper.inquiryLeaveStockListDetail- ==> Parameters: 202000010(Integer)
2020/06/24-09:19:29 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.LeaveStockListDetailMapper.inquiryLeaveStockListDetail- <==      Total: 2
2020/06/24-09:19:29 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.findGoodsIDByGoodsName- ==>  Preparing: select GoodsID from sj_goodsdictionary where GoodsName = ? 
2020/06/24-09:19:29 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.findGoodsIDByGoodsName- ==> Parameters: iphone12(String)
2020/06/24-09:19:29 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.findGoodsIDByGoodsName- <==      Total: 1
2020/06/24-09:19:29 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehouse where GoodsID = ?), 0) 
2020/06/24-09:19:29 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- ==> Parameters: 1(Integer)
2020/06/24-09:19:29 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- <==      Total: 1
2020/06/24-09:19:29 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehouse where GoodsID = ?), 0) 
2020/06/24-09:19:29 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- ==> Parameters: 1(Integer)
2020/06/24-09:19:29 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- <==      Total: 1
2020/06/24-09:19:29 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.findGoodsIDByGoodsName- ==>  Preparing: select GoodsID from sj_goodsdictionary where GoodsName = ? 
2020/06/24-09:19:29 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.findGoodsIDByGoodsName- ==> Parameters: 2(String)
2020/06/24-09:19:29 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.findGoodsIDByGoodsName- <==      Total: 1
2020/06/24-09:19:29 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehouse where GoodsID = ?), 0) 
2020/06/24-09:19:29 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- ==> Parameters: 2(Integer)
2020/06/24-09:19:29 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- <==      Total: 1
2020/06/24-09:19:29 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehouse where GoodsID = ?), 0) 
2020/06/24-09:19:29 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- ==> Parameters: 2(Integer)
2020/06/24-09:19:29 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.WarehouseMapper.findWarehouseByGoodsID- <==      Total: 1
2020/06/24-09:19:30 [http-nio-8083-exec-8] DEBUG com.huijian.rac.mapper.OutboundRecordMapper.getOutboundRecordByPage- ==>  Preparing: SELECT * from sj_leavestocklist where LeaveStockNo like concat('%',?,'%') and LeaveStock >= ? and LeaveStock < ? order by LeaveStockNo desc limit ?, ? 
2020/06/24-09:19:30 [http-nio-8083-exec-8] DEBUG com.huijian.rac.mapper.OutboundRecordMapper.getOutboundRecordByPage- ==> Parameters: (String), 2019-10-01 00:00:00.0(Timestamp), 2020-07-01 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/24-09:19:30 [http-nio-8083-exec-8] DEBUG com.huijian.rac.mapper.OutboundRecordMapper.getOutboundRecordByPage- <==      Total: 10
2020/06/24-09:19:30 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==>  Preparing: select OrderState from sj_order where OrderNo = ? 
2020/06/24-09:19:30 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==> Parameters: 9016002000027(String)
2020/06/24-09:19:30 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- <==      Total: 1
2020/06/24-09:19:30 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==>  Preparing: select OrderState from sj_order where OrderNo = ? 
2020/06/24-09:19:30 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==> Parameters: 9016002000026(String)
2020/06/24-09:19:30 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- <==      Total: 1
2020/06/24-09:19:30 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==>  Preparing: select OrderState from sj_order where OrderNo = ? 
2020/06/24-09:19:30 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==> Parameters: 9016002000027(String)
2020/06/24-09:19:30 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- <==      Total: 1
2020/06/24-09:19:30 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==>  Preparing: select OrderState from sj_order where OrderNo = ? 
2020/06/24-09:19:30 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==> Parameters: 9016002000026(String)
2020/06/24-09:19:30 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- <==      Total: 1
2020/06/24-09:19:30 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==>  Preparing: select OrderState from sj_order where OrderNo = ? 
2020/06/24-09:19:30 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==> Parameters: 9016002000022(String)
2020/06/24-09:19:30 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- <==      Total: 1
2020/06/24-09:19:30 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==>  Preparing: select OrderState from sj_order where OrderNo = ? 
2020/06/24-09:19:30 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==> Parameters: 9016002000021(String)
2020/06/24-09:19:30 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- <==      Total: 1
2020/06/24-09:19:30 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==>  Preparing: select OrderState from sj_order where OrderNo = ? 
2020/06/24-09:19:30 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==> Parameters: 9016002000020(String)
2020/06/24-09:19:30 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- <==      Total: 1
2020/06/24-09:19:30 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==>  Preparing: select OrderState from sj_order where OrderNo = ? 
2020/06/24-09:19:30 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==> Parameters: 9016002000019(String)
2020/06/24-09:19:30 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- <==      Total: 1
2020/06/24-09:19:30 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==>  Preparing: select OrderState from sj_order where OrderNo = ? 
2020/06/24-09:19:30 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==> Parameters: 9016002000018(String)
2020/06/24-09:19:30 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- <==      Total: 1
2020/06/24-09:19:30 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==>  Preparing: select OrderState from sj_order where OrderNo = ? 
2020/06/24-09:19:30 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==> Parameters: 9016002000017(String)
2020/06/24-09:19:30 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- <==      Total: 1
2020/06/24-09:21:50 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-09:22:47 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==>  Preparing: SELECT * from sj_order where OrderNo like concat('%',?,'%') and OrderDate >= ? and OrderDate < ? and OrderState != 0 order by OrderDate desc limit ?, ? 
2020/06/24-09:22:47 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-24 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/24-09:22:47 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==>  Preparing: select * from pub_depart where HOSPITALID=? 
2020/06/24-09:22:47 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==> Parameters: 901600(String)
2020/06/24-09:22:47 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- <==      Total: 0
2020/06/24-09:22:47 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- <==      Total: 22
2020/06/24-09:22:49 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==>  Preparing: SELECT * from sj_order where OrderNo like concat('%',?,'%') and OrderDate >= ? and OrderDate < ? and OrderState != 0 order by OrderDate desc limit ?, ? 
2020/06/24-09:22:49 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-24 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/24-09:22:49 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- <==      Total: 0
2020/06/24-09:22:53 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-09:26:50 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-09:26:57 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==>  Preparing: SELECT * from sj_order where OrderNo like concat('%',?,'%') and OrderDate >= ? and OrderDate < ? and OrderState != 0 order by OrderDate desc limit ?, ? 
2020/06/24-09:26:57 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-24 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/24-09:26:57 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- <==      Total: 0
2020/06/24-09:27:41 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==>  Preparing: SELECT * from sj_order where OrderNo like concat('%',?,'%') and OrderDate >= ? and OrderDate < ? and OrderState != 0 order by OrderDate desc limit ?, ? 
2020/06/24-09:27:41 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-24 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/24-09:27:41 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- <==      Total: 0
2020/06/24-09:27:46 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==>  Preparing: SELECT * from sj_order where OrderNo like concat('%',?,'%') and OrderDate >= ? and OrderDate < ? and OrderState != 0 order by OrderDate desc limit ?, ? 
2020/06/24-09:27:46 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==> Parameters: (String), 2020-01-01 00:00:00.0(Timestamp), 2020-07-01 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/24-09:27:46 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- <==      Total: 8
2020/06/24-09:27:46 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.HospitalMapper.inquiryHospitalNameByID- ==>  Preparing: select ORGANIZATION from pub_hospitalid where HOSPITALID = ? 
2020/06/24-09:27:46 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.HospitalMapper.inquiryHospitalNameByID- ==> Parameters: 901600(String)
2020/06/24-09:27:46 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.HospitalMapper.inquiryHospitalNameByID- <==      Total: 1
2020/06/24-09:27:46 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.HospitalMapper.inquiryHospitalNameByID- ==>  Preparing: select ORGANIZATION from pub_hospitalid where HOSPITALID = ? 
2020/06/24-09:27:46 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.HospitalMapper.inquiryHospitalNameByID- ==> Parameters: 901600(String)
2020/06/24-09:27:46 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.HospitalMapper.inquiryHospitalNameByID- <==      Total: 1
2020/06/24-09:27:46 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.HospitalMapper.inquiryHospitalNameByID- ==>  Preparing: select ORGANIZATION from pub_hospitalid where HOSPITALID = ? 
2020/06/24-09:27:46 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.HospitalMapper.inquiryHospitalNameByID- ==> Parameters: 901600(String)
2020/06/24-09:27:47 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.HospitalMapper.inquiryHospitalNameByID- <==      Total: 1
2020/06/24-09:27:47 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.HospitalMapper.inquiryHospitalNameByID- ==>  Preparing: select ORGANIZATION from pub_hospitalid where HOSPITALID = ? 
2020/06/24-09:27:47 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.HospitalMapper.inquiryHospitalNameByID- ==> Parameters: 901600(String)
2020/06/24-09:27:47 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.HospitalMapper.inquiryHospitalNameByID- <==      Total: 1
2020/06/24-09:27:47 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.HospitalMapper.inquiryHospitalNameByID- ==>  Preparing: select ORGANIZATION from pub_hospitalid where HOSPITALID = ? 
2020/06/24-09:27:47 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.HospitalMapper.inquiryHospitalNameByID- ==> Parameters: 901600(String)
2020/06/24-09:27:47 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.HospitalMapper.inquiryHospitalNameByID- <==      Total: 1
2020/06/24-09:27:47 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.HospitalMapper.inquiryHospitalNameByID- ==>  Preparing: select ORGANIZATION from pub_hospitalid where HOSPITALID = ? 
2020/06/24-09:27:47 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.HospitalMapper.inquiryHospitalNameByID- ==> Parameters: 901600(String)
2020/06/24-09:27:47 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.HospitalMapper.inquiryHospitalNameByID- <==      Total: 1
2020/06/24-09:27:47 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.HospitalMapper.inquiryHospitalNameByID- ==>  Preparing: select ORGANIZATION from pub_hospitalid where HOSPITALID = ? 
2020/06/24-09:27:47 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.HospitalMapper.inquiryHospitalNameByID- ==> Parameters: 901600(String)
2020/06/24-09:27:47 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.HospitalMapper.inquiryHospitalNameByID- <==      Total: 1
2020/06/24-09:27:47 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.HospitalMapper.inquiryHospitalNameByID- ==>  Preparing: select ORGANIZATION from pub_hospitalid where HOSPITALID = ? 
2020/06/24-09:27:47 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.HospitalMapper.inquiryHospitalNameByID- ==> Parameters: 901600(String)
2020/06/24-09:27:47 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.HospitalMapper.inquiryHospitalNameByID- <==      Total: 1
2020/06/24-09:27:53 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-09:28:33 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==>  Preparing: SELECT * from sj_order where OrderNo like concat('%',?,'%') and OrderDate >= ? and OrderDate < ? and OrderState != 0 order by OrderDate desc limit ?, ? 
2020/06/24-09:28:33 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-24 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/24-09:28:33 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- <==      Total: 0
2020/06/24-09:31:50 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-09:32:53 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-09:32:59 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==>  Preparing: SELECT * from sj_order where OrderNo like concat('%',?,'%') and OrderDate >= ? and OrderDate < ? and OrderState != 0 order by OrderDate desc limit ?, ? 
2020/06/24-09:32:59 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-24 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/24-09:32:59 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- <==      Total: 0
2020/06/24-09:33:49 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==>  Preparing: SELECT * from sj_order where OrderNo like concat('%',?,'%') and OrderDate >= ? and OrderDate < ? and OrderState != 0 order by OrderDate desc limit ?, ? 
2020/06/24-09:33:49 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-24 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/24-09:33:49 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- <==      Total: 0
2020/06/24-09:33:50 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==>  Preparing: SELECT * from sj_order where OrderNo like concat('%',?,'%') and OrderDate >= ? and OrderDate < ? and OrderState != 0 order by OrderDate desc limit ?, ? 
2020/06/24-09:33:50 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-24 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/24-09:33:50 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- <==      Total: 0
2020/06/24-09:36:50 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-09:37:53 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-09:41:50 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-09:42:53 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-09:46:50 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-09:47:53 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-09:50:43 [http-nio-8083-exec-7] DEBUG com.huijian.rac.mapper.OutboundRecordMapper.getOutboundRecordByPage- ==>  Preparing: SELECT * from sj_leavestocklist where LeaveStockNo like concat('%',?,'%') and LeaveStock >= ? and LeaveStock < ? order by LeaveStockNo desc limit ?, ? 
2020/06/24-09:50:43 [http-nio-8083-exec-7] DEBUG com.huijian.rac.mapper.OutboundRecordMapper.getOutboundRecordByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-24 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/24-09:50:43 [http-nio-8083-exec-7] DEBUG com.huijian.rac.mapper.OutboundRecordMapper.getOutboundRecordByPage- <==      Total: 0
2020/06/24-09:50:49 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.OutboundRecordMapper.getOutboundRecordByPage- ==>  Preparing: SELECT * from sj_leavestocklist where LeaveStockNo like concat('%',?,'%') and LeaveStock >= ? and LeaveStock < ? order by LeaveStockNo desc limit ?, ? 
2020/06/24-09:50:49 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.OutboundRecordMapper.getOutboundRecordByPage- ==> Parameters: (String), 2019-12-01 00:00:00.0(Timestamp), 2020-07-01 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/24-09:50:49 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.OutboundRecordMapper.getOutboundRecordByPage- <==      Total: 10
2020/06/24-09:50:49 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==>  Preparing: select OrderState from sj_order where OrderNo = ? 
2020/06/24-09:50:49 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==> Parameters: 9016002000027(String)
2020/06/24-09:50:49 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- <==      Total: 1
2020/06/24-09:50:49 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==>  Preparing: select OrderState from sj_order where OrderNo = ? 
2020/06/24-09:50:49 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==> Parameters: 9016002000026(String)
2020/06/24-09:50:49 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- <==      Total: 1
2020/06/24-09:50:49 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==>  Preparing: select OrderState from sj_order where OrderNo = ? 
2020/06/24-09:50:49 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==> Parameters: 9016002000027(String)
2020/06/24-09:50:49 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- <==      Total: 1
2020/06/24-09:50:49 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==>  Preparing: select OrderState from sj_order where OrderNo = ? 
2020/06/24-09:50:49 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==> Parameters: 9016002000026(String)
2020/06/24-09:50:49 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- <==      Total: 1
2020/06/24-09:50:49 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==>  Preparing: select OrderState from sj_order where OrderNo = ? 
2020/06/24-09:50:49 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==> Parameters: 9016002000022(String)
2020/06/24-09:50:49 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- <==      Total: 1
2020/06/24-09:50:49 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==>  Preparing: select OrderState from sj_order where OrderNo = ? 
2020/06/24-09:50:49 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==> Parameters: 9016002000021(String)
2020/06/24-09:50:49 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- <==      Total: 1
2020/06/24-09:50:49 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==>  Preparing: select OrderState from sj_order where OrderNo = ? 
2020/06/24-09:50:49 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==> Parameters: 9016002000020(String)
2020/06/24-09:50:49 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- <==      Total: 1
2020/06/24-09:50:49 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==>  Preparing: select OrderState from sj_order where OrderNo = ? 
2020/06/24-09:50:49 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==> Parameters: 9016002000019(String)
2020/06/24-09:50:49 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- <==      Total: 1
2020/06/24-09:50:49 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==>  Preparing: select OrderState from sj_order where OrderNo = ? 
2020/06/24-09:50:49 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==> Parameters: 9016002000018(String)
2020/06/24-09:50:49 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- <==      Total: 1
2020/06/24-09:50:49 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==>  Preparing: select OrderState from sj_order where OrderNo = ? 
2020/06/24-09:50:49 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==> Parameters: 9016002000017(String)
2020/06/24-09:50:49 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- <==      Total: 1
2020/06/24-09:50:55 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.LeaveStockListDetailMapper.inquiryLeaveStockListDetail- ==>  Preparing: select * from sj_leavestocklistdetail where LeaveStockNo = ? 
2020/06/24-09:50:55 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.LeaveStockListDetailMapper.inquiryLeaveStockListDetail- ==> Parameters: 202000013(Integer)
2020/06/24-09:50:55 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.LeaveStockListDetailMapper.inquiryLeaveStockListDetail- <==      Total: 0
2020/06/24-09:51:12 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.OutboundRecordMapper.inquiryOneYear- ==>  Preparing: select count(*) from sj_leavestocklist where YEAR(LeaveStock)=YEAR(NOW()); 
2020/06/24-09:51:12 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.OutboundRecordMapper.inquiryOneYear- ==> Parameters: 
2020/06/24-09:51:12 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.OutboundRecordMapper.inquiryOneYear- <==      Total: 1
2020/06/24-09:51:50 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-09:52:20 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.OutboundRecordMapper.inquiryOneYear- ==>  Preparing: select count(*) from sj_leavestocklist where YEAR(LeaveStock)=YEAR(NOW()); 
2020/06/24-09:52:20 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.OutboundRecordMapper.inquiryOneYear- ==> Parameters: 
2020/06/24-09:52:20 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.OutboundRecordMapper.inquiryOneYear- <==      Total: 1
2020/06/24-09:52:24 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.LeaveStockListDetailMapper.inquiryLeaveStockListDetail- ==>  Preparing: select * from sj_leavestocklistdetail where LeaveStockNo = ? 
2020/06/24-09:52:24 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.LeaveStockListDetailMapper.inquiryLeaveStockListDetail- ==> Parameters: 202000013(Integer)
2020/06/24-09:52:24 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.LeaveStockListDetailMapper.inquiryLeaveStockListDetail- <==      Total: 0
2020/06/24-09:52:27 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.OutboundRecordMapper.inquiryOneYear- ==>  Preparing: select count(*) from sj_leavestocklist where YEAR(LeaveStock)=YEAR(NOW()); 
2020/06/24-09:52:27 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.OutboundRecordMapper.inquiryOneYear- ==> Parameters: 
2020/06/24-09:52:27 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.OutboundRecordMapper.inquiryOneYear- <==      Total: 1
2020/06/24-09:52:53 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-09:53:48 [http-nio-8083-exec-7] DEBUG com.huijian.rac.mapper.LeaveStockListDetailMapper.inquiryLeaveStockListDetail- ==>  Preparing: select * from sj_leavestocklistdetail where LeaveStockNo = ? 
2020/06/24-09:53:48 [http-nio-8083-exec-7] DEBUG com.huijian.rac.mapper.LeaveStockListDetailMapper.inquiryLeaveStockListDetail- ==> Parameters: 202000013(Integer)
2020/06/24-09:53:48 [http-nio-8083-exec-7] DEBUG com.huijian.rac.mapper.LeaveStockListDetailMapper.inquiryLeaveStockListDetail- <==      Total: 0
2020/06/24-09:53:48 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderMapper.updateOrderStateByOrderNo- ==>  Preparing: update sj_order set OrderState = ?, OutStockDate = ? where OrderNo = ? 
2020/06/24-09:53:48 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderMapper.updateOrderStateByOrderNo- ==> Parameters: 3(Integer), 2020-06-24 09:53:48(String), 9016002000027(String)
2020/06/24-09:53:49 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderMapper.updateOrderStateByOrderNo- <==    Updates: 1
2020/06/24-09:53:49 [http-nio-8083-exec-7] DEBUG com.huijian.rac.mapper.OutboundRecordMapper.update- ==>  Preparing: update sj_leavestocklist SET LeaveStockNo=?, OrderNo=?, LeaveStock=?, PersonID=?, Memo=?, ReceivingUnitName=?, Supervisor=?, Sum=?, BusinessType=? where LeaveStockNo = ? 
2020/06/24-09:53:49 [http-nio-8083-exec-7] DEBUG com.huijian.rac.mapper.OutboundRecordMapper.update- ==> Parameters: 202000013(Integer), 9016002000027(String), 2020-06-24 09:53:48(String), 胡凌云(String), 111(String), 检验科(String), (String), 0.00(BigDecimal), 采购入库(String), 202000013(Integer)
2020/06/24-09:53:49 [http-nio-8083-exec-7] DEBUG com.huijian.rac.mapper.OutboundRecordMapper.update- <==    Updates: 1
2020/06/24-09:53:49 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderOperateMapper.insertOrderOperating- ==>  Preparing: insert into sj_orderoperate ( ORDERNO, OPERATING, ORDERSTATE, ORERATINGDATE ) values ( ?, ?, ?, ? ) 
2020/06/24-09:53:49 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderOperateMapper.insertOrderOperating- ==> Parameters: 9016002000027(String), 已出库(String), 3(Integer), 2020-06-24 09:53:48.0(Timestamp)
2020/06/24-09:53:49 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderOperateMapper.insertOrderOperating- <==    Updates: 1
2020/06/24-09:53:49 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.OutboundRecordMapper.getOutboundRecordByPage- ==>  Preparing: SELECT * from sj_leavestocklist where LeaveStockNo like concat('%',?,'%') and LeaveStock >= ? and LeaveStock < ? order by LeaveStockNo desc limit ?, ? 
2020/06/24-09:53:49 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.OutboundRecordMapper.getOutboundRecordByPage- ==> Parameters: (String), 2019-12-01 00:00:00.0(Timestamp), 2020-07-01 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/24-09:53:49 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.OutboundRecordMapper.getOutboundRecordByPage- <==      Total: 10
2020/06/24-09:53:49 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==>  Preparing: select OrderState from sj_order where OrderNo = ? 
2020/06/24-09:53:49 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==> Parameters: 9016002000027(String)
2020/06/24-09:53:49 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- <==      Total: 1
2020/06/24-09:53:49 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==>  Preparing: select OrderState from sj_order where OrderNo = ? 
2020/06/24-09:53:49 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==> Parameters: 9016002000026(String)
2020/06/24-09:53:49 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- <==      Total: 1
2020/06/24-09:53:49 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==>  Preparing: select OrderState from sj_order where OrderNo = ? 
2020/06/24-09:53:49 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==> Parameters: 9016002000027(String)
2020/06/24-09:53:49 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- <==      Total: 1
2020/06/24-09:53:49 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==>  Preparing: select OrderState from sj_order where OrderNo = ? 
2020/06/24-09:53:49 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==> Parameters: 9016002000026(String)
2020/06/24-09:53:49 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- <==      Total: 1
2020/06/24-09:53:49 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==>  Preparing: select OrderState from sj_order where OrderNo = ? 
2020/06/24-09:53:49 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==> Parameters: 9016002000022(String)
2020/06/24-09:53:49 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- <==      Total: 1
2020/06/24-09:53:49 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==>  Preparing: select OrderState from sj_order where OrderNo = ? 
2020/06/24-09:53:49 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==> Parameters: 9016002000021(String)
2020/06/24-09:53:49 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- <==      Total: 1
2020/06/24-09:53:49 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==>  Preparing: select OrderState from sj_order where OrderNo = ? 
2020/06/24-09:53:49 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==> Parameters: 9016002000020(String)
2020/06/24-09:53:49 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- <==      Total: 1
2020/06/24-09:53:49 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==>  Preparing: select OrderState from sj_order where OrderNo = ? 
2020/06/24-09:53:49 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==> Parameters: 9016002000019(String)
2020/06/24-09:53:49 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- <==      Total: 1
2020/06/24-09:53:49 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==>  Preparing: select OrderState from sj_order where OrderNo = ? 
2020/06/24-09:53:49 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==> Parameters: 9016002000018(String)
2020/06/24-09:53:49 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- <==      Total: 1
2020/06/24-09:53:49 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==>  Preparing: select OrderState from sj_order where OrderNo = ? 
2020/06/24-09:53:49 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==> Parameters: 9016002000017(String)
2020/06/24-09:53:49 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- <==      Total: 1
2020/06/24-09:56:50 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-09:57:53 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-09:58:56 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderMapper.getOrderByPage- ==>  Preparing: SELECT * from sj_order where OrderNo like concat('%',?,'%') and OrderDate >= ? and OrderDate < ? and HospitalID = ? order by OrderDate desc limit ?, ? 
2020/06/24-09:58:56 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderMapper.getOrderByPage- ==> Parameters: (String), 2019-12-01 00:00:00.0(Timestamp), 2020-07-01 23:59:59.0(Timestamp), 901600(String), 0(Integer), 10(Integer)
2020/06/24-09:58:56 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderMapper.getOrderByPage- <==      Total: 10
2020/06/24-09:58:57 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderDetailMapper.findListByOrderNo- ==>  Preparing: select * from sj_orderdetail where OrderNo = ? 
2020/06/24-09:58:57 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderDetailMapper.findListByOrderNo- ==> Parameters: 9016002000027(String)
2020/06/24-09:58:57 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderDetailMapper.findListByOrderNo- <==      Total: 3
2020/06/24-09:58:57 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- ==>  Preparing: select UnitName from sj_unit where UnitID = ? 
2020/06/24-09:58:57 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- ==> Parameters: 1(Integer)
2020/06/24-09:58:57 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- <==      Total: 1
2020/06/24-09:58:57 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- ==>  Preparing: select UnitName from sj_unit where UnitID = ? 
2020/06/24-09:58:57 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- ==> Parameters: 1(Integer)
2020/06/24-09:58:57 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- <==      Total: 1
2020/06/24-09:58:57 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- ==>  Preparing: select UnitName from sj_unit where UnitID = ? 
2020/06/24-09:58:57 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- ==> Parameters: 1(Integer)
2020/06/24-09:58:57 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- <==      Total: 1
2020/06/24-09:58:57 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==>  Preparing: select * from sj_warehousesecond where GoodsID = ? and HospitalID = ? 
2020/06/24-09:58:57 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==> Parameters: 1(Integer), 901600(String)
2020/06/24-09:58:57 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- <==      Total: 1
2020/06/24-09:58:57 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==>  Preparing: select * from sj_warehousesecond where GoodsID = ? and HospitalID = ? 
2020/06/24-09:58:57 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==> Parameters: 2(Integer), 901600(String)
2020/06/24-09:58:57 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- <==      Total: 1
2020/06/24-09:58:57 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==>  Preparing: select * from sj_warehousesecond where GoodsID = ? and HospitalID = ? 
2020/06/24-09:58:57 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==> Parameters: 3(Integer), 901600(String)
2020/06/24-09:58:57 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- <==      Total: 1
2020/06/24-09:59:04 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderDetailMapper.findListByOrderNo- ==>  Preparing: select * from sj_orderdetail where OrderNo = ? 
2020/06/24-09:59:04 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderDetailMapper.findListByOrderNo- ==> Parameters: 9016002000024(String)
2020/06/24-09:59:04 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderDetailMapper.findListByOrderNo- <==      Total: 36
2020/06/24-09:59:04 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- ==>  Preparing: select UnitName from sj_unit where UnitID = ? 
2020/06/24-09:59:04 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- ==> Parameters: 1(Integer)
2020/06/24-09:59:04 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- <==      Total: 1
2020/06/24-09:59:04 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- ==>  Preparing: select UnitName from sj_unit where UnitID = ? 
2020/06/24-09:59:04 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- ==> Parameters: 1(Integer)
2020/06/24-09:59:04 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- <==      Total: 1
2020/06/24-09:59:04 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- ==>  Preparing: select UnitName from sj_unit where UnitID = ? 
2020/06/24-09:59:04 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- ==> Parameters: 1(Integer)
2020/06/24-09:59:04 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- <==      Total: 1
2020/06/24-09:59:04 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- ==>  Preparing: select UnitName from sj_unit where UnitID = ? 
2020/06/24-09:59:04 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- ==> Parameters: 1(Integer)
2020/06/24-09:59:04 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- <==      Total: 1
2020/06/24-09:59:04 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- ==>  Preparing: select UnitName from sj_unit where UnitID = ? 
2020/06/24-09:59:04 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- ==> Parameters: 1(Integer)
2020/06/24-09:59:04 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- <==      Total: 1
2020/06/24-09:59:04 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- ==>  Preparing: select UnitName from sj_unit where UnitID = ? 
2020/06/24-09:59:04 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- ==> Parameters: 1(Integer)
2020/06/24-09:59:04 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- <==      Total: 1
2020/06/24-09:59:04 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- ==>  Preparing: select UnitName from sj_unit where UnitID = ? 
2020/06/24-09:59:04 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- ==> Parameters: 1(Integer)
2020/06/24-09:59:04 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- <==      Total: 1
2020/06/24-09:59:04 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- ==>  Preparing: select UnitName from sj_unit where UnitID = ? 
2020/06/24-09:59:04 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- ==> Parameters: 1(Integer)
2020/06/24-09:59:04 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- <==      Total: 1
2020/06/24-09:59:04 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- ==>  Preparing: select UnitName from sj_unit where UnitID = ? 
2020/06/24-09:59:04 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- ==> Parameters: 1(Integer)
2020/06/24-09:59:04 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- <==      Total: 1
2020/06/24-09:59:04 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- ==>  Preparing: select UnitName from sj_unit where UnitID = ? 
2020/06/24-09:59:04 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- ==> Parameters: 1(Integer)
2020/06/24-09:59:04 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- <==      Total: 1
2020/06/24-09:59:04 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- ==>  Preparing: select UnitName from sj_unit where UnitID = ? 
2020/06/24-09:59:04 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- ==> Parameters: 1(Integer)
2020/06/24-09:59:04 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- <==      Total: 1
2020/06/24-09:59:04 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- ==>  Preparing: select UnitName from sj_unit where UnitID = ? 
2020/06/24-09:59:04 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- ==> Parameters: 1(Integer)
2020/06/24-09:59:04 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- <==      Total: 1
2020/06/24-09:59:04 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- ==>  Preparing: select UnitName from sj_unit where UnitID = ? 
2020/06/24-09:59:04 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- ==> Parameters: 1(Integer)
2020/06/24-09:59:04 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- <==      Total: 1
2020/06/24-09:59:04 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- ==>  Preparing: select UnitName from sj_unit where UnitID = ? 
2020/06/24-09:59:04 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- ==> Parameters: 1(Integer)
2020/06/24-09:59:04 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- <==      Total: 1
2020/06/24-09:59:04 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- ==>  Preparing: select UnitName from sj_unit where UnitID = ? 
2020/06/24-09:59:04 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- ==> Parameters: 1(Integer)
2020/06/24-09:59:04 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- <==      Total: 1
2020/06/24-09:59:04 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- ==>  Preparing: select UnitName from sj_unit where UnitID = ? 
2020/06/24-09:59:04 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- ==> Parameters: 1(Integer)
2020/06/24-09:59:04 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- <==      Total: 1
2020/06/24-09:59:04 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- ==>  Preparing: select UnitName from sj_unit where UnitID = ? 
2020/06/24-09:59:04 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- ==> Parameters: 1(Integer)
2020/06/24-09:59:04 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- <==      Total: 1
2020/06/24-09:59:04 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- ==>  Preparing: select UnitName from sj_unit where UnitID = ? 
2020/06/24-09:59:04 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- ==> Parameters: 1(Integer)
2020/06/24-09:59:04 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- <==      Total: 1
2020/06/24-09:59:04 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- ==>  Preparing: select UnitName from sj_unit where UnitID = ? 
2020/06/24-09:59:04 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- ==> Parameters: 1(Integer)
2020/06/24-09:59:04 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- <==      Total: 1
2020/06/24-09:59:04 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- ==>  Preparing: select UnitName from sj_unit where UnitID = ? 
2020/06/24-09:59:04 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- ==> Parameters: 1(Integer)
2020/06/24-09:59:04 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- <==      Total: 1
2020/06/24-09:59:04 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- ==>  Preparing: select UnitName from sj_unit where UnitID = ? 
2020/06/24-09:59:04 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- ==> Parameters: 1(Integer)
2020/06/24-09:59:04 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- <==      Total: 1
2020/06/24-09:59:04 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- ==>  Preparing: select UnitName from sj_unit where UnitID = ? 
2020/06/24-09:59:04 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- ==> Parameters: 1(Integer)
2020/06/24-09:59:04 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- <==      Total: 1
2020/06/24-09:59:04 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- ==>  Preparing: select UnitName from sj_unit where UnitID = ? 
2020/06/24-09:59:04 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- ==> Parameters: 1(Integer)
2020/06/24-09:59:04 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- <==      Total: 1
2020/06/24-09:59:04 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- ==>  Preparing: select UnitName from sj_unit where UnitID = ? 
2020/06/24-09:59:04 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- ==> Parameters: 1(Integer)
2020/06/24-09:59:04 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- <==      Total: 1
2020/06/24-09:59:04 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- ==>  Preparing: select UnitName from sj_unit where UnitID = ? 
2020/06/24-09:59:04 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- ==> Parameters: 1(Integer)
2020/06/24-09:59:04 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- <==      Total: 1
2020/06/24-09:59:04 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- ==>  Preparing: select UnitName from sj_unit where UnitID = ? 
2020/06/24-09:59:04 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- ==> Parameters: 1(Integer)
2020/06/24-09:59:04 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- <==      Total: 1
2020/06/24-09:59:04 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- ==>  Preparing: select UnitName from sj_unit where UnitID = ? 
2020/06/24-09:59:04 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- ==> Parameters: 1(Integer)
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- <==      Total: 1
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- ==>  Preparing: select UnitName from sj_unit where UnitID = ? 
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- ==> Parameters: 1(Integer)
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- <==      Total: 1
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- ==>  Preparing: select UnitName from sj_unit where UnitID = ? 
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- ==> Parameters: 1(Integer)
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- <==      Total: 1
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- ==>  Preparing: select UnitName from sj_unit where UnitID = ? 
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- ==> Parameters: 1(Integer)
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- <==      Total: 1
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- ==>  Preparing: select UnitName from sj_unit where UnitID = ? 
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- ==> Parameters: 1(Integer)
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- <==      Total: 1
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- ==>  Preparing: select UnitName from sj_unit where UnitID = ? 
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- ==> Parameters: 1(Integer)
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- <==      Total: 1
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- ==>  Preparing: select UnitName from sj_unit where UnitID = ? 
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- ==> Parameters: 1(Integer)
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- <==      Total: 1
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- ==>  Preparing: select UnitName from sj_unit where UnitID = ? 
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- ==> Parameters: 1(Integer)
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- <==      Total: 1
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- ==>  Preparing: select UnitName from sj_unit where UnitID = ? 
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- ==> Parameters: 1(Integer)
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- <==      Total: 1
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- ==>  Preparing: select UnitName from sj_unit where UnitID = ? 
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- ==> Parameters: 1(Integer)
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- <==      Total: 1
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==>  Preparing: select * from sj_warehousesecond where GoodsID = ? and HospitalID = ? 
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==> Parameters: 1(Integer), 901600(String)
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- <==      Total: 1
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==>  Preparing: select * from sj_warehousesecond where GoodsID = ? and HospitalID = ? 
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==> Parameters: 2(Integer), 901600(String)
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- <==      Total: 1
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==>  Preparing: select * from sj_warehousesecond where GoodsID = ? and HospitalID = ? 
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==> Parameters: 3(Integer), 901600(String)
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- <==      Total: 1
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==>  Preparing: select * from sj_warehousesecond where GoodsID = ? and HospitalID = ? 
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==> Parameters: 4(Integer), 901600(String)
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- <==      Total: 1
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==>  Preparing: select * from sj_warehousesecond where GoodsID = ? and HospitalID = ? 
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==> Parameters: 5(Integer), 901600(String)
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- <==      Total: 0
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==>  Preparing: select * from sj_warehousesecond where GoodsID = ? and HospitalID = ? 
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==> Parameters: 6(Integer), 901600(String)
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- <==      Total: 0
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==>  Preparing: select * from sj_warehousesecond where GoodsID = ? and HospitalID = ? 
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==> Parameters: 7(Integer), 901600(String)
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- <==      Total: 0
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==>  Preparing: select * from sj_warehousesecond where GoodsID = ? and HospitalID = ? 
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==> Parameters: 8(Integer), 901600(String)
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- <==      Total: 0
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==>  Preparing: select * from sj_warehousesecond where GoodsID = ? and HospitalID = ? 
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==> Parameters: 9(Integer), 901600(String)
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- <==      Total: 0
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==>  Preparing: select * from sj_warehousesecond where GoodsID = ? and HospitalID = ? 
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==> Parameters: 10(Integer), 901600(String)
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- <==      Total: 1
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==>  Preparing: select * from sj_warehousesecond where GoodsID = ? and HospitalID = ? 
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==> Parameters: 11(Integer), 901600(String)
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- <==      Total: 0
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==>  Preparing: select * from sj_warehousesecond where GoodsID = ? and HospitalID = ? 
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==> Parameters: 12(Integer), 901600(String)
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- <==      Total: 1
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==>  Preparing: select * from sj_warehousesecond where GoodsID = ? and HospitalID = ? 
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==> Parameters: 13(Integer), 901600(String)
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- <==      Total: 1
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==>  Preparing: select * from sj_warehousesecond where GoodsID = ? and HospitalID = ? 
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==> Parameters: 14(Integer), 901600(String)
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- <==      Total: 0
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==>  Preparing: select * from sj_warehousesecond where GoodsID = ? and HospitalID = ? 
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==> Parameters: 15(Integer), 901600(String)
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- <==      Total: 0
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==>  Preparing: select * from sj_warehousesecond where GoodsID = ? and HospitalID = ? 
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==> Parameters: 16(Integer), 901600(String)
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- <==      Total: 0
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==>  Preparing: select * from sj_warehousesecond where GoodsID = ? and HospitalID = ? 
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==> Parameters: 17(Integer), 901600(String)
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- <==      Total: 0
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==>  Preparing: select * from sj_warehousesecond where GoodsID = ? and HospitalID = ? 
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==> Parameters: 18(Integer), 901600(String)
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- <==      Total: 0
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==>  Preparing: select * from sj_warehousesecond where GoodsID = ? and HospitalID = ? 
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==> Parameters: 19(Integer), 901600(String)
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- <==      Total: 0
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==>  Preparing: select * from sj_warehousesecond where GoodsID = ? and HospitalID = ? 
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==> Parameters: 20(Integer), 901600(String)
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- <==      Total: 0
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==>  Preparing: select * from sj_warehousesecond where GoodsID = ? and HospitalID = ? 
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==> Parameters: 21(Integer), 901600(String)
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- <==      Total: 0
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==>  Preparing: select * from sj_warehousesecond where GoodsID = ? and HospitalID = ? 
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==> Parameters: 22(Integer), 901600(String)
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- <==      Total: 0
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==>  Preparing: select * from sj_warehousesecond where GoodsID = ? and HospitalID = ? 
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==> Parameters: 23(Integer), 901600(String)
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- <==      Total: 0
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==>  Preparing: select * from sj_warehousesecond where GoodsID = ? and HospitalID = ? 
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==> Parameters: 24(Integer), 901600(String)
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- <==      Total: 0
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==>  Preparing: select * from sj_warehousesecond where GoodsID = ? and HospitalID = ? 
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==> Parameters: 25(Integer), 901600(String)
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- <==      Total: 0
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==>  Preparing: select * from sj_warehousesecond where GoodsID = ? and HospitalID = ? 
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==> Parameters: 26(Integer), 901600(String)
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- <==      Total: 0
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==>  Preparing: select * from sj_warehousesecond where GoodsID = ? and HospitalID = ? 
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==> Parameters: 27(Integer), 901600(String)
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- <==      Total: 0
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==>  Preparing: select * from sj_warehousesecond where GoodsID = ? and HospitalID = ? 
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==> Parameters: 28(Integer), 901600(String)
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- <==      Total: 0
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==>  Preparing: select * from sj_warehousesecond where GoodsID = ? and HospitalID = ? 
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==> Parameters: 29(Integer), 901600(String)
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- <==      Total: 0
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==>  Preparing: select * from sj_warehousesecond where GoodsID = ? and HospitalID = ? 
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==> Parameters: 30(Integer), 901600(String)
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- <==      Total: 0
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==>  Preparing: select * from sj_warehousesecond where GoodsID = ? and HospitalID = ? 
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==> Parameters: 31(Integer), 901600(String)
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- <==      Total: 0
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==>  Preparing: select * from sj_warehousesecond where GoodsID = ? and HospitalID = ? 
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==> Parameters: 32(Integer), 901600(String)
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- <==      Total: 0
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==>  Preparing: select * from sj_warehousesecond where GoodsID = ? and HospitalID = ? 
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==> Parameters: 33(Integer), 901600(String)
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- <==      Total: 0
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==>  Preparing: select * from sj_warehousesecond where GoodsID = ? and HospitalID = ? 
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==> Parameters: 34(Integer), 901600(String)
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- <==      Total: 0
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==>  Preparing: select * from sj_warehousesecond where GoodsID = ? and HospitalID = ? 
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==> Parameters: 35(Integer), 901600(String)
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- <==      Total: 0
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==>  Preparing: select * from sj_warehousesecond where GoodsID = ? and HospitalID = ? 
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==> Parameters: 36(Integer), 901600(String)
2020/06/24-09:59:05 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- <==      Total: 0
2020/06/24-10:01:11 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderDetailMapper.findListByOrderNo- ==>  Preparing: select * from sj_orderdetail where OrderNo = ? 
2020/06/24-10:01:11 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderDetailMapper.findListByOrderNo- ==> Parameters: 9016002000028(String)
2020/06/24-10:01:11 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderDetailMapper.findListByOrderNo- <==      Total: 1
2020/06/24-10:01:11 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- ==>  Preparing: select UnitName from sj_unit where UnitID = ? 
2020/06/24-10:01:11 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- ==> Parameters: 1(Integer)
2020/06/24-10:01:11 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- <==      Total: 1
2020/06/24-10:01:11 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==>  Preparing: select * from sj_warehousesecond where GoodsID = ? and HospitalID = ? 
2020/06/24-10:01:11 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==> Parameters: 1(Integer), 901600(String)
2020/06/24-10:01:11 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- <==      Total: 1
2020/06/24-10:01:12 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderDetailMapper.findListByOrderNo- ==>  Preparing: select * from sj_orderdetail where OrderNo = ? 
2020/06/24-10:01:12 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderDetailMapper.findListByOrderNo- ==> Parameters: 9016002000027(String)
2020/06/24-10:01:12 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderDetailMapper.findListByOrderNo- <==      Total: 3
2020/06/24-10:01:12 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- ==>  Preparing: select UnitName from sj_unit where UnitID = ? 
2020/06/24-10:01:12 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- ==> Parameters: 1(Integer)
2020/06/24-10:01:12 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- <==      Total: 1
2020/06/24-10:01:12 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- ==>  Preparing: select UnitName from sj_unit where UnitID = ? 
2020/06/24-10:01:12 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- ==> Parameters: 1(Integer)
2020/06/24-10:01:12 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- <==      Total: 1
2020/06/24-10:01:12 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- ==>  Preparing: select UnitName from sj_unit where UnitID = ? 
2020/06/24-10:01:12 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- ==> Parameters: 1(Integer)
2020/06/24-10:01:12 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- <==      Total: 1
2020/06/24-10:01:12 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==>  Preparing: select * from sj_warehousesecond where GoodsID = ? and HospitalID = ? 
2020/06/24-10:01:12 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==> Parameters: 1(Integer), 901600(String)
2020/06/24-10:01:12 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- <==      Total: 1
2020/06/24-10:01:12 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==>  Preparing: select * from sj_warehousesecond where GoodsID = ? and HospitalID = ? 
2020/06/24-10:01:12 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==> Parameters: 2(Integer), 901600(String)
2020/06/24-10:01:12 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- <==      Total: 1
2020/06/24-10:01:12 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==>  Preparing: select * from sj_warehousesecond where GoodsID = ? and HospitalID = ? 
2020/06/24-10:01:12 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==> Parameters: 3(Integer), 901600(String)
2020/06/24-10:01:12 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- <==      Total: 1
2020/06/24-10:01:50 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-10:02:53 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-10:02:56 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondRecordMapper.inquiryOneYear- ==>  Preparing: select count(*) from sj_warehousesecondrecord where YEAR(WAREHOUSEDATE)=YEAR(NOW()) and HOSPITALID = ?; 
2020/06/24-10:02:56 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondRecordMapper.inquiryOneYear- ==> Parameters: 901600(String)
2020/06/24-10:02:56 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondRecordMapper.inquiryOneYear- <==      Total: 1
2020/06/24-10:06:50 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-10:07:53 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-10:10:44 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.WarehouseSecondRecordMapper.inquiryOneYear- ==>  Preparing: select count(*) from sj_warehousesecondrecord where YEAR(WAREHOUSEDATE)=YEAR(NOW()) and HOSPITALID = ?; 
2020/06/24-10:10:44 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.WarehouseSecondRecordMapper.inquiryOneYear- ==> Parameters: 901600(String)
2020/06/24-10:10:44 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.WarehouseSecondRecordMapper.inquiryOneYear- <==      Total: 1
2020/06/24-10:11:50 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-10:12:11 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.WarehouseSecondRecordMapper.inquiryOneYear- ==>  Preparing: select count(*) from sj_warehousesecondrecord where YEAR(WAREHOUSEDATE)=YEAR(NOW()) and HOSPITALID = ?; 
2020/06/24-10:12:11 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.WarehouseSecondRecordMapper.inquiryOneYear- ==> Parameters: 901600(String)
2020/06/24-10:12:12 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.WarehouseSecondRecordMapper.inquiryOneYear- <==      Total: 1
2020/06/24-10:12:13 [http-nio-8083-exec-8] DEBUG com.huijian.rac.mapper.WarehouseSecondRecordMapper.inquiryOneYear- ==>  Preparing: select count(*) from sj_warehousesecondrecord where YEAR(WAREHOUSEDATE)=YEAR(NOW()) and HOSPITALID = ?; 
2020/06/24-10:12:13 [http-nio-8083-exec-8] DEBUG com.huijian.rac.mapper.WarehouseSecondRecordMapper.inquiryOneYear- ==> Parameters: 901600(String)
2020/06/24-10:12:13 [http-nio-8083-exec-8] DEBUG com.huijian.rac.mapper.WarehouseSecondRecordMapper.inquiryOneYear- <==      Total: 1
2020/06/24-10:12:53 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-10:15:07 [http-nio-8083-exec-7] DEBUG com.huijian.rac.mapper.WarehouseSecondRecordMapper.getWarehouseRecordByPage- ==>  Preparing: SELECT * from sj_warehousesecondrecord where WarehouseNo like concat('%',?,'%') and WarehouseDate >= ? and WarehouseDate < ? and HospitalID = ? order by ID desc limit ?, ? 
2020/06/24-10:15:07 [http-nio-8083-exec-7] DEBUG com.huijian.rac.mapper.WarehouseSecondRecordMapper.getWarehouseRecordByPage- ==> Parameters: (String), 2020-02-01 00:00:00.0(Timestamp), 2020-07-01 23:59:59.0(Timestamp), 901600(String), 0(Integer), 10(Integer)
2020/06/24-10:15:07 [http-nio-8083-exec-7] DEBUG com.huijian.rac.mapper.WarehouseSecondRecordMapper.getWarehouseRecordByPage- <==      Total: 9
2020/06/24-10:15:07 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.SecondGoodsRecordMapper.inquirySecondGoodsRecordByID- ==>  Preparing: select * from sj_secondgoodsrecord where WAREHOUSESECONDRECORDID = ? and HOSPITALID = ? 
2020/06/24-10:15:07 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.SecondGoodsRecordMapper.inquirySecondGoodsRecordByID- ==> Parameters: 21(Integer), 901600(String)
2020/06/24-10:15:07 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.SecondGoodsRecordMapper.inquirySecondGoodsRecordByID- <==      Total: 1
2020/06/24-10:15:37 [http-nio-8083-exec-10] DEBUG com.huijian.rac.mapper.SecondGoodsRecordMapper.inquirySecondGoodsRecordByID- ==>  Preparing: select * from sj_secondgoodsrecord where WAREHOUSESECONDRECORDID = ? and HOSPITALID = ? 
2020/06/24-10:15:37 [http-nio-8083-exec-10] DEBUG com.huijian.rac.mapper.SecondGoodsRecordMapper.inquirySecondGoodsRecordByID- ==> Parameters: 21(Integer), 901600(String)
2020/06/24-10:15:37 [http-nio-8083-exec-10] DEBUG com.huijian.rac.mapper.SecondGoodsRecordMapper.inquirySecondGoodsRecordByID- <==      Total: 1
2020/06/24-10:16:50 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-10:16:54 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondRecordMapper.inquiryOneYear- ==>  Preparing: select count(*) from sj_warehousesecondrecord where YEAR(WAREHOUSEDATE)=YEAR(NOW()) and HOSPITALID = ?; 
2020/06/24-10:16:54 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondRecordMapper.inquiryOneYear- ==> Parameters: 901600(String)
2020/06/24-10:16:54 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondRecordMapper.inquiryOneYear- <==      Total: 1
2020/06/24-10:17:53 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-10:21:50 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-10:22:53 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-10:26:50 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-10:27:53 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-10:31:50 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-10:32:53 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-10:36:50 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-10:37:53 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-10:41:50 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-10:42:53 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-10:46:50 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-10:47:53 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-10:51:50 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-10:52:53 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-10:53:28 [main] INFO  com.huijian.rac.RacStockServiceApplication- No active profile set, falling back to default profiles: default
2020/06/24-10:53:29 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Multiple Spring Data modules found, entering strict repository configuration mode!
2020/06/24-10:53:29 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Bootstrapping Spring Data repositories in DEFAULT mode.
2020/06/24-10:53:29 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Finished Spring Data repository scanning in 22ms. Found 0 repository interfaces.
2020/06/24-10:53:29 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'deliveryUnitMapper' and 'com.huijian.rac.mapper.DeliveryUnitMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-10:53:29 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'departMapper' and 'com.huijian.rac.mapper.DepartMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-10:53:29 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'discardDetailMapper' and 'com.huijian.rac.mapper.DiscardDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-10:53:29 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'discardMapper' and 'com.huijian.rac.mapper.DiscardMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-10:53:29 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsDictionaryMapper' and 'com.huijian.rac.mapper.GoodsDictionaryMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-10:53:29 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsRecordMapper' and 'com.huijian.rac.mapper.GoodsRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-10:53:29 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsSupplierMapper' and 'com.huijian.rac.mapper.GoodsSupplierMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-10:53:29 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'leaveStockListDetailMapper' and 'com.huijian.rac.mapper.LeaveStockListDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-10:53:29 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'materialMapper' and 'com.huijian.rac.mapper.MaterialMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-10:53:29 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'outboundRecordMapper' and 'com.huijian.rac.mapper.OutboundRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-10:53:29 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'outboundSecondRecordMapper' and 'com.huijian.rac.mapper.OutboundSecondRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-10:53:29 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'reagentMapper' and 'com.huijian.rac.mapper.ReagentMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-10:53:29 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'returnGoodsDetailMapper' and 'com.huijian.rac.mapper.ReturnGoodsDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-10:53:29 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'returnGoodsMapper' and 'com.huijian.rac.mapper.ReturnGoodsMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-10:53:29 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'secondGoodsRecordMapper' and 'com.huijian.rac.mapper.SecondGoodsRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-10:53:29 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'secondLeaveStockListDetailMapper' and 'com.huijian.rac.mapper.SecondLeaveStockListDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-10:53:29 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'unitMapper' and 'com.huijian.rac.mapper.UnitMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-10:53:29 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseMapper' and 'com.huijian.rac.mapper.WarehouseMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-10:53:29 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseRecordMapper' and 'com.huijian.rac.mapper.WarehouseRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-10:53:29 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseSecondMapper' and 'com.huijian.rac.mapper.WarehouseSecondMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-10:53:29 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseSecondRecordMapper' and 'com.huijian.rac.mapper.WarehouseSecondRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-10:53:29 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'departsMapper' and 'com.huijian.rac.mapper.DepartsMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-10:53:29 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsPackageDetailMapper' and 'com.huijian.rac.mapper.GoodsPackageDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-10:53:29 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsPackageMapper' and 'com.huijian.rac.mapper.GoodsPackageMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-10:53:29 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'hospitalMapper' and 'com.huijian.rac.mapper.HospitalMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-10:53:29 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'leaveStockListSecondMapper' and 'com.huijian.rac.mapper.LeaveStockListSecondMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-10:53:29 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderDetailMapper' and 'com.huijian.rac.mapper.OrderDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-10:53:29 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderMapper' and 'com.huijian.rac.mapper.OrderMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-10:53:29 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderOperateMapper' and 'com.huijian.rac.mapper.OrderOperateMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-10:53:29 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderReviewMapper' and 'com.huijian.rac.mapper.OrderReviewMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-10:53:29 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- No MyBatis mapper was found in '[com.huijian.rac.mapper]' package. Please check your configuration.
2020/06/24-10:53:29 [main] INFO  org.springframework.cloud.context.scope.GenericScope- BeanFactory id=67a76e45-faee-37d4-bfd4-e136a0fefe86
2020/06/24-10:53:29 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/24-10:53:29 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'redisConfig' of type [com.huijian.rac.config.RedisConfig$$EnhancerBySpringCGLIB$$55f7ae76] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/24-10:53:29 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/24-10:53:30 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat initialized with port(s): 8083 (http)
2020/06/24-10:53:30 [main] INFO  org.apache.catalina.core.StandardService- Starting service [Tomcat]
2020/06/24-10:53:30 [main] INFO  org.apache.catalina.core.StandardEngine- Starting Servlet engine: [Apache Tomcat/9.0.27]
2020/06/24-10:53:30 [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]- Initializing Spring embedded WebApplicationContext
2020/06/24-10:53:30 [main] INFO  org.springframework.web.context.ContextLoader- Root WebApplicationContext: initialization completed in 1302 ms
2020/06/24-10:53:31 [main] WARN  com.netflix.config.sources.URLConfigurationSource- No URLs will be polled as dynamic configuration sources.
2020/06/24-10:53:31 [main] INFO  com.netflix.config.sources.URLConfigurationSource- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020/06/24-10:53:31 [main] WARN  com.netflix.config.sources.URLConfigurationSource- No URLs will be polled as dynamic configuration sources.
2020/06/24-10:53:31 [main] INFO  com.netflix.config.sources.URLConfigurationSource- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020/06/24-10:53:31 [main] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor- Initializing ExecutorService 'applicationTaskExecutor'
2020/06/24-10:53:32 [main] WARN  org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger- You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020/06/24-10:53:32 [main] WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger- Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020/06/24-10:53:32 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory- Setting initial instance status as: STARTING
2020/06/24-10:53:32 [main] INFO  com.netflix.discovery.DiscoveryClient- Initializing Eureka in region us-east-1
2020/06/24-10:53:32 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using JSON encoding codec LegacyJacksonJson
2020/06/24-10:53:32 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using JSON decoding codec LegacyJacksonJson
2020/06/24-10:53:32 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using XML encoding codec XStreamXml
2020/06/24-10:53:32 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using XML decoding codec XStreamXml
2020/06/24-10:53:32 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-10:53:33 [main] INFO  com.netflix.discovery.DiscoveryClient- Disable delta property : false
2020/06/24-10:53:33 [main] INFO  com.netflix.discovery.DiscoveryClient- Single vip registry refresh property : null
2020/06/24-10:53:33 [main] INFO  com.netflix.discovery.DiscoveryClient- Force full registry fetch : false
2020/06/24-10:53:33 [main] INFO  com.netflix.discovery.DiscoveryClient- Application is null : false
2020/06/24-10:53:33 [main] INFO  com.netflix.discovery.DiscoveryClient- Registered Applications size is zero : true
2020/06/24-10:53:33 [main] INFO  com.netflix.discovery.DiscoveryClient- Application version is -1: true
2020/06/24-10:53:33 [main] INFO  com.netflix.discovery.DiscoveryClient- Getting all instance registry info from the eureka server
2020/06/24-10:53:33 [main] INFO  com.netflix.discovery.DiscoveryClient- The response status is 200
2020/06/24-10:53:33 [main] INFO  com.netflix.discovery.DiscoveryClient- Starting heartbeat executor: renew interval is: 30
2020/06/24-10:53:33 [main] INFO  com.netflix.discovery.InstanceInfoReplicator- InstanceInfoReplicator onDemand update allowed rate per min is 4
2020/06/24-10:53:33 [main] INFO  com.netflix.discovery.DiscoveryClient- Discovery Client initialized at timestamp 1592967213114 with initial instances count: 2
2020/06/24-10:53:33 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry- Registering application RAC-STOCK-SERVICE with eureka with status UP
2020/06/24-10:53:33 [main] INFO  com.netflix.discovery.DiscoveryClient- Saw local status change event StatusChangeEvent [timestamp=1592967213117, current=UP, previous=STARTING]
2020/06/24-10:53:33 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-STOCK-SERVICE/MSI.mshome.net:rac-stock-service:8083: registering service...
2020/06/24-10:53:33 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Attempting to connect to: [192.168.161.129:5672]
2020/06/24-10:53:33 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Created new connection: rabbitConnectionFactory#1e4c6583:0/SimpleConnection@1d1cfe4 [delegate=amqp://admin@192.168.161.129:5672/, localPort= 52048]
2020/06/24-10:53:33 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-STOCK-SERVICE/MSI.mshome.net:rac-stock-service:8083 - registration status: 204
2020/06/24-10:53:33 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat started on port(s): 8083 (http) with context path ''
2020/06/24-10:53:33 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration- Updating port to 8083
2020/06/24-10:53:33 [main] INFO  com.huijian.rac.RacStockServiceApplication- Started RacStockServiceApplication in 5.877 seconds (JVM running for 6.655)
2020/06/24-10:53:49 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==>  Preparing: select * from pub_depart where HOSPITALID=? 
2020/06/24-10:53:49 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==>  Preparing: select count(*) from sj_order where YEAR(OrderDate)=YEAR(NOW()); 
2020/06/24-10:53:49 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==> Parameters: 
2020/06/24-10:53:49 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==> Parameters: 901600(String)
2020/06/24-10:53:49 [http-nio-8083-exec-2] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]- Initializing Spring DispatcherServlet 'dispatcherServlet'
2020/06/24-10:53:49 [http-nio-8083-exec-2] INFO  org.springframework.web.servlet.DispatcherServlet- Initializing Servlet 'dispatcherServlet'
2020/06/24-10:53:49 [http-nio-8083-exec-2] INFO  org.springframework.web.servlet.DispatcherServlet- Completed initialization in 5 ms
2020/06/24-10:53:49 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- <==      Total: 1
2020/06/24-10:53:50 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- <==      Total: 22
2020/06/24-10:54:15 [http-nio-8083-exec-1] INFO  io.lettuce.core.EpollProvider- Starting without optional epoll library
2020/06/24-10:54:15 [http-nio-8083-exec-1] INFO  io.lettuce.core.KqueueProvider- Starting without optional kqueue library
2020/06/24-10:54:15 [http-nio-8083-exec-1] INFO  com.zaxxer.hikari.HikariDataSource- HikariPool-1 - Starting...
2020/06/24-10:54:15 [http-nio-8083-exec-1] INFO  com.zaxxer.hikari.HikariDataSource- HikariPool-1 - Start completed.
2020/06/24-10:54:15 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.getAllGoods- ==>  Preparing: select * from sj_goodsdictionary 
2020/06/24-10:54:15 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.getAllGoods- ==> Parameters: 
2020/06/24-10:54:15 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.getAllGoods- <==      Total: 20
2020/06/24-10:54:15 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/24-10:54:15 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/24-10:54:15 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/24-10:54:15 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/24-10:54:15 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 2(Integer)
2020/06/24-10:54:15 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/24-10:54:15 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/24-10:54:15 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/24-10:54:15 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/24-10:54:15 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/24-10:54:15 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/24-10:54:15 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/24-10:54:15 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/24-10:54:15 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 2(Integer)
2020/06/24-10:54:15 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/24-10:54:15 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/24-10:54:15 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/24-10:54:15 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/24-10:54:15 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/24-10:54:15 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/24-10:54:15 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/24-10:54:15 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/24-10:54:15 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 2(Integer)
2020/06/24-10:54:15 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/24-10:54:15 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/24-10:54:15 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/24-10:54:15 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/24-10:54:15 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/24-10:54:15 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/24-10:54:15 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/24-10:54:15 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/24-10:54:15 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/24-10:54:15 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/24-10:54:15 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/24-10:54:15 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 2(Integer)
2020/06/24-10:54:15 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/24-10:54:15 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/24-10:54:15 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/24-10:54:15 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/24-10:54:15 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/24-10:54:15 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/24-10:54:15 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/24-10:54:15 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/24-10:54:15 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 2(Integer)
2020/06/24-10:54:15 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/24-10:54:15 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/24-10:54:15 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/24-10:54:15 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/24-10:54:15 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/24-10:54:15 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/24-10:54:16 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/24-10:54:16 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/24-10:54:16 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 2(Integer)
2020/06/24-10:54:16 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/24-10:54:16 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/24-10:54:16 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/24-10:54:16 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/24-10:54:16 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/24-10:54:16 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/24-10:54:16 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/24-10:54:18 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- ==>  Preparing: select * from sj_order where HospitalID = ? order by OrderDate DESC limit 1; 
2020/06/24-10:54:18 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- ==> Parameters: 901600(String)
2020/06/24-10:54:18 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- <==      Total: 1
2020/06/24-10:54:19 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- ==>  Preparing: select * from sj_orderdetail where OrderNo = ? and GoodsID in ( ? ) 
2020/06/24-10:54:19 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- ==> Parameters: 9016002000027(String), 1(Integer)
2020/06/24-10:54:19 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- <==      Total: 1
2020/06/24-10:54:19 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- ==>  Preparing: select * from sj_secondleavestocklistdetail where HospitalID = ? and GoodsID in ( ? ) and now() >= DATE_SUB(CURDATE(), INTERVAL 12 month) 
2020/06/24-10:54:19 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- ==> Parameters: 901600(String), 1(Integer)
2020/06/24-10:54:19 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- <==      Total: 1
2020/06/24-10:54:19 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==>  Preparing: select * from sj_warehousesecond where GoodsID = ? and HospitalID = ? 
2020/06/24-10:54:19 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==> Parameters: 1(Integer), 901600(String)
2020/06/24-10:54:19 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- <==      Total: 1
2020/06/24-10:54:24 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderMapper.insert- ==>  Preparing: insert into sj_order ( OrderNo, DepartCode, CollarPersonID, AuditPersonID, Memo, SumPrice, Urgent, OrderState, OrderDate, HospitalID ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2020/06/24-10:54:24 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderMapper.insert- ==> Parameters: 9016002000029(String), 12(String), 胡凌云(String), (String), 123(String), 2.22(String), 1(Integer), 0(Integer), 2020-6-24 10:54:24(String), 901600(String)
2020/06/24-10:54:24 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderMapper.insert- <==    Updates: 1
2020/06/24-10:54:24 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitName- ==>  Preparing: select * from sj_unit where UnitName = ? 
2020/06/24-10:54:24 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitName- ==> Parameters: null
2020/06/24-10:54:25 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitName- <==      Total: 0
2020/06/24-10:54:25 [http-nio-8084-exec-2] ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]- Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException] with root cause
java.lang.NullPointerException: null
	at com.huijian.rac.service.OrderDetailService.insert(OrderDetailService.java:37) ~[classes/:na]
	at com.huijian.rac.controller.OrderController.insert(OrderController.java:89) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_231]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_231]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_231]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_231]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_231]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_231]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_231]
2020/06/24-10:56:50 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-10:58:33 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-10:59:48 [main] INFO  com.huijian.rac.RacStockServiceApplication- No active profile set, falling back to default profiles: default
2020/06/24-10:59:48 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Multiple Spring Data modules found, entering strict repository configuration mode!
2020/06/24-10:59:48 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Bootstrapping Spring Data repositories in DEFAULT mode.
2020/06/24-10:59:48 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Finished Spring Data repository scanning in 25ms. Found 0 repository interfaces.
2020/06/24-10:59:49 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'deliveryUnitMapper' and 'com.huijian.rac.mapper.DeliveryUnitMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-10:59:49 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'departMapper' and 'com.huijian.rac.mapper.DepartMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-10:59:49 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'discardDetailMapper' and 'com.huijian.rac.mapper.DiscardDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-10:59:49 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'discardMapper' and 'com.huijian.rac.mapper.DiscardMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-10:59:49 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsDictionaryMapper' and 'com.huijian.rac.mapper.GoodsDictionaryMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-10:59:49 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsRecordMapper' and 'com.huijian.rac.mapper.GoodsRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-10:59:49 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsSupplierMapper' and 'com.huijian.rac.mapper.GoodsSupplierMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-10:59:49 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'leaveStockListDetailMapper' and 'com.huijian.rac.mapper.LeaveStockListDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-10:59:49 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'materialMapper' and 'com.huijian.rac.mapper.MaterialMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-10:59:49 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'outboundRecordMapper' and 'com.huijian.rac.mapper.OutboundRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-10:59:49 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'outboundSecondRecordMapper' and 'com.huijian.rac.mapper.OutboundSecondRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-10:59:49 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'reagentMapper' and 'com.huijian.rac.mapper.ReagentMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-10:59:49 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'returnGoodsDetailMapper' and 'com.huijian.rac.mapper.ReturnGoodsDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-10:59:49 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'returnGoodsMapper' and 'com.huijian.rac.mapper.ReturnGoodsMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-10:59:49 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'secondGoodsRecordMapper' and 'com.huijian.rac.mapper.SecondGoodsRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-10:59:49 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'secondLeaveStockListDetailMapper' and 'com.huijian.rac.mapper.SecondLeaveStockListDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-10:59:49 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'unitMapper' and 'com.huijian.rac.mapper.UnitMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-10:59:49 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseMapper' and 'com.huijian.rac.mapper.WarehouseMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-10:59:49 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseRecordMapper' and 'com.huijian.rac.mapper.WarehouseRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-10:59:49 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseSecondMapper' and 'com.huijian.rac.mapper.WarehouseSecondMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-10:59:49 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseSecondRecordMapper' and 'com.huijian.rac.mapper.WarehouseSecondRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-10:59:49 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'departsMapper' and 'com.huijian.rac.mapper.DepartsMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-10:59:49 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsPackageDetailMapper' and 'com.huijian.rac.mapper.GoodsPackageDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-10:59:49 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsPackageMapper' and 'com.huijian.rac.mapper.GoodsPackageMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-10:59:49 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'hospitalMapper' and 'com.huijian.rac.mapper.HospitalMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-10:59:49 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'leaveStockListSecondMapper' and 'com.huijian.rac.mapper.LeaveStockListSecondMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-10:59:49 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderDetailMapper' and 'com.huijian.rac.mapper.OrderDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-10:59:49 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderMapper' and 'com.huijian.rac.mapper.OrderMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-10:59:49 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderOperateMapper' and 'com.huijian.rac.mapper.OrderOperateMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-10:59:49 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderReviewMapper' and 'com.huijian.rac.mapper.OrderReviewMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-10:59:49 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- No MyBatis mapper was found in '[com.huijian.rac.mapper]' package. Please check your configuration.
2020/06/24-10:59:49 [main] INFO  org.springframework.cloud.context.scope.GenericScope- BeanFactory id=67a76e45-faee-37d4-bfd4-e136a0fefe86
2020/06/24-10:59:49 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/24-10:59:49 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'redisConfig' of type [com.huijian.rac.config.RedisConfig$$EnhancerBySpringCGLIB$$939e3e6e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/24-10:59:49 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/24-10:59:49 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat initialized with port(s): 8083 (http)
2020/06/24-10:59:49 [main] INFO  org.apache.catalina.core.StandardService- Starting service [Tomcat]
2020/06/24-10:59:49 [main] INFO  org.apache.catalina.core.StandardEngine- Starting Servlet engine: [Apache Tomcat/9.0.27]
2020/06/24-10:59:49 [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]- Initializing Spring embedded WebApplicationContext
2020/06/24-10:59:49 [main] INFO  org.springframework.web.context.ContextLoader- Root WebApplicationContext: initialization completed in 1413 ms
2020/06/24-10:59:50 [main] WARN  com.netflix.config.sources.URLConfigurationSource- No URLs will be polled as dynamic configuration sources.
2020/06/24-10:59:50 [main] INFO  com.netflix.config.sources.URLConfigurationSource- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020/06/24-10:59:50 [main] WARN  com.netflix.config.sources.URLConfigurationSource- No URLs will be polled as dynamic configuration sources.
2020/06/24-10:59:50 [main] INFO  com.netflix.config.sources.URLConfigurationSource- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020/06/24-10:59:50 [main] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor- Initializing ExecutorService 'applicationTaskExecutor'
2020/06/24-10:59:51 [main] INFO  com.huijian.rac.RacOrderServiceApplication- No active profile set, falling back to default profiles: default
2020/06/24-10:59:51 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Multiple Spring Data modules found, entering strict repository configuration mode!
2020/06/24-10:59:51 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020/06/24-10:59:51 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Finished Spring Data repository scanning in 13ms. Found 0 Redis repository interfaces.
2020/06/24-10:59:51 [main] INFO  org.springframework.cloud.context.scope.GenericScope- BeanFactory id=f9e752be-742c-3d90-a32c-086a87b39fc6
2020/06/24-10:59:51 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/24-10:59:51 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/24-10:59:51 [main] WARN  org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger- You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020/06/24-10:59:51 [main] WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger- Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020/06/24-10:59:51 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat initialized with port(s): 8084 (http)
2020/06/24-10:59:51 [main] INFO  org.apache.catalina.core.StandardService- Starting service [Tomcat]
2020/06/24-10:59:51 [main] INFO  org.apache.catalina.core.StandardEngine- Starting Servlet engine: [Apache Tomcat/9.0.29]
2020/06/24-10:59:52 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory- Setting initial instance status as: STARTING
2020/06/24-10:59:52 [main] INFO  com.netflix.discovery.DiscoveryClient- Initializing Eureka in region us-east-1
2020/06/24-10:59:52 [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]- Initializing Spring embedded WebApplicationContext
2020/06/24-10:59:52 [main] INFO  org.springframework.web.context.ContextLoader- Root WebApplicationContext: initialization completed in 982 ms
2020/06/24-10:59:52 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using JSON encoding codec LegacyJacksonJson
2020/06/24-10:59:52 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using JSON decoding codec LegacyJacksonJson
2020/06/24-10:59:52 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using XML encoding codec XStreamXml
2020/06/24-10:59:52 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using XML decoding codec XStreamXml
2020/06/24-10:59:52 [main] WARN  com.netflix.config.sources.URLConfigurationSource- No URLs will be polled as dynamic configuration sources.
2020/06/24-10:59:52 [main] INFO  com.netflix.config.sources.URLConfigurationSource- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020/06/24-10:59:52 [main] WARN  com.netflix.config.sources.URLConfigurationSource- No URLs will be polled as dynamic configuration sources.
2020/06/24-10:59:52 [main] INFO  com.netflix.config.sources.URLConfigurationSource- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020/06/24-10:59:52 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-10:59:52 [main] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor- Initializing ExecutorService 'applicationTaskExecutor'
2020/06/24-10:59:52 [main] INFO  com.netflix.discovery.DiscoveryClient- Disable delta property : false
2020/06/24-10:59:52 [main] INFO  com.netflix.discovery.DiscoveryClient- Single vip registry refresh property : null
2020/06/24-10:59:52 [main] INFO  com.netflix.discovery.DiscoveryClient- Force full registry fetch : false
2020/06/24-10:59:52 [main] INFO  com.netflix.discovery.DiscoveryClient- Application is null : false
2020/06/24-10:59:52 [main] INFO  com.netflix.discovery.DiscoveryClient- Registered Applications size is zero : true
2020/06/24-10:59:52 [main] INFO  com.netflix.discovery.DiscoveryClient- Application version is -1: true
2020/06/24-10:59:52 [main] INFO  com.netflix.discovery.DiscoveryClient- Getting all instance registry info from the eureka server
2020/06/24-10:59:52 [main] INFO  com.netflix.discovery.DiscoveryClient- The response status is 200
2020/06/24-10:59:52 [main] INFO  com.netflix.discovery.DiscoveryClient- Starting heartbeat executor: renew interval is: 30
2020/06/24-10:59:52 [main] INFO  com.netflix.discovery.InstanceInfoReplicator- InstanceInfoReplicator onDemand update allowed rate per min is 4
2020/06/24-10:59:52 [main] INFO  com.netflix.discovery.DiscoveryClient- Discovery Client initialized at timestamp 1592967592854 with initial instances count: 2
2020/06/24-10:59:52 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry- Registering application RAC-STOCK-SERVICE with eureka with status UP
2020/06/24-10:59:52 [main] INFO  com.netflix.discovery.DiscoveryClient- Saw local status change event StatusChangeEvent [timestamp=1592967592856, current=UP, previous=STARTING]
2020/06/24-10:59:52 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-STOCK-SERVICE/MSI.mshome.net:rac-stock-service:8083: registering service...
2020/06/24-10:59:52 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Attempting to connect to: [192.168.161.129:5672]
2020/06/24-10:59:52 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Created new connection: rabbitConnectionFactory#465b38e6:0/SimpleConnection@58b8f9e3 [delegate=amqp://admin@192.168.161.129:5672/, localPort= 52448]
2020/06/24-10:59:52 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-STOCK-SERVICE/MSI.mshome.net:rac-stock-service:8083 - registration status: 204
2020/06/24-10:59:52 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat started on port(s): 8083 (http) with context path ''
2020/06/24-10:59:52 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration- Updating port to 8083
2020/06/24-10:59:53 [main] INFO  com.huijian.rac.RacStockServiceApplication- Started RacStockServiceApplication in 6.102 seconds (JVM running for 6.82)
2020/06/24-10:59:53 [main] WARN  org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger- You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020/06/24-10:59:53 [main] WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger- Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020/06/24-10:59:53 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory- Setting initial instance status as: STARTING
2020/06/24-10:59:54 [main] INFO  com.netflix.discovery.DiscoveryClient- Initializing Eureka in region us-east-1
2020/06/24-10:59:54 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using JSON encoding codec LegacyJacksonJson
2020/06/24-10:59:54 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using JSON decoding codec LegacyJacksonJson
2020/06/24-10:59:54 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using XML encoding codec XStreamXml
2020/06/24-10:59:54 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using XML decoding codec XStreamXml
2020/06/24-10:59:54 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-10:59:54 [main] INFO  com.netflix.discovery.DiscoveryClient- Disable delta property : false
2020/06/24-10:59:54 [main] INFO  com.netflix.discovery.DiscoveryClient- Single vip registry refresh property : null
2020/06/24-10:59:54 [main] INFO  com.netflix.discovery.DiscoveryClient- Force full registry fetch : false
2020/06/24-10:59:54 [main] INFO  com.netflix.discovery.DiscoveryClient- Application is null : false
2020/06/24-10:59:54 [main] INFO  com.netflix.discovery.DiscoveryClient- Registered Applications size is zero : true
2020/06/24-10:59:54 [main] INFO  com.netflix.discovery.DiscoveryClient- Application version is -1: true
2020/06/24-10:59:54 [main] INFO  com.netflix.discovery.DiscoveryClient- Getting all instance registry info from the eureka server
2020/06/24-10:59:54 [main] INFO  com.netflix.discovery.DiscoveryClient- The response status is 200
2020/06/24-10:59:54 [main] INFO  com.netflix.discovery.DiscoveryClient- Starting heartbeat executor: renew interval is: 30
2020/06/24-10:59:54 [main] INFO  com.netflix.discovery.InstanceInfoReplicator- InstanceInfoReplicator onDemand update allowed rate per min is 4
2020/06/24-10:59:54 [main] INFO  com.netflix.discovery.DiscoveryClient- Discovery Client initialized at timestamp 1592967594788 with initial instances count: 2
2020/06/24-10:59:54 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry- Registering application RAC-ORDER-SERVICE with eureka with status UP
2020/06/24-10:59:54 [main] INFO  com.netflix.discovery.DiscoveryClient- Saw local status change event StatusChangeEvent [timestamp=1592967594790, current=UP, previous=STARTING]
2020/06/24-10:59:54 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-ORDER-SERVICE/MSI.mshome.net:rac-order-service:8084: registering service...
2020/06/24-10:59:54 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Attempting to connect to: [192.168.161.129:5672]
2020/06/24-10:59:54 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Created new connection: rabbitConnectionFactory#e57e5d6:0/SimpleConnection@7e2bc2f4 [delegate=amqp://admin@192.168.161.129:5672/, localPort= 52456]
2020/06/24-10:59:54 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-ORDER-SERVICE/MSI.mshome.net:rac-order-service:8084 - registration status: 204
2020/06/24-10:59:54 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat started on port(s): 8084 (http) with context path ''
2020/06/24-10:59:54 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration- Updating port to 8084
2020/06/24-10:59:55 [main] INFO  com.huijian.rac.RacOrderServiceApplication- Started RacOrderServiceApplication in 5.213 seconds (JVM running for 5.951)
2020/06/24-11:03:08 [http-nio-8083-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]- Initializing Spring DispatcherServlet 'dispatcherServlet'
2020/06/24-11:03:08 [http-nio-8083-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet- Initializing Servlet 'dispatcherServlet'
2020/06/24-11:03:08 [http-nio-8084-exec-3] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]- Initializing Spring DispatcherServlet 'dispatcherServlet'
2020/06/24-11:03:08 [http-nio-8084-exec-3] INFO  org.springframework.web.servlet.DispatcherServlet- Initializing Servlet 'dispatcherServlet'
2020/06/24-11:03:08 [http-nio-8083-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet- Completed initialization in 7 ms
2020/06/24-11:03:08 [http-nio-8084-exec-3] INFO  org.springframework.web.servlet.DispatcherServlet- Completed initialization in 6 ms
2020/06/24-11:03:08 [http-nio-8084-exec-3] INFO  com.zaxxer.hikari.HikariDataSource- HikariPool-1 - Starting...
2020/06/24-11:03:08 [http-nio-8084-exec-3] INFO  com.zaxxer.hikari.HikariDataSource- HikariPool-1 - Start completed.
2020/06/24-11:03:08 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==>  Preparing: select count(*) from sj_order where YEAR(OrderDate)=YEAR(NOW()); 
2020/06/24-11:03:08 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==> Parameters: 
2020/06/24-11:03:08 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- <==      Total: 1
2020/06/24-11:03:08 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==>  Preparing: select * from pub_depart where HOSPITALID=? 
2020/06/24-11:03:08 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==> Parameters: 901600(String)
2020/06/24-11:03:08 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- <==      Total: 22
2020/06/24-11:03:16 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==>  Preparing: select count(*) from sj_order where YEAR(OrderDate)=YEAR(NOW()); 
2020/06/24-11:03:16 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==> Parameters: 
2020/06/24-11:03:16 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- <==      Total: 1
2020/06/24-11:03:17 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==>  Preparing: select * from pub_depart where HOSPITALID=? 
2020/06/24-11:03:17 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==> Parameters: 901600(String)
2020/06/24-11:03:17 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- <==      Total: 22
2020/06/24-11:03:28 [http-nio-8083-exec-2] INFO  io.lettuce.core.EpollProvider- Starting without optional epoll library
2020/06/24-11:03:28 [http-nio-8083-exec-2] INFO  io.lettuce.core.KqueueProvider- Starting without optional kqueue library
2020/06/24-11:03:30 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- ==>  Preparing: select * from sj_order where HospitalID = ? order by OrderDate DESC limit 1; 
2020/06/24-11:03:30 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- ==> Parameters: 901600(String)
2020/06/24-11:03:30 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- <==      Total: 1
2020/06/24-11:03:30 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- ==>  Preparing: select * from sj_orderdetail where OrderNo = ? and GoodsID in ( ? ) 
2020/06/24-11:03:30 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- ==> Parameters: 9016002000029(String), 1(Integer)
2020/06/24-11:03:30 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- <==      Total: 0
2020/06/24-11:03:30 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- ==>  Preparing: select * from sj_secondleavestocklistdetail where HospitalID = ? and GoodsID in ( ? ) and now() >= DATE_SUB(CURDATE(), INTERVAL 12 month) 
2020/06/24-11:03:30 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- ==> Parameters: 901600(String), 1(Integer)
2020/06/24-11:03:30 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- <==      Total: 1
2020/06/24-11:03:31 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==>  Preparing: select * from sj_warehousesecond where GoodsID = ? and HospitalID = ? 
2020/06/24-11:03:31 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==> Parameters: 1(Integer), 901600(String)
2020/06/24-11:03:31 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- <==      Total: 1
2020/06/24-11:03:34 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderMapper.insert- ==>  Preparing: insert into sj_order ( OrderNo, DepartCode, CollarPersonID, AuditPersonID, Memo, SumPrice, Urgent, OrderState, OrderDate, HospitalID ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2020/06/24-11:03:34 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderMapper.insert- ==> Parameters: 9016002000030(String), 12(String), 胡凌云(String), (String), 123(String), 2.22(String), 0(Integer), 0(Integer), 2020-6-24 11:3:34(String), 901600(String)
2020/06/24-11:03:34 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderMapper.insert- <==    Updates: 1
2020/06/24-11:03:34 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderDetailMapper.insert- ==>  Preparing: insert into sj_orderdetail ( OrderNo, GoodsID, GoodsName, Brand, UnitPrice, Memo, OrderNum, ReceiveNum, SendNum, RecommendedOrderQuantity ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2020/06/24-11:03:34 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderDetailMapper.insert- ==> Parameters: 9016002000030(String), 1(Integer), iphone12(String), apple(String), 1.11(BigDecimal), (String), 2(Integer), 0(Integer), 0(Integer), 1(Integer)
2020/06/24-11:03:34 [http-nio-8084-exec-4] ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]- Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLException: Field 'SpecsType' doesn't have a default value
### The error may exist in file [C:\Users\13955\Desktop\ReagentAndConsumables\springcloud\rac-order-service\target\classes\mapper\OrderDetailMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: insert into sj_orderdetail          ( OrderNo,                                           GoodsID,                                           GoodsName,                                           Brand,                                           UnitPrice,                                           Memo,                                           OrderNum,                                           ReceiveNum,                                           SendNum,                                           RecommendedOrderQuantity )           values ( ?,                                           ?,                                           ?,                                           ?,                                           ?,                                           ?,                                           ?,                                           ?,                                           ?,                                           ? )
### Cause: java.sql.SQLException: Field 'SpecsType' doesn't have a default value
; Field 'SpecsType' doesn't have a default value; nested exception is java.sql.SQLException: Field 'SpecsType' doesn't have a default value] with root cause
java.sql.SQLException: Field 'SpecsType' doesn't have a default value
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.18.jar:8.0.18]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.18.jar:8.0.18]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.18.jar:8.0.18]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953) ~[mysql-connector-java-8.0.18.jar:8.0.18]
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370) ~[mysql-connector-java-8.0.18.jar:8.0.18]
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44) ~[HikariCP-3.4.1.jar:na]
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java) ~[HikariCP-3.4.1.jar:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_231]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_231]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_231]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_231]
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59) ~[mybatis-3.5.3.jar:3.5.3]
	at com.sun.proxy.$Proxy145.execute(Unknown Source) ~[na:na]
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184) ~[mybatis-3.5.3.jar:3.5.3]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_231]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_231]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_231]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_231]
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426) ~[mybatis-spring-2.0.3.jar:2.0.3]
	at com.sun.proxy.$Proxy93.insert(Unknown Source) ~[na:na]
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:271) ~[mybatis-spring-2.0.3.jar:2.0.3]
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:93) ~[mybatis-3.5.3.jar:3.5.3]
	at com.sun.proxy.$Proxy97.insert(Unknown Source) ~[na:na]
	at com.huijian.rac.service.OrderDetailService.insert(OrderDetailService.java:38) ~[classes/:na]
	at com.huijian.rac.controller.OrderController.insert(OrderController.java:89) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_231]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_231]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_231]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_231]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_231]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_231]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_231]
2020/06/24-11:04:52 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-11:04:54 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-11:09:52 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-11:09:54 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-11:14:52 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-11:14:54 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-11:19:52 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-11:19:54 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-11:21:06 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==>  Preparing: select count(*) from sj_order where YEAR(OrderDate)=YEAR(NOW()); 
2020/06/24-11:21:06 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==>  Preparing: select * from pub_depart where HOSPITALID=? 
2020/06/24-11:21:06 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==> Parameters: 
2020/06/24-11:21:06 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==> Parameters: 901600(String)
2020/06/24-11:21:06 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- <==      Total: 1
2020/06/24-11:21:06 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- <==      Total: 22
2020/06/24-11:21:28 [http-nio-8083-exec-6] INFO  com.zaxxer.hikari.HikariDataSource- HikariPool-1 - Starting...
2020/06/24-11:21:29 [http-nio-8083-exec-6] INFO  com.zaxxer.hikari.HikariDataSource- HikariPool-1 - Start completed.
2020/06/24-11:21:29 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.OutboundRecordMapper.getOutboundRecordByPage- ==>  Preparing: SELECT * from sj_leavestocklist where LeaveStockNo like concat('%',?,'%') and LeaveStock >= ? and LeaveStock < ? order by LeaveStockNo desc limit ?, ? 
2020/06/24-11:21:29 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.OutboundRecordMapper.getOutboundRecordByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-24 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/24-11:21:29 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.OutboundRecordMapper.getOutboundRecordByPage- <==      Total: 1
2020/06/24-11:21:29 [http-nio-8083-exec-6] INFO  com.netflix.config.ChainedDynamicProperty- Flipping property: rac-order-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020/06/24-11:21:29 [http-nio-8083-exec-6] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer- Shutdown hook installed for: NFLoadBalancer-PingTimer-rac-order-service
2020/06/24-11:21:29 [http-nio-8083-exec-6] INFO  com.netflix.loadbalancer.BaseLoadBalancer- Client: rac-order-service instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=rac-order-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020/06/24-11:21:29 [http-nio-8083-exec-6] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer- Using serverListUpdater PollingServerListUpdater
2020/06/24-11:21:29 [http-nio-8083-exec-6] INFO  com.netflix.config.ChainedDynamicProperty- Flipping property: rac-order-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020/06/24-11:21:29 [http-nio-8083-exec-6] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer- DynamicServerListLoadBalancer for client rac-order-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=rac-order-service,current list of Servers=[MSI.mshome.net:8084],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:MSI.mshome.net:8084;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 GMT+08:00 1970;	First connection made: Thu Jan 01 08:00:00 GMT+08:00 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@3a008210
2020/06/24-11:21:29 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==>  Preparing: select OrderState from sj_order where OrderNo = ? 
2020/06/24-11:21:29 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==> Parameters: 9016002000027(String)
2020/06/24-11:21:29 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- <==      Total: 1
2020/06/24-11:21:30 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty- Flipping property: rac-order-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020/06/24-11:21:31 [http-nio-8083-exec-7] DEBUG com.huijian.rac.mapper.WarehouseRecordMapper.inquiryOneYear- ==>  Preparing: select count(*) from sj_warehouserecord where YEAR(WarehouseDate)=YEAR(NOW()); 
2020/06/24-11:21:31 [http-nio-8083-exec-7] DEBUG com.huijian.rac.mapper.WarehouseRecordMapper.inquiryOneYear- ==> Parameters: 
2020/06/24-11:21:31 [http-nio-8083-exec-7] DEBUG com.huijian.rac.mapper.WarehouseRecordMapper.inquiryOneYear- <==      Total: 1
2020/06/24-11:21:55 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByIDAndName- ==>  Preparing: select sg.*, su.UnitName from sj_goodsdictionary sg INNER join sj_unit su on sg.GoodsName=? and sg.GoodsID=? and sg.UnitID = su.UnitID 
2020/06/24-11:21:55 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByIDAndName- ==> Parameters: iphone12(String), 1(Integer)
2020/06/24-11:21:55 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByIDAndName- <==      Total: 1
2020/06/24-11:21:55 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/24-11:21:55 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/24-11:21:55 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/24-11:21:55 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehouse where GoodsID = ?), 0) 
2020/06/24-11:21:55 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==> Parameters: 1(Integer)
2020/06/24-11:21:55 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/24-11:22:05 [http-nio-8083-exec-10] DEBUG com.huijian.rac.mapper.WarehouseRecordMapper.inquiryOneYear- ==>  Preparing: select count(*) from sj_warehouserecord where YEAR(WarehouseDate)=YEAR(NOW()); 
2020/06/24-11:22:05 [http-nio-8083-exec-10] DEBUG com.huijian.rac.mapper.WarehouseRecordMapper.inquiryOneYear- ==> Parameters: 
2020/06/24-11:22:05 [http-nio-8083-exec-10] DEBUG com.huijian.rac.mapper.WarehouseRecordMapper.inquiryOneYear- <==      Total: 1
2020/06/24-11:22:10 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByIDAndName- ==>  Preparing: select sg.*, su.UnitName from sj_goodsdictionary sg INNER join sj_unit su on sg.GoodsName=? and sg.GoodsID=? and sg.UnitID = su.UnitID 
2020/06/24-11:22:10 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByIDAndName- ==> Parameters: iphone12(String), 1(Integer)
2020/06/24-11:22:10 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByIDAndName- <==      Total: 1
2020/06/24-11:22:10 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/24-11:22:10 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/24-11:22:10 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/24-11:22:10 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehouse where GoodsID = ?), 0) 
2020/06/24-11:22:10 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==> Parameters: 1(Integer)
2020/06/24-11:22:10 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/24-11:23:44 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==>  Preparing: select count(*) from sj_order where YEAR(OrderDate)=YEAR(NOW()); 
2020/06/24-11:23:44 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==> Parameters: 
2020/06/24-11:23:44 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- <==      Total: 1
2020/06/24-11:23:44 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==>  Preparing: select * from pub_depart where HOSPITALID=? 
2020/06/24-11:23:44 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==> Parameters: 901600(String)
2020/06/24-11:23:44 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- <==      Total: 22
2020/06/24-11:24:17 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- ==>  Preparing: select * from sj_order where HospitalID = ? order by OrderDate DESC limit 1; 
2020/06/24-11:24:17 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- ==> Parameters: 901600(String)
2020/06/24-11:24:17 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- <==      Total: 1
2020/06/24-11:24:17 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- ==>  Preparing: select * from sj_orderdetail where OrderNo = ? and GoodsID in ( ? ) 
2020/06/24-11:24:17 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- ==> Parameters: 9016002000030(String), 1(Integer)
2020/06/24-11:24:17 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- <==      Total: 0
2020/06/24-11:24:17 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- ==>  Preparing: select * from sj_secondleavestocklistdetail where HospitalID = ? and GoodsID in ( ? ) and now() >= DATE_SUB(CURDATE(), INTERVAL 12 month) 
2020/06/24-11:24:17 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- ==> Parameters: 901600(String), 1(Integer)
2020/06/24-11:24:17 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- <==      Total: 1
2020/06/24-11:24:17 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==>  Preparing: select * from sj_warehousesecond where GoodsID = ? and HospitalID = ? 
2020/06/24-11:24:17 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==> Parameters: 1(Integer), 901600(String)
2020/06/24-11:24:17 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- <==      Total: 1
2020/06/24-11:24:25 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderMapper.insert- ==>  Preparing: insert into sj_order ( OrderNo, DepartCode, CollarPersonID, AuditPersonID, Memo, SumPrice, Urgent, OrderState, OrderDate, HospitalID ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2020/06/24-11:24:25 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderMapper.insert- ==> Parameters: 9016002000031(String), 12(String), 胡凌云(String), (String), (String), 2.22(String), 0(Integer), 0(Integer), 2020-6-24 11:24:25(String), 901600(String)
2020/06/24-11:24:25 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderMapper.insert- <==    Updates: 1
2020/06/24-11:24:25 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderDetailMapper.insert- ==>  Preparing: insert into sj_orderdetail ( OrderNo, GoodsID, GoodsName, Brand, UnitPrice, Memo, OrderNum, ReceiveNum, SendNum, RecommendedOrderQuantity ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2020/06/24-11:24:25 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderDetailMapper.insert- ==> Parameters: 9016002000031(String), 1(Integer), iphone12(String), apple(String), 1.11(BigDecimal), (String), 2(Integer), 0(Integer), 0(Integer), 1(Integer)
2020/06/24-11:24:25 [http-nio-8084-exec-4] ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]- Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLException: Field 'Specification' doesn't have a default value
### The error may exist in file [C:\Users\13955\Desktop\ReagentAndConsumables\springcloud\rac-order-service\target\classes\mapper\OrderDetailMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: insert into sj_orderdetail          ( OrderNo,                                           GoodsID,                                           GoodsName,                                           Brand,                                           UnitPrice,                                           Memo,                                           OrderNum,                                           ReceiveNum,                                           SendNum,                                           RecommendedOrderQuantity )           values ( ?,                                           ?,                                           ?,                                           ?,                                           ?,                                           ?,                                           ?,                                           ?,                                           ?,                                           ? )
### Cause: java.sql.SQLException: Field 'Specification' doesn't have a default value
; Field 'Specification' doesn't have a default value; nested exception is java.sql.SQLException: Field 'Specification' doesn't have a default value] with root cause
java.sql.SQLException: Field 'Specification' doesn't have a default value
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.18.jar:8.0.18]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.18.jar:8.0.18]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.18.jar:8.0.18]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953) ~[mysql-connector-java-8.0.18.jar:8.0.18]
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370) ~[mysql-connector-java-8.0.18.jar:8.0.18]
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44) ~[HikariCP-3.4.1.jar:na]
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java) ~[HikariCP-3.4.1.jar:na]
	at sun.reflect.GeneratedMethodAccessor121.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_231]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_231]
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59) ~[mybatis-3.5.3.jar:3.5.3]
	at com.sun.proxy.$Proxy145.execute(Unknown Source) ~[na:na]
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184) ~[mybatis-3.5.3.jar:3.5.3]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_231]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_231]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_231]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_231]
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426) ~[mybatis-spring-2.0.3.jar:2.0.3]
	at com.sun.proxy.$Proxy93.insert(Unknown Source) ~[na:na]
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:271) ~[mybatis-spring-2.0.3.jar:2.0.3]
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:93) ~[mybatis-3.5.3.jar:3.5.3]
	at com.sun.proxy.$Proxy97.insert(Unknown Source) ~[na:na]
	at com.huijian.rac.service.OrderDetailService.insert(OrderDetailService.java:38) ~[classes/:na]
	at com.huijian.rac.controller.OrderController.insert(OrderController.java:89) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_231]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_231]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_231]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_231]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_231]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_231]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_231]
2020/06/24-11:24:52 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-11:24:57 [main] INFO  com.huijian.rac.RacOrderServiceApplication- No active profile set, falling back to default profiles: default
2020/06/24-11:24:57 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Multiple Spring Data modules found, entering strict repository configuration mode!
2020/06/24-11:24:57 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020/06/24-11:24:57 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Finished Spring Data repository scanning in 13ms. Found 0 Redis repository interfaces.
2020/06/24-11:24:58 [main] INFO  org.springframework.cloud.context.scope.GenericScope- BeanFactory id=f9e752be-742c-3d90-a32c-086a87b39fc6
2020/06/24-11:24:58 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/24-11:24:58 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/24-11:24:58 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat initialized with port(s): 8084 (http)
2020/06/24-11:24:58 [main] INFO  org.apache.catalina.core.StandardService- Starting service [Tomcat]
2020/06/24-11:24:58 [main] INFO  org.apache.catalina.core.StandardEngine- Starting Servlet engine: [Apache Tomcat/9.0.29]
2020/06/24-11:24:58 [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]- Initializing Spring embedded WebApplicationContext
2020/06/24-11:24:58 [main] INFO  org.springframework.web.context.ContextLoader- Root WebApplicationContext: initialization completed in 1151 ms
2020/06/24-11:24:59 [main] WARN  com.netflix.config.sources.URLConfigurationSource- No URLs will be polled as dynamic configuration sources.
2020/06/24-11:24:59 [main] INFO  com.netflix.config.sources.URLConfigurationSource- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020/06/24-11:24:59 [main] WARN  com.netflix.config.sources.URLConfigurationSource- No URLs will be polled as dynamic configuration sources.
2020/06/24-11:24:59 [main] INFO  com.netflix.config.sources.URLConfigurationSource- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020/06/24-11:24:59 [main] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor- Initializing ExecutorService 'applicationTaskExecutor'
2020/06/24-11:25:00 [main] WARN  org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger- You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020/06/24-11:25:00 [main] WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger- Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020/06/24-11:25:00 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory- Setting initial instance status as: STARTING
2020/06/24-11:25:00 [main] INFO  com.netflix.discovery.DiscoveryClient- Initializing Eureka in region us-east-1
2020/06/24-11:25:01 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using JSON encoding codec LegacyJacksonJson
2020/06/24-11:25:01 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using JSON decoding codec LegacyJacksonJson
2020/06/24-11:25:01 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using XML encoding codec XStreamXml
2020/06/24-11:25:01 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using XML decoding codec XStreamXml
2020/06/24-11:25:01 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-11:25:01 [main] INFO  com.netflix.discovery.DiscoveryClient- Disable delta property : false
2020/06/24-11:25:01 [main] INFO  com.netflix.discovery.DiscoveryClient- Single vip registry refresh property : null
2020/06/24-11:25:01 [main] INFO  com.netflix.discovery.DiscoveryClient- Force full registry fetch : false
2020/06/24-11:25:01 [main] INFO  com.netflix.discovery.DiscoveryClient- Application is null : false
2020/06/24-11:25:01 [main] INFO  com.netflix.discovery.DiscoveryClient- Registered Applications size is zero : true
2020/06/24-11:25:01 [main] INFO  com.netflix.discovery.DiscoveryClient- Application version is -1: true
2020/06/24-11:25:01 [main] INFO  com.netflix.discovery.DiscoveryClient- Getting all instance registry info from the eureka server
2020/06/24-11:25:02 [main] INFO  com.netflix.discovery.DiscoveryClient- The response status is 200
2020/06/24-11:25:02 [main] INFO  com.netflix.discovery.DiscoveryClient- Starting heartbeat executor: renew interval is: 30
2020/06/24-11:25:02 [main] INFO  com.netflix.discovery.InstanceInfoReplicator- InstanceInfoReplicator onDemand update allowed rate per min is 4
2020/06/24-11:25:02 [main] INFO  com.netflix.discovery.DiscoveryClient- Discovery Client initialized at timestamp 1592969102028 with initial instances count: 2
2020/06/24-11:25:02 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry- Registering application RAC-ORDER-SERVICE with eureka with status UP
2020/06/24-11:25:02 [main] INFO  com.netflix.discovery.DiscoveryClient- Saw local status change event StatusChangeEvent [timestamp=1592969102031, current=UP, previous=STARTING]
2020/06/24-11:25:02 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-ORDER-SERVICE/MSI.mshome.net:rac-order-service:8084: registering service...
2020/06/24-11:25:02 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Attempting to connect to: [192.168.161.129:5672]
2020/06/24-11:25:02 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Created new connection: rabbitConnectionFactory#a92be4f:0/SimpleConnection@a826ff8 [delegate=amqp://admin@192.168.161.129:5672/, localPort= 53871]
2020/06/24-11:25:02 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-ORDER-SERVICE/MSI.mshome.net:rac-order-service:8084 - registration status: 204
2020/06/24-11:25:02 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat started on port(s): 8084 (http) with context path ''
2020/06/24-11:25:02 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration- Updating port to 8084
2020/06/24-11:25:02 [main] INFO  com.huijian.rac.RacOrderServiceApplication- Started RacOrderServiceApplication in 6.401 seconds (JVM running for 7.125)
2020/06/24-11:25:03 [main] INFO  com.huijian.rac.RacStockServiceApplication- No active profile set, falling back to default profiles: default
2020/06/24-11:25:04 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Multiple Spring Data modules found, entering strict repository configuration mode!
2020/06/24-11:25:04 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Bootstrapping Spring Data repositories in DEFAULT mode.
2020/06/24-11:25:04 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Finished Spring Data repository scanning in 21ms. Found 0 repository interfaces.
2020/06/24-11:25:04 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'deliveryUnitMapper' and 'com.huijian.rac.mapper.DeliveryUnitMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-11:25:04 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'departMapper' and 'com.huijian.rac.mapper.DepartMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-11:25:04 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'discardDetailMapper' and 'com.huijian.rac.mapper.DiscardDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-11:25:04 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'discardMapper' and 'com.huijian.rac.mapper.DiscardMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-11:25:04 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsDictionaryMapper' and 'com.huijian.rac.mapper.GoodsDictionaryMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-11:25:04 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsRecordMapper' and 'com.huijian.rac.mapper.GoodsRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-11:25:04 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsSupplierMapper' and 'com.huijian.rac.mapper.GoodsSupplierMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-11:25:04 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'leaveStockListDetailMapper' and 'com.huijian.rac.mapper.LeaveStockListDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-11:25:04 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'materialMapper' and 'com.huijian.rac.mapper.MaterialMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-11:25:04 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'outboundRecordMapper' and 'com.huijian.rac.mapper.OutboundRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-11:25:04 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'outboundSecondRecordMapper' and 'com.huijian.rac.mapper.OutboundSecondRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-11:25:04 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'reagentMapper' and 'com.huijian.rac.mapper.ReagentMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-11:25:04 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'returnGoodsDetailMapper' and 'com.huijian.rac.mapper.ReturnGoodsDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-11:25:04 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'returnGoodsMapper' and 'com.huijian.rac.mapper.ReturnGoodsMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-11:25:04 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'secondGoodsRecordMapper' and 'com.huijian.rac.mapper.SecondGoodsRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-11:25:04 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'secondLeaveStockListDetailMapper' and 'com.huijian.rac.mapper.SecondLeaveStockListDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-11:25:04 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'unitMapper' and 'com.huijian.rac.mapper.UnitMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-11:25:04 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseMapper' and 'com.huijian.rac.mapper.WarehouseMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-11:25:04 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseRecordMapper' and 'com.huijian.rac.mapper.WarehouseRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-11:25:04 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseSecondMapper' and 'com.huijian.rac.mapper.WarehouseSecondMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-11:25:04 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseSecondRecordMapper' and 'com.huijian.rac.mapper.WarehouseSecondRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-11:25:04 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'departsMapper' and 'com.huijian.rac.mapper.DepartsMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-11:25:04 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsPackageDetailMapper' and 'com.huijian.rac.mapper.GoodsPackageDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-11:25:04 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsPackageMapper' and 'com.huijian.rac.mapper.GoodsPackageMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-11:25:04 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'hospitalMapper' and 'com.huijian.rac.mapper.HospitalMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-11:25:04 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'leaveStockListSecondMapper' and 'com.huijian.rac.mapper.LeaveStockListSecondMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-11:25:04 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderDetailMapper' and 'com.huijian.rac.mapper.OrderDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-11:25:04 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderMapper' and 'com.huijian.rac.mapper.OrderMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-11:25:04 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderOperateMapper' and 'com.huijian.rac.mapper.OrderOperateMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-11:25:04 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderReviewMapper' and 'com.huijian.rac.mapper.OrderReviewMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-11:25:04 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- No MyBatis mapper was found in '[com.huijian.rac.mapper]' package. Please check your configuration.
2020/06/24-11:25:04 [main] INFO  org.springframework.cloud.context.scope.GenericScope- BeanFactory id=67a76e45-faee-37d4-bfd4-e136a0fefe86
2020/06/24-11:25:04 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/24-11:25:04 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'redisConfig' of type [com.huijian.rac.config.RedisConfig$$EnhancerBySpringCGLIB$$21194923] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/24-11:25:04 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/24-11:25:05 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat initialized with port(s): 8083 (http)
2020/06/24-11:25:05 [main] INFO  org.apache.catalina.core.StandardService- Starting service [Tomcat]
2020/06/24-11:25:05 [main] INFO  org.apache.catalina.core.StandardEngine- Starting Servlet engine: [Apache Tomcat/9.0.27]
2020/06/24-11:25:05 [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]- Initializing Spring embedded WebApplicationContext
2020/06/24-11:25:05 [main] INFO  org.springframework.web.context.ContextLoader- Root WebApplicationContext: initialization completed in 1357 ms
2020/06/24-11:25:05 [main] WARN  com.netflix.config.sources.URLConfigurationSource- No URLs will be polled as dynamic configuration sources.
2020/06/24-11:25:05 [main] INFO  com.netflix.config.sources.URLConfigurationSource- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020/06/24-11:25:05 [main] WARN  com.netflix.config.sources.URLConfigurationSource- No URLs will be polled as dynamic configuration sources.
2020/06/24-11:25:05 [main] INFO  com.netflix.config.sources.URLConfigurationSource- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020/06/24-11:25:06 [main] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor- Initializing ExecutorService 'applicationTaskExecutor'
2020/06/24-11:25:07 [main] WARN  org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger- You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020/06/24-11:25:07 [main] WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger- Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020/06/24-11:25:07 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory- Setting initial instance status as: STARTING
2020/06/24-11:25:07 [main] INFO  com.netflix.discovery.DiscoveryClient- Initializing Eureka in region us-east-1
2020/06/24-11:25:07 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using JSON encoding codec LegacyJacksonJson
2020/06/24-11:25:07 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using JSON decoding codec LegacyJacksonJson
2020/06/24-11:25:07 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using XML encoding codec XStreamXml
2020/06/24-11:25:07 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using XML decoding codec XStreamXml
2020/06/24-11:25:07 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-11:25:07 [main] INFO  com.netflix.discovery.DiscoveryClient- Disable delta property : false
2020/06/24-11:25:07 [main] INFO  com.netflix.discovery.DiscoveryClient- Single vip registry refresh property : null
2020/06/24-11:25:07 [main] INFO  com.netflix.discovery.DiscoveryClient- Force full registry fetch : false
2020/06/24-11:25:07 [main] INFO  com.netflix.discovery.DiscoveryClient- Application is null : false
2020/06/24-11:25:07 [main] INFO  com.netflix.discovery.DiscoveryClient- Registered Applications size is zero : true
2020/06/24-11:25:07 [main] INFO  com.netflix.discovery.DiscoveryClient- Application version is -1: true
2020/06/24-11:25:07 [main] INFO  com.netflix.discovery.DiscoveryClient- Getting all instance registry info from the eureka server
2020/06/24-11:25:08 [main] INFO  com.netflix.discovery.DiscoveryClient- The response status is 200
2020/06/24-11:25:08 [main] INFO  com.netflix.discovery.DiscoveryClient- Starting heartbeat executor: renew interval is: 30
2020/06/24-11:25:08 [main] INFO  com.netflix.discovery.InstanceInfoReplicator- InstanceInfoReplicator onDemand update allowed rate per min is 4
2020/06/24-11:25:08 [main] INFO  com.netflix.discovery.DiscoveryClient- Discovery Client initialized at timestamp 1592969108005 with initial instances count: 2
2020/06/24-11:25:08 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry- Registering application RAC-STOCK-SERVICE with eureka with status UP
2020/06/24-11:25:08 [main] INFO  com.netflix.discovery.DiscoveryClient- Saw local status change event StatusChangeEvent [timestamp=1592969108008, current=UP, previous=STARTING]
2020/06/24-11:25:08 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-STOCK-SERVICE/MSI.mshome.net:rac-stock-service:8083: registering service...
2020/06/24-11:25:08 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Attempting to connect to: [192.168.161.129:5672]
2020/06/24-11:25:08 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Created new connection: rabbitConnectionFactory#7bf01cb:0/SimpleConnection@6233c6c2 [delegate=amqp://admin@192.168.161.129:5672/, localPort= 53892]
2020/06/24-11:25:08 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-STOCK-SERVICE/MSI.mshome.net:rac-stock-service:8083 - registration status: 204
2020/06/24-11:25:08 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat started on port(s): 8083 (http) with context path ''
2020/06/24-11:25:08 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration- Updating port to 8083
2020/06/24-11:25:08 [main] INFO  com.huijian.rac.RacStockServiceApplication- Started RacStockServiceApplication in 6.006 seconds (JVM running for 6.845)
2020/06/24-11:26:14 [http-nio-8084-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]- Initializing Spring DispatcherServlet 'dispatcherServlet'
2020/06/24-11:26:14 [http-nio-8084-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet- Initializing Servlet 'dispatcherServlet'
2020/06/24-11:26:14 [http-nio-8084-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet- Completed initialization in 7 ms
2020/06/24-11:26:15 [http-nio-8084-exec-3] INFO  com.zaxxer.hikari.HikariDataSource- HikariPool-1 - Starting...
2020/06/24-11:26:15 [http-nio-8084-exec-3] INFO  com.zaxxer.hikari.HikariDataSource- HikariPool-1 - Start completed.
2020/06/24-11:26:15 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==>  Preparing: select * from pub_depart where HOSPITALID=? 
2020/06/24-11:26:15 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==> Parameters: 901600(String)
2020/06/24-11:26:15 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- <==      Total: 22
2020/06/24-11:26:15 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==>  Preparing: SELECT * from sj_order where OrderNo like concat('%',?,'%') and OrderDate >= ? and OrderDate < ? and OrderState != 0 order by OrderDate desc limit ?, ? 
2020/06/24-11:26:15 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-24 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/24-11:26:15 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- <==      Total: 0
2020/06/24-11:26:17 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==>  Preparing: select count(*) from sj_order where YEAR(OrderDate)=YEAR(NOW()); 
2020/06/24-11:26:17 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==> Parameters: 
2020/06/24-11:26:17 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- <==      Total: 1
2020/06/24-11:26:18 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==>  Preparing: select * from pub_depart where HOSPITALID=? 
2020/06/24-11:26:18 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==> Parameters: 901600(String)
2020/06/24-11:26:18 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- <==      Total: 22
2020/06/24-11:26:18 [http-nio-8083-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]- Initializing Spring DispatcherServlet 'dispatcherServlet'
2020/06/24-11:26:18 [http-nio-8083-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet- Initializing Servlet 'dispatcherServlet'
2020/06/24-11:26:18 [http-nio-8083-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet- Completed initialization in 4 ms
2020/06/24-11:26:26 [http-nio-8083-exec-2] INFO  io.lettuce.core.EpollProvider- Starting without optional epoll library
2020/06/24-11:26:26 [http-nio-8083-exec-2] INFO  io.lettuce.core.KqueueProvider- Starting without optional kqueue library
2020/06/24-11:26:28 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- ==>  Preparing: select * from sj_order where HospitalID = ? order by OrderDate DESC limit 1; 
2020/06/24-11:26:28 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- ==> Parameters: 901600(String)
2020/06/24-11:26:28 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- <==      Total: 1
2020/06/24-11:26:28 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- ==>  Preparing: select * from sj_orderdetail where OrderNo = ? and GoodsID in ( ? ) 
2020/06/24-11:26:28 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- ==> Parameters: 9016002000031(String), 1(Integer)
2020/06/24-11:26:28 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- <==      Total: 0
2020/06/24-11:26:29 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- ==>  Preparing: select * from sj_secondleavestocklistdetail where HospitalID = ? and GoodsID in ( ? ) and now() >= DATE_SUB(CURDATE(), INTERVAL 12 month) 
2020/06/24-11:26:29 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- ==> Parameters: 901600(String), 1(Integer)
2020/06/24-11:26:29 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- <==      Total: 1
2020/06/24-11:26:29 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==>  Preparing: select * from sj_warehousesecond where GoodsID = ? and HospitalID = ? 
2020/06/24-11:26:29 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==> Parameters: 1(Integer), 901600(String)
2020/06/24-11:26:29 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- <==      Total: 1
2020/06/24-11:26:31 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderMapper.insert- ==>  Preparing: insert into sj_order ( OrderNo, DepartCode, CollarPersonID, AuditPersonID, Memo, SumPrice, Urgent, OrderState, OrderDate, HospitalID ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2020/06/24-11:26:31 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderMapper.insert- ==> Parameters: 9016002000032(String), 12(String), 胡凌云(String), (String), (String), 1.11(String), 0(Integer), 0(Integer), 2020-6-24 11:26:31(String), 901600(String)
2020/06/24-11:26:31 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderMapper.insert- <==    Updates: 1
2020/06/24-11:26:31 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderDetailMapper.insert- ==>  Preparing: insert into sj_orderdetail ( OrderNo, GoodsID, GoodsName, Brand, UnitPrice, Memo, OrderNum, ReceiveNum, SendNum, RecommendedOrderQuantity, Specification ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2020/06/24-11:26:31 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderDetailMapper.insert- ==> Parameters: 9016002000032(String), 1(Integer), iphone12(String), apple(String), 1.11(BigDecimal), (String), 1(Integer), 0(Integer), 0(Integer), 1(Integer), 1(String)
2020/06/24-11:26:31 [http-nio-8084-exec-9] ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]- Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLException: Field 'UnitID' doesn't have a default value
### The error may exist in file [C:\Users\13955\Desktop\ReagentAndConsumables\springcloud\rac-order-service\target\classes\mapper\OrderDetailMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: insert into sj_orderdetail          ( OrderNo,                                           GoodsID,                                           GoodsName,                                           Brand,                                           UnitPrice,                                           Memo,                                           OrderNum,                                           ReceiveNum,                                           SendNum,                                           RecommendedOrderQuantity,                                                        Specification )           values ( ?,                                           ?,                                           ?,                                           ?,                                           ?,                                           ?,                                           ?,                                           ?,                                           ?,                                           ?,                                                        ? )
### Cause: java.sql.SQLException: Field 'UnitID' doesn't have a default value
; Field 'UnitID' doesn't have a default value; nested exception is java.sql.SQLException: Field 'UnitID' doesn't have a default value] with root cause
java.sql.SQLException: Field 'UnitID' doesn't have a default value
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.18.jar:8.0.18]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.18.jar:8.0.18]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.18.jar:8.0.18]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953) ~[mysql-connector-java-8.0.18.jar:8.0.18]
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370) ~[mysql-connector-java-8.0.18.jar:8.0.18]
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44) ~[HikariCP-3.4.1.jar:na]
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java) ~[HikariCP-3.4.1.jar:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_231]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_231]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_231]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_231]
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59) ~[mybatis-3.5.3.jar:3.5.3]
	at com.sun.proxy.$Proxy147.execute(Unknown Source) ~[na:na]
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184) ~[mybatis-3.5.3.jar:3.5.3]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_231]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_231]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_231]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_231]
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426) ~[mybatis-spring-2.0.3.jar:2.0.3]
	at com.sun.proxy.$Proxy93.insert(Unknown Source) ~[na:na]
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:271) ~[mybatis-spring-2.0.3.jar:2.0.3]
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:93) ~[mybatis-3.5.3.jar:3.5.3]
	at com.sun.proxy.$Proxy97.insert(Unknown Source) ~[na:na]
	at com.huijian.rac.service.OrderDetailService.insert(OrderDetailService.java:38) ~[classes/:na]
	at com.huijian.rac.controller.OrderController.insert(OrderController.java:89) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_231]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_231]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_231]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_231]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_231]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_231]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_231]
2020/06/24-11:29:35 [main] INFO  com.huijian.rac.RacOrderServiceApplication- No active profile set, falling back to default profiles: default
2020/06/24-11:29:35 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Multiple Spring Data modules found, entering strict repository configuration mode!
2020/06/24-11:29:35 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020/06/24-11:29:35 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Finished Spring Data repository scanning in 12ms. Found 0 Redis repository interfaces.
2020/06/24-11:29:35 [main] INFO  org.springframework.cloud.context.scope.GenericScope- BeanFactory id=f9e752be-742c-3d90-a32c-086a87b39fc6
2020/06/24-11:29:36 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/24-11:29:36 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/24-11:29:36 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat initialized with port(s): 8084 (http)
2020/06/24-11:29:36 [main] INFO  org.apache.catalina.core.StandardService- Starting service [Tomcat]
2020/06/24-11:29:36 [main] INFO  org.apache.catalina.core.StandardEngine- Starting Servlet engine: [Apache Tomcat/9.0.29]
2020/06/24-11:29:36 [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]- Initializing Spring embedded WebApplicationContext
2020/06/24-11:29:36 [main] INFO  org.springframework.web.context.ContextLoader- Root WebApplicationContext: initialization completed in 941 ms
2020/06/24-11:29:36 [main] WARN  com.netflix.config.sources.URLConfigurationSource- No URLs will be polled as dynamic configuration sources.
2020/06/24-11:29:36 [main] INFO  com.netflix.config.sources.URLConfigurationSource- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020/06/24-11:29:36 [main] WARN  com.netflix.config.sources.URLConfigurationSource- No URLs will be polled as dynamic configuration sources.
2020/06/24-11:29:36 [main] INFO  com.netflix.config.sources.URLConfigurationSource- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020/06/24-11:29:36 [main] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor- Initializing ExecutorService 'applicationTaskExecutor'
2020/06/24-11:29:37 [main] WARN  org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger- You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020/06/24-11:29:37 [main] WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger- Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020/06/24-11:29:38 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory- Setting initial instance status as: STARTING
2020/06/24-11:29:38 [main] INFO  com.netflix.discovery.DiscoveryClient- Initializing Eureka in region us-east-1
2020/06/24-11:29:38 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using JSON encoding codec LegacyJacksonJson
2020/06/24-11:29:38 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using JSON decoding codec LegacyJacksonJson
2020/06/24-11:29:38 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using XML encoding codec XStreamXml
2020/06/24-11:29:38 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using XML decoding codec XStreamXml
2020/06/24-11:29:38 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-11:29:38 [main] INFO  com.netflix.discovery.DiscoveryClient- Disable delta property : false
2020/06/24-11:29:38 [main] INFO  com.netflix.discovery.DiscoveryClient- Single vip registry refresh property : null
2020/06/24-11:29:38 [main] INFO  com.netflix.discovery.DiscoveryClient- Force full registry fetch : false
2020/06/24-11:29:38 [main] INFO  com.netflix.discovery.DiscoveryClient- Application is null : false
2020/06/24-11:29:38 [main] INFO  com.netflix.discovery.DiscoveryClient- Registered Applications size is zero : true
2020/06/24-11:29:38 [main] INFO  com.netflix.discovery.DiscoveryClient- Application version is -1: true
2020/06/24-11:29:38 [main] INFO  com.netflix.discovery.DiscoveryClient- Getting all instance registry info from the eureka server
2020/06/24-11:29:38 [main] INFO  com.netflix.discovery.DiscoveryClient- The response status is 200
2020/06/24-11:29:38 [main] INFO  com.netflix.discovery.DiscoveryClient- Starting heartbeat executor: renew interval is: 30
2020/06/24-11:29:38 [main] INFO  com.netflix.discovery.InstanceInfoReplicator- InstanceInfoReplicator onDemand update allowed rate per min is 4
2020/06/24-11:29:38 [main] INFO  com.netflix.discovery.DiscoveryClient- Discovery Client initialized at timestamp 1592969378869 with initial instances count: 2
2020/06/24-11:29:38 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry- Registering application RAC-ORDER-SERVICE with eureka with status UP
2020/06/24-11:29:38 [main] INFO  com.netflix.discovery.DiscoveryClient- Saw local status change event StatusChangeEvent [timestamp=1592969378871, current=UP, previous=STARTING]
2020/06/24-11:29:38 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-ORDER-SERVICE/MSI.mshome.net:rac-order-service:8084: registering service...
2020/06/24-11:29:38 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Attempting to connect to: [192.168.161.129:5672]
2020/06/24-11:29:38 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Created new connection: rabbitConnectionFactory#646c0a67:0/SimpleConnection@60a01cb [delegate=amqp://admin@192.168.161.129:5672/, localPort= 54254]
2020/06/24-11:29:38 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-ORDER-SERVICE/MSI.mshome.net:rac-order-service:8084 - registration status: 204
2020/06/24-11:29:38 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat started on port(s): 8084 (http) with context path ''
2020/06/24-11:29:38 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration- Updating port to 8084
2020/06/24-11:29:39 [main] INFO  com.huijian.rac.RacOrderServiceApplication- Started RacOrderServiceApplication in 4.929 seconds (JVM running for 5.608)
2020/06/24-11:30:07 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-11:30:56 [http-nio-8084-exec-2] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]- Initializing Spring DispatcherServlet 'dispatcherServlet'
2020/06/24-11:30:56 [http-nio-8084-exec-2] INFO  org.springframework.web.servlet.DispatcherServlet- Initializing Servlet 'dispatcherServlet'
2020/06/24-11:30:56 [http-nio-8084-exec-2] INFO  org.springframework.web.servlet.DispatcherServlet- Completed initialization in 5 ms
2020/06/24-11:30:57 [http-nio-8084-exec-2] INFO  com.zaxxer.hikari.HikariDataSource- HikariPool-1 - Starting...
2020/06/24-11:30:57 [http-nio-8084-exec-2] INFO  com.zaxxer.hikari.HikariDataSource- HikariPool-1 - Start completed.
2020/06/24-11:30:57 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==>  Preparing: select * from pub_depart where HOSPITALID=? 
2020/06/24-11:30:57 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==> Parameters: 901600(String)
2020/06/24-11:30:57 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- <==      Total: 22
2020/06/24-11:30:57 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==>  Preparing: select count(*) from sj_order where YEAR(OrderDate)=YEAR(NOW()); 
2020/06/24-11:30:57 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==> Parameters: 
2020/06/24-11:30:57 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- <==      Total: 1
2020/06/24-11:31:10 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- ==>  Preparing: select * from sj_order where HospitalID = ? order by OrderDate DESC limit 1; 
2020/06/24-11:31:10 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- ==> Parameters: 901600(String)
2020/06/24-11:31:10 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- <==      Total: 1
2020/06/24-11:31:10 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- ==>  Preparing: select * from sj_orderdetail where OrderNo = ? and GoodsID in ( ? ) 
2020/06/24-11:31:10 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- ==> Parameters: 9016002000032(String), 1(Integer)
2020/06/24-11:31:10 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- <==      Total: 0
2020/06/24-11:31:10 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- ==>  Preparing: select * from sj_secondleavestocklistdetail where HospitalID = ? and GoodsID in ( ? ) and now() >= DATE_SUB(CURDATE(), INTERVAL 12 month) 
2020/06/24-11:31:10 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- ==> Parameters: 901600(String), 1(Integer)
2020/06/24-11:31:10 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- <==      Total: 1
2020/06/24-11:31:11 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==>  Preparing: select * from sj_warehousesecond where GoodsID = ? and HospitalID = ? 
2020/06/24-11:31:11 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==> Parameters: 1(Integer), 901600(String)
2020/06/24-11:31:11 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- <==      Total: 1
2020/06/24-11:31:53 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderMapper.insert- ==>  Preparing: insert into sj_order ( OrderNo, DepartCode, CollarPersonID, AuditPersonID, Memo, SumPrice, Urgent, OrderState, OrderDate, HospitalID ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2020/06/24-11:31:53 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderMapper.insert- ==> Parameters: 9016002000033(String), 12(String), 胡凌云(String), (String), (String), 1.11(String), 0(Integer), 0(Integer), 2020-6-24 11:31:53(String), 901600(String)
2020/06/24-11:31:54 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderMapper.insert- <==    Updates: 1
2020/06/24-11:31:54 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderDetailMapper.insert- ==>  Preparing: insert into sj_orderdetail ( OrderNo, GoodsID, GoodsName, Brand, UnitPrice, Memo, OrderNum, ReceiveNum, SendNum, RecommendedOrderQuantity, Specification ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2020/06/24-11:31:54 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderDetailMapper.insert- ==> Parameters: 9016002000033(String), 1(Integer), iphone12(String), apple(String), 1.11(BigDecimal), (String), 1(Integer), 0(Integer), 0(Integer), 1(Integer), 1(String)
2020/06/24-11:31:54 [http-nio-8084-exec-6] ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]- Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLException: Field 'UnitID' doesn't have a default value
### The error may exist in file [C:\Users\13955\Desktop\ReagentAndConsumables\springcloud\rac-order-service\target\classes\mapper\OrderDetailMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: insert into sj_orderdetail          ( OrderNo,                                           GoodsID,                                           GoodsName,                                           Brand,                                           UnitPrice,                                           Memo,                                           OrderNum,                                           ReceiveNum,                                           SendNum,                                           RecommendedOrderQuantity,                                                        Specification )           values ( ?,                                           ?,                                           ?,                                           ?,                                           ?,                                           ?,                                           ?,                                           ?,                                           ?,                                           ?,                                                        ? )
### Cause: java.sql.SQLException: Field 'UnitID' doesn't have a default value
; Field 'UnitID' doesn't have a default value; nested exception is java.sql.SQLException: Field 'UnitID' doesn't have a default value] with root cause
java.sql.SQLException: Field 'UnitID' doesn't have a default value
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.18.jar:8.0.18]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.18.jar:8.0.18]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.18.jar:8.0.18]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953) ~[mysql-connector-java-8.0.18.jar:8.0.18]
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370) ~[mysql-connector-java-8.0.18.jar:8.0.18]
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44) ~[HikariCP-3.4.1.jar:na]
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java) ~[HikariCP-3.4.1.jar:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_231]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_231]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_231]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_231]
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59) ~[mybatis-3.5.3.jar:3.5.3]
	at com.sun.proxy.$Proxy145.execute(Unknown Source) ~[na:na]
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184) ~[mybatis-3.5.3.jar:3.5.3]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_231]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_231]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_231]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_231]
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426) ~[mybatis-spring-2.0.3.jar:2.0.3]
	at com.sun.proxy.$Proxy93.insert(Unknown Source) ~[na:na]
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:271) ~[mybatis-spring-2.0.3.jar:2.0.3]
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:93) ~[mybatis-3.5.3.jar:3.5.3]
	at com.sun.proxy.$Proxy97.insert(Unknown Source) ~[na:na]
	at com.huijian.rac.service.OrderDetailService.insert(OrderDetailService.java:38) ~[classes/:na]
	at com.huijian.rac.controller.OrderController.insert(OrderController.java:89) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_231]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_231]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_231]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_231]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_231]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_231]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_231]
2020/06/24-11:34:09 [http-nio-8083-exec-7] INFO  com.zaxxer.hikari.HikariDataSource- HikariPool-1 - Starting...
2020/06/24-11:34:10 [http-nio-8083-exec-7] INFO  com.zaxxer.hikari.HikariDataSource- HikariPool-1 - Start completed.
2020/06/24-11:34:10 [http-nio-8083-exec-7] DEBUG com.huijian.rac.mapper.WarehouseRecordMapper.inquiryOneYear- ==>  Preparing: select count(*) from sj_warehouserecord where YEAR(WarehouseDate)=YEAR(NOW()); 
2020/06/24-11:34:10 [http-nio-8083-exec-7] DEBUG com.huijian.rac.mapper.WarehouseRecordMapper.inquiryOneYear- ==> Parameters: 
2020/06/24-11:34:10 [http-nio-8083-exec-7] DEBUG com.huijian.rac.mapper.WarehouseRecordMapper.inquiryOneYear- <==      Total: 1
2020/06/24-11:34:12 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- ==>  Preparing: select sg.*, su.UnitName from sj_goodsdictionary sg INNER join sj_unit su on GoodsName like concat('%',?,'%') and sg.UnitID = su.UnitID 
2020/06/24-11:34:12 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- ==> Parameters: ip(String)
2020/06/24-11:34:12 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- <==      Total: 1
2020/06/24-11:34:12 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/24-11:34:12 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/24-11:34:12 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/24-11:34:12 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehouse where GoodsID = ?), 0) 
2020/06/24-11:34:12 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==> Parameters: 1(Integer)
2020/06/24-11:34:12 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/24-11:34:24 [http-nio-8083-exec-8] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- ==>  Preparing: select sg.*, su.UnitName from sj_goodsdictionary sg INNER join sj_unit su on GoodsName like concat('%',?,'%') and sg.UnitID = su.UnitID 
2020/06/24-11:34:24 [http-nio-8083-exec-8] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- ==> Parameters: iphone(String)
2020/06/24-11:34:24 [http-nio-8083-exec-8] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- <==      Total: 1
2020/06/24-11:34:24 [http-nio-8083-exec-8] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/24-11:34:24 [http-nio-8083-exec-8] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/24-11:34:24 [http-nio-8083-exec-8] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/24-11:34:24 [http-nio-8083-exec-8] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehouse where GoodsID = ?), 0) 
2020/06/24-11:34:24 [http-nio-8083-exec-8] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==> Parameters: 1(Integer)
2020/06/24-11:34:24 [http-nio-8083-exec-8] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/24-11:34:36 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- ==>  Preparing: select sg.*, su.UnitName from sj_goodsdictionary sg INNER join sj_unit su on GoodsName like concat('%',?,'%') and sg.UnitID = su.UnitID 
2020/06/24-11:34:36 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- ==> Parameters: 2(String)
2020/06/24-11:34:36 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- <==      Total: 4
2020/06/24-11:34:36 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/24-11:34:36 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/24-11:34:36 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/24-11:34:36 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehouse where GoodsID = ?), 0) 
2020/06/24-11:34:36 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==> Parameters: 1(Integer)
2020/06/24-11:34:36 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/24-11:34:36 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/24-11:34:36 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 2(Integer)
2020/06/24-11:34:36 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/24-11:34:36 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehouse where GoodsID = ?), 0) 
2020/06/24-11:34:36 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==> Parameters: 2(Integer)
2020/06/24-11:34:36 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/24-11:34:36 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/24-11:34:36 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 2(Integer)
2020/06/24-11:34:36 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/24-11:34:36 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehouse where GoodsID = ?), 0) 
2020/06/24-11:34:36 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==> Parameters: 12(Integer)
2020/06/24-11:34:36 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/24-11:34:36 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/24-11:34:36 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/24-11:34:36 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/24-11:34:36 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehouse where GoodsID = ?), 0) 
2020/06/24-11:34:36 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==> Parameters: 20(Integer)
2020/06/24-11:34:36 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/24-11:34:38 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-11:35:07 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-11:39:38 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-11:40:07 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-11:44:38 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-11:45:07 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-11:49:38 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-11:50:07 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-11:54:38 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-11:55:07 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-11:59:38 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-12:00:07 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-12:04:38 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-12:05:07 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-12:09:38 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-12:10:07 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-12:14:38 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-12:15:07 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-12:19:38 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-12:20:07 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-12:24:38 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-12:25:07 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-12:29:38 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-12:30:07 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-12:34:38 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-12:35:07 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-12:39:38 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-12:40:07 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-12:44:38 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-12:45:07 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-12:49:38 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-12:50:07 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-12:54:38 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-12:55:07 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-12:59:38 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-13:00:07 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-13:04:38 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-13:05:07 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-13:09:38 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-13:10:07 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-13:14:38 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-13:15:07 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-13:19:38 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-13:20:07 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-13:24:38 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-13:25:07 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-13:29:38 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-13:30:07 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-13:34:38 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-13:35:07 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-13:39:38 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-13:40:07 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-13:44:38 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-13:45:07 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-13:49:38 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-13:50:07 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-13:54:38 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-13:55:07 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-13:59:38 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-14:00:07 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-14:01:28 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==>  Preparing: select count(*) from sj_order where YEAR(OrderDate)=YEAR(NOW()); 
2020/06/24-14:01:28 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==>  Preparing: select * from pub_depart where HOSPITALID=? 
2020/06/24-14:01:28 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==> Parameters: 
2020/06/24-14:01:28 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==> Parameters: 901600(String)
2020/06/24-14:01:28 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- <==      Total: 1
2020/06/24-14:01:28 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- <==      Total: 22
2020/06/24-14:01:41 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.getAllGoods- ==>  Preparing: select sg.*, su.UnitName from sj_goodsdictionary sg INNER join sj_unit su on sg.UnitID = su.UnitID 
2020/06/24-14:01:41 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.getAllGoods- ==> Parameters: 
2020/06/24-14:01:41 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.getAllGoods- <==      Total: 20
2020/06/24-14:01:41 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/24-14:01:41 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/24-14:01:41 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/24-14:01:41 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/24-14:01:41 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 2(Integer)
2020/06/24-14:01:41 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/24-14:01:41 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/24-14:01:41 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/24-14:01:41 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/24-14:01:41 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/24-14:01:41 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/24-14:01:41 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/24-14:01:41 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/24-14:01:41 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 2(Integer)
2020/06/24-14:01:41 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/24-14:01:41 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/24-14:01:41 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/24-14:01:41 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/24-14:01:41 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/24-14:01:41 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/24-14:01:41 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/24-14:01:41 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/24-14:01:41 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 2(Integer)
2020/06/24-14:01:41 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/24-14:01:41 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/24-14:01:41 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/24-14:01:41 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/24-14:01:41 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/24-14:01:41 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/24-14:01:41 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/24-14:01:41 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/24-14:01:41 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/24-14:01:41 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/24-14:01:41 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/24-14:01:41 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 2(Integer)
2020/06/24-14:01:41 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/24-14:01:41 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/24-14:01:41 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/24-14:01:41 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/24-14:01:41 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/24-14:01:41 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/24-14:01:41 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/24-14:01:41 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/24-14:01:41 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 2(Integer)
2020/06/24-14:01:41 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/24-14:01:41 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/24-14:01:41 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/24-14:01:41 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/24-14:01:41 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/24-14:01:41 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/24-14:01:41 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/24-14:01:41 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/24-14:01:41 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 2(Integer)
2020/06/24-14:01:41 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/24-14:01:41 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/24-14:01:41 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/24-14:01:41 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/24-14:01:41 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/24-14:01:41 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/24-14:01:41 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/24-14:01:43 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- ==>  Preparing: select * from sj_order where HospitalID = ? order by OrderDate DESC limit 1; 
2020/06/24-14:01:43 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- ==> Parameters: 901600(String)
2020/06/24-14:01:43 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- <==      Total: 1
2020/06/24-14:01:43 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- ==>  Preparing: select * from sj_orderdetail where OrderNo = ? and GoodsID in ( ? ) 
2020/06/24-14:01:43 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- ==> Parameters: 9016002000033(String), 1(Integer)
2020/06/24-14:01:43 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- <==      Total: 0
2020/06/24-14:01:43 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- ==>  Preparing: select * from sj_secondleavestocklistdetail where HospitalID = ? and GoodsID in ( ? ) and now() >= DATE_SUB(CURDATE(), INTERVAL 12 month) 
2020/06/24-14:01:43 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- ==> Parameters: 901600(String), 1(Integer)
2020/06/24-14:01:43 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- <==      Total: 1
2020/06/24-14:01:44 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==>  Preparing: select * from sj_warehousesecond where GoodsID = ? and HospitalID = ? 
2020/06/24-14:01:44 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==> Parameters: 1(Integer), 901600(String)
2020/06/24-14:01:44 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- <==      Total: 1
2020/06/24-14:01:45 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderMapper.insert- ==>  Preparing: insert into sj_order ( OrderNo, DepartCode, CollarPersonID, AuditPersonID, Memo, SumPrice, Urgent, OrderState, OrderDate, HospitalID ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2020/06/24-14:01:45 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderMapper.insert- ==> Parameters: 9016002000034(String), 12(String), 胡凌云(String), (String), (String), 1.11(String), 0(Integer), 0(Integer), 2020-6-24 14:1:45(String), 901600(String)
2020/06/24-14:01:45 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderMapper.insert- <==    Updates: 1
2020/06/24-14:01:45 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderDetailMapper.insert- ==>  Preparing: insert into sj_orderdetail ( OrderNo, GoodsID, GoodsName, Brand, UnitPrice, Memo, OrderNum, ReceiveNum, SendNum, RecommendedOrderQuantity, Specification ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2020/06/24-14:01:45 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderDetailMapper.insert- ==> Parameters: 9016002000034(String), 1(Integer), iphone12(String), apple(String), 1.11(BigDecimal), (String), 1(Integer), 0(Integer), 0(Integer), 1(Integer), 1(String)
2020/06/24-14:01:45 [http-nio-8084-exec-4] ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]- Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLException: Field 'UnitID' doesn't have a default value
### The error may exist in file [C:\Users\13955\Desktop\ReagentAndConsumables\springcloud\rac-order-service\target\classes\mapper\OrderDetailMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: insert into sj_orderdetail          ( OrderNo,                                           GoodsID,                                           GoodsName,                                           Brand,                                           UnitPrice,                                           Memo,                                           OrderNum,                                           ReceiveNum,                                           SendNum,                                           RecommendedOrderQuantity,                                                        Specification )           values ( ?,                                           ?,                                           ?,                                           ?,                                           ?,                                           ?,                                           ?,                                           ?,                                           ?,                                           ?,                                                        ? )
### Cause: java.sql.SQLException: Field 'UnitID' doesn't have a default value
; Field 'UnitID' doesn't have a default value; nested exception is java.sql.SQLException: Field 'UnitID' doesn't have a default value] with root cause
java.sql.SQLException: Field 'UnitID' doesn't have a default value
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.18.jar:8.0.18]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.18.jar:8.0.18]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.18.jar:8.0.18]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953) ~[mysql-connector-java-8.0.18.jar:8.0.18]
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370) ~[mysql-connector-java-8.0.18.jar:8.0.18]
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44) ~[HikariCP-3.4.1.jar:na]
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java) ~[HikariCP-3.4.1.jar:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_231]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_231]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_231]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_231]
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59) ~[mybatis-3.5.3.jar:3.5.3]
	at com.sun.proxy.$Proxy145.execute(Unknown Source) ~[na:na]
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184) ~[mybatis-3.5.3.jar:3.5.3]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_231]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_231]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_231]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_231]
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426) ~[mybatis-spring-2.0.3.jar:2.0.3]
	at com.sun.proxy.$Proxy93.insert(Unknown Source) ~[na:na]
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:271) ~[mybatis-spring-2.0.3.jar:2.0.3]
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:93) ~[mybatis-3.5.3.jar:3.5.3]
	at com.sun.proxy.$Proxy97.insert(Unknown Source) ~[na:na]
	at com.huijian.rac.service.OrderDetailService.insert(OrderDetailService.java:38) ~[classes/:na]
	at com.huijian.rac.controller.OrderController.insert(OrderController.java:89) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_231]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_231]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_231]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_231]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_231]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_231]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_231]
2020/06/24-14:04:38 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-14:05:07 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-14:09:38 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-14:10:07 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-14:14:38 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-14:14:51 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==>  Preparing: select * from pub_depart where HOSPITALID=? 
2020/06/24-14:14:51 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==> Parameters: 901600(String)
2020/06/24-14:14:51 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==>  Preparing: SELECT * from sj_order where OrderNo like concat('%',?,'%') and OrderDate >= ? and OrderDate < ? and OrderState != 0 order by OrderDate desc limit ?, ? 
2020/06/24-14:14:51 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-24 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/24-14:14:51 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- <==      Total: 0
2020/06/24-14:14:51 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- <==      Total: 22
2020/06/24-14:14:53 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==>  Preparing: select count(*) from sj_order where YEAR(OrderDate)=YEAR(NOW()); 
2020/06/24-14:14:53 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==> Parameters: 
2020/06/24-14:14:53 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- <==      Total: 1
2020/06/24-14:14:53 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==>  Preparing: select * from pub_depart where HOSPITALID=? 
2020/06/24-14:14:53 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==> Parameters: 901600(String)
2020/06/24-14:14:53 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- <==      Total: 22
2020/06/24-14:15:07 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-14:17:51 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseRecordMapper.inquiryOneYear- ==>  Preparing: select count(*) from sj_warehouserecord where YEAR(WarehouseDate)=YEAR(NOW()); 
2020/06/24-14:17:51 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseRecordMapper.inquiryOneYear- ==> Parameters: 
2020/06/24-14:17:51 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseRecordMapper.inquiryOneYear- <==      Total: 1
2020/06/24-14:18:04 [http-nio-8083-exec-10] DEBUG com.huijian.rac.mapper.WarehouseRecordMapper.inquiryOneYear- ==>  Preparing: select count(*) from sj_warehouserecord where YEAR(WarehouseDate)=YEAR(NOW()); 
2020/06/24-14:18:04 [http-nio-8083-exec-10] DEBUG com.huijian.rac.mapper.WarehouseRecordMapper.inquiryOneYear- ==> Parameters: 
2020/06/24-14:18:04 [http-nio-8083-exec-10] DEBUG com.huijian.rac.mapper.WarehouseRecordMapper.inquiryOneYear- <==      Total: 1
2020/06/24-14:18:09 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- ==>  Preparing: select sg.*, su.UnitName from sj_goodsdictionary sg INNER join sj_unit su on GoodsName like concat('%',?,'%') and sg.UnitID = su.UnitID 
2020/06/24-14:18:09 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- ==> Parameters: iph(String)
2020/06/24-14:18:09 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- <==      Total: 1
2020/06/24-14:18:09 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/24-14:18:09 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/24-14:18:09 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/24-14:18:09 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehouse where GoodsID = ?), 0) 
2020/06/24-14:18:09 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==> Parameters: 1(Integer)
2020/06/24-14:18:09 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/24-14:19:38 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-14:19:51 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.WarehouseSecondRecordMapper.inquiryOneYear- ==>  Preparing: select count(*) from sj_warehousesecondrecord where YEAR(WAREHOUSEDATE)=YEAR(NOW()) and HOSPITALID = ?; 
2020/06/24-14:19:51 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.WarehouseSecondRecordMapper.inquiryOneYear- ==> Parameters: 901600(String)
2020/06/24-14:19:51 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.WarehouseSecondRecordMapper.inquiryOneYear- <==      Total: 1
2020/06/24-14:19:54 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- ==>  Preparing: select sg.*, su.UnitName from sj_goodsdictionary sg INNER join sj_unit su on GoodsName like concat('%',?,'%') and sg.UnitID = su.UnitID 
2020/06/24-14:19:54 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- ==> Parameters: iph(String)
2020/06/24-14:19:54 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- <==      Total: 1
2020/06/24-14:19:54 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/24-14:19:54 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/24-14:19:54 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/24-14:19:54 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/24-14:19:54 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 1(Integer), 901600(String)
2020/06/24-14:19:54 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/24-14:19:59 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.OutboundSecondRecordMapper.inquiryOneYear- ==>  Preparing: select count(*) from sj_leavestocklistsecond where YEAR(LeaveStockDate)=YEAR(NOW()); 
2020/06/24-14:19:59 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.OutboundSecondRecordMapper.inquiryOneYear- ==> Parameters: 
2020/06/24-14:19:59 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.OutboundSecondRecordMapper.inquiryOneYear- <==      Total: 1
2020/06/24-14:20:02 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.OutboundSecondRecordMapper.inquiryOneYear- ==>  Preparing: select count(*) from sj_leavestocklistsecond where YEAR(LeaveStockDate)=YEAR(NOW()); 
2020/06/24-14:20:02 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.OutboundSecondRecordMapper.inquiryOneYear- ==> Parameters: 
2020/06/24-14:20:02 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.OutboundSecondRecordMapper.inquiryOneYear- <==      Total: 1
2020/06/24-14:20:06 [http-nio-8083-exec-7] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- ==>  Preparing: select sg.*, su.UnitName from sj_goodsdictionary sg INNER join sj_unit su on GoodsName like concat('%',?,'%') and sg.UnitID = su.UnitID 
2020/06/24-14:20:06 [http-nio-8083-exec-7] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- ==> Parameters: iphone(String)
2020/06/24-14:20:06 [http-nio-8083-exec-7] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- <==      Total: 1
2020/06/24-14:20:06 [http-nio-8083-exec-7] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/24-14:20:06 [http-nio-8083-exec-7] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/24-14:20:06 [http-nio-8083-exec-7] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/24-14:20:06 [http-nio-8083-exec-7] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/24-14:20:06 [http-nio-8083-exec-7] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 1(Integer), 901600(String)
2020/06/24-14:20:06 [http-nio-8083-exec-7] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/24-14:20:07 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-14:20:11 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==>  Preparing: select count(*) from sj_order where YEAR(OrderDate)=YEAR(NOW()); 
2020/06/24-14:20:11 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==> Parameters: 
2020/06/24-14:20:11 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- <==      Total: 1
2020/06/24-14:20:11 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==>  Preparing: select * from pub_depart where HOSPITALID=? 
2020/06/24-14:20:11 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==> Parameters: 901600(String)
2020/06/24-14:20:11 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- <==      Total: 22
2020/06/24-14:24:38 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-14:25:07 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-14:26:07 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==>  Preparing: select count(*) from sj_order where YEAR(OrderDate)=YEAR(NOW()); 
2020/06/24-14:26:07 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==> Parameters: 
2020/06/24-14:26:07 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- <==      Total: 1
2020/06/24-14:26:07 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==>  Preparing: select * from pub_depart where HOSPITALID=? 
2020/06/24-14:26:07 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==> Parameters: 901600(String)
2020/06/24-14:26:07 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- <==      Total: 22
2020/06/24-14:26:10 [http-nio-8083-exec-8] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- ==>  Preparing: select sg.*, su.UnitName from sj_goodsdictionary sg INNER join sj_unit su on GoodsName like concat('%',?,'%') and sg.UnitID = su.UnitID 
2020/06/24-14:26:10 [http-nio-8083-exec-8] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- ==> Parameters: ip(String)
2020/06/24-14:26:10 [http-nio-8083-exec-8] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- <==      Total: 1
2020/06/24-14:26:10 [http-nio-8083-exec-8] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/24-14:26:10 [http-nio-8083-exec-8] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/24-14:26:10 [http-nio-8083-exec-8] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/24-14:26:10 [http-nio-8083-exec-8] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehouse where GoodsID = ?), 0) 
2020/06/24-14:26:10 [http-nio-8083-exec-8] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==> Parameters: 1(Integer)
2020/06/24-14:26:10 [http-nio-8083-exec-8] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/24-14:27:41 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==>  Preparing: select count(*) from sj_order where YEAR(OrderDate)=YEAR(NOW()); 
2020/06/24-14:27:41 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==>  Preparing: select * from pub_depart where HOSPITALID=? 
2020/06/24-14:27:41 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==> Parameters: 901600(String)
2020/06/24-14:27:41 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==> Parameters: 
2020/06/24-14:27:41 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- <==      Total: 1
2020/06/24-14:27:41 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- <==      Total: 22
2020/06/24-14:27:44 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- ==>  Preparing: select sg.*, su.UnitName from sj_goodsdictionary sg INNER join sj_unit su on GoodsName like concat('%',?,'%') and sg.UnitID = su.UnitID 
2020/06/24-14:27:44 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- ==> Parameters: ip(String)
2020/06/24-14:27:44 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- <==      Total: 1
2020/06/24-14:27:44 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/24-14:27:44 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/24-14:27:44 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/24-14:27:44 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehouse where GoodsID = ?), 0) 
2020/06/24-14:27:44 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==> Parameters: 1(Integer)
2020/06/24-14:27:44 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/24-14:29:38 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-14:30:07 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-14:32:30 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==>  Preparing: select count(*) from sj_order where YEAR(OrderDate)=YEAR(NOW()); 
2020/06/24-14:32:30 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==> Parameters: 
2020/06/24-14:32:30 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==>  Preparing: select * from pub_depart where HOSPITALID=? 
2020/06/24-14:32:30 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==> Parameters: 901600(String)
2020/06/24-14:32:30 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- <==      Total: 1
2020/06/24-14:32:30 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- <==      Total: 22
2020/06/24-14:32:39 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==>  Preparing: select * from pub_depart where HOSPITALID=? 
2020/06/24-14:32:39 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==> Parameters: 901600(String)
2020/06/24-14:32:39 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- <==      Total: 22
2020/06/24-14:32:39 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==>  Preparing: SELECT * from sj_order where OrderNo like concat('%',?,'%') and OrderDate >= ? and OrderDate < ? and OrderState != 0 order by OrderDate desc limit ?, ? 
2020/06/24-14:32:39 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-24 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/24-14:32:39 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- <==      Total: 0
2020/06/24-14:32:40 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==>  Preparing: select count(*) from sj_order where YEAR(OrderDate)=YEAR(NOW()); 
2020/06/24-14:32:40 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==>  Preparing: select * from pub_depart where HOSPITALID=? 
2020/06/24-14:32:40 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==> Parameters: 
2020/06/24-14:32:40 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==> Parameters: 901600(String)
2020/06/24-14:32:40 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- <==      Total: 1
2020/06/24-14:32:40 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- <==      Total: 22
2020/06/24-14:32:51 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- ==>  Preparing: select sg.*, su.UnitName from sj_goodsdictionary sg INNER join sj_unit su on GoodsName like concat('%',?,'%') and sg.UnitID = su.UnitID 
2020/06/24-14:32:51 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- ==> Parameters: ip(String)
2020/06/24-14:32:51 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- <==      Total: 1
2020/06/24-14:32:51 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/24-14:32:51 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/24-14:32:51 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/24-14:32:51 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehouse where GoodsID = ?), 0) 
2020/06/24-14:32:51 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==> Parameters: 1(Integer)
2020/06/24-14:32:51 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/24-14:34:38 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-14:35:07 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-14:35:38 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==>  Preparing: select count(*) from sj_order where YEAR(OrderDate)=YEAR(NOW()); 
2020/06/24-14:35:38 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==>  Preparing: select * from pub_depart where HOSPITALID=? 
2020/06/24-14:35:38 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==> Parameters: 
2020/06/24-14:35:38 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==> Parameters: 901600(String)
2020/06/24-14:35:38 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- <==      Total: 1
2020/06/24-14:35:38 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- <==      Total: 22
2020/06/24-14:35:44 [http-nio-8083-exec-7] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- ==>  Preparing: select sg.*, su.UnitName from sj_goodsdictionary sg INNER join sj_unit su on GoodsName like concat('%',?,'%') and sg.UnitID = su.UnitID 
2020/06/24-14:35:44 [http-nio-8083-exec-7] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- ==> Parameters: iphone(String)
2020/06/24-14:35:44 [http-nio-8083-exec-7] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- <==      Total: 1
2020/06/24-14:35:44 [http-nio-8083-exec-7] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/24-14:35:44 [http-nio-8083-exec-7] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/24-14:35:44 [http-nio-8083-exec-7] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/24-14:35:44 [http-nio-8083-exec-7] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehouse where GoodsID = ?), 0) 
2020/06/24-14:35:44 [http-nio-8083-exec-7] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==> Parameters: 1(Integer)
2020/06/24-14:35:44 [http-nio-8083-exec-7] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/24-14:36:03 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderMapper.insert- ==>  Preparing: insert into sj_order ( OrderNo, DepartCode, CollarPersonID, AuditPersonID, Memo, SumPrice, Urgent, OrderState, OrderDate, HospitalID ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2020/06/24-14:36:03 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderMapper.insert- ==> Parameters: 9016002000035(String), 12(String), 胡凌云(String), (String), 123(String), 2.22(String), 0(Integer), 0(Integer), 2020-6-24 14:36:3(String), 901600(String)
2020/06/24-14:36:03 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderMapper.insert- <==    Updates: 1
2020/06/24-14:36:03 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderDetailMapper.insert- ==>  Preparing: insert into sj_orderdetail ( OrderNo, GoodsName, Brand, UnitPrice, OrderNum, Specification ) values ( ?, ?, ?, ?, ?, ? ) 
2020/06/24-14:36:03 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderDetailMapper.insert- ==> Parameters: 9016002000035(String), iphone12(String), apple(String), 1.11(BigDecimal), 2(Integer), 1(String)
2020/06/24-14:36:03 [http-nio-8084-exec-6] ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]- Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLException: Field 'GoodsID' doesn't have a default value
### The error may exist in file [C:\Users\13955\Desktop\ReagentAndConsumables\springcloud\rac-order-service\target\classes\mapper\OrderDetailMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: insert into sj_orderdetail          ( OrderNo,                                                        GoodsName,                                           Brand,                                           UnitPrice,                                                        OrderNum,                                                                                               Specification )           values ( ?,                                                        ?,                                           ?,                                           ?,                                                        ?,                                                                                               ? )
### Cause: java.sql.SQLException: Field 'GoodsID' doesn't have a default value
; Field 'GoodsID' doesn't have a default value; nested exception is java.sql.SQLException: Field 'GoodsID' doesn't have a default value] with root cause
java.sql.SQLException: Field 'GoodsID' doesn't have a default value
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.18.jar:8.0.18]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.18.jar:8.0.18]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.18.jar:8.0.18]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953) ~[mysql-connector-java-8.0.18.jar:8.0.18]
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370) ~[mysql-connector-java-8.0.18.jar:8.0.18]
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44) ~[HikariCP-3.4.1.jar:na]
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java) ~[HikariCP-3.4.1.jar:na]
	at sun.reflect.GeneratedMethodAccessor118.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_231]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_231]
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59) ~[mybatis-3.5.3.jar:3.5.3]
	at com.sun.proxy.$Proxy145.execute(Unknown Source) ~[na:na]
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184) ~[mybatis-3.5.3.jar:3.5.3]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_231]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_231]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_231]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_231]
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426) ~[mybatis-spring-2.0.3.jar:2.0.3]
	at com.sun.proxy.$Proxy93.insert(Unknown Source) ~[na:na]
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:271) ~[mybatis-spring-2.0.3.jar:2.0.3]
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:93) ~[mybatis-3.5.3.jar:3.5.3]
	at com.sun.proxy.$Proxy97.insert(Unknown Source) ~[na:na]
	at com.huijian.rac.service.OrderDetailService.insert(OrderDetailService.java:38) ~[classes/:na]
	at com.huijian.rac.controller.OrderController.insert(OrderController.java:89) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_231]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_231]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_231]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_231]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_231]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_231]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_231]
2020/06/24-14:37:26 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==>  Preparing: select * from pub_depart where HOSPITALID=? 
2020/06/24-14:37:26 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==>  Preparing: select count(*) from sj_order where YEAR(OrderDate)=YEAR(NOW()); 
2020/06/24-14:37:26 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==> Parameters: 901600(String)
2020/06/24-14:37:26 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==> Parameters: 
2020/06/24-14:37:26 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- <==      Total: 1
2020/06/24-14:37:26 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- <==      Total: 22
2020/06/24-14:37:30 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- ==>  Preparing: select sg.*, su.UnitName from sj_goodsdictionary sg INNER join sj_unit su on GoodsName like concat('%',?,'%') and sg.UnitID = su.UnitID 
2020/06/24-14:37:30 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- ==> Parameters: ip(String)
2020/06/24-14:37:30 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- <==      Total: 1
2020/06/24-14:37:30 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/24-14:37:30 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/24-14:37:30 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/24-14:37:30 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehouse where GoodsID = ?), 0) 
2020/06/24-14:37:30 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==> Parameters: 1(Integer)
2020/06/24-14:37:30 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/24-14:37:45 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderMapper.insert- ==>  Preparing: insert into sj_order ( OrderNo, DepartCode, CollarPersonID, AuditPersonID, Memo, SumPrice, Urgent, OrderState, OrderDate, HospitalID ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2020/06/24-14:37:45 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderMapper.insert- ==> Parameters: 9016002000036(String), 12(String), 胡凌云(String), (String), (String), 2.22(String), 0(Integer), 0(Integer), 2020-6-24 14:37:45(String), 901600(String)
2020/06/24-14:37:45 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderMapper.insert- <==    Updates: 1
2020/06/24-14:37:45 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderDetailMapper.insert- ==>  Preparing: insert into sj_orderdetail ( OrderNo, GoodsID, GoodsName, Brand, UnitPrice, OrderNum, Specification ) values ( ?, ?, ?, ?, ?, ?, ? ) 
2020/06/24-14:37:45 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderDetailMapper.insert- ==> Parameters: 9016002000036(String), 1(Integer), iphone12(String), apple(String), 1.11(BigDecimal), 2(Integer), 1(String)
2020/06/24-14:37:45 [http-nio-8084-exec-10] ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]- Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLException: Field 'ReceiveNum' doesn't have a default value
### The error may exist in file [C:\Users\13955\Desktop\ReagentAndConsumables\springcloud\rac-order-service\target\classes\mapper\OrderDetailMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: insert into sj_orderdetail          ( OrderNo,                                           GoodsID,                                           GoodsName,                                           Brand,                                           UnitPrice,                                                        OrderNum,                                                                                               Specification )           values ( ?,                                           ?,                                           ?,                                           ?,                                           ?,                                                        ?,                                                                                               ? )
### Cause: java.sql.SQLException: Field 'ReceiveNum' doesn't have a default value
; Field 'ReceiveNum' doesn't have a default value; nested exception is java.sql.SQLException: Field 'ReceiveNum' doesn't have a default value] with root cause
java.sql.SQLException: Field 'ReceiveNum' doesn't have a default value
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.18.jar:8.0.18]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.18.jar:8.0.18]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.18.jar:8.0.18]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953) ~[mysql-connector-java-8.0.18.jar:8.0.18]
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370) ~[mysql-connector-java-8.0.18.jar:8.0.18]
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44) ~[HikariCP-3.4.1.jar:na]
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java) ~[HikariCP-3.4.1.jar:na]
	at sun.reflect.GeneratedMethodAccessor118.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_231]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_231]
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59) ~[mybatis-3.5.3.jar:3.5.3]
	at com.sun.proxy.$Proxy145.execute(Unknown Source) ~[na:na]
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184) ~[mybatis-3.5.3.jar:3.5.3]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_231]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_231]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_231]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_231]
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426) ~[mybatis-spring-2.0.3.jar:2.0.3]
	at com.sun.proxy.$Proxy93.insert(Unknown Source) ~[na:na]
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:271) ~[mybatis-spring-2.0.3.jar:2.0.3]
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:93) ~[mybatis-3.5.3.jar:3.5.3]
	at com.sun.proxy.$Proxy97.insert(Unknown Source) ~[na:na]
	at com.huijian.rac.service.OrderDetailService.insert(OrderDetailService.java:38) ~[classes/:na]
	at com.huijian.rac.controller.OrderController.insert(OrderController.java:89) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_231]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_231]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_231]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_231]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_231]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_231]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_231]
2020/06/24-14:39:38 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-14:39:52 [http-nio-8083-exec-8] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- ==>  Preparing: select sg.*, su.UnitName from sj_goodsdictionary sg INNER join sj_unit su on GoodsName like concat('%',?,'%') and sg.UnitID = su.UnitID 
2020/06/24-14:39:52 [http-nio-8083-exec-8] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- ==> Parameters: ip(String)
2020/06/24-14:39:52 [http-nio-8083-exec-8] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- <==      Total: 1
2020/06/24-14:39:52 [http-nio-8083-exec-8] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/24-14:39:52 [http-nio-8083-exec-8] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/24-14:39:52 [http-nio-8083-exec-8] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/24-14:39:52 [http-nio-8083-exec-8] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehouse where GoodsID = ?), 0) 
2020/06/24-14:39:52 [http-nio-8083-exec-8] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==> Parameters: 1(Integer)
2020/06/24-14:39:52 [http-nio-8083-exec-8] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/24-14:40:07 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-14:40:47 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.GoodsPackageMapper.inquiryGoodsPackage- ==>  Preparing: select * from sj_package 
2020/06/24-14:40:47 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.GoodsPackageMapper.inquiryGoodsPackage- ==> Parameters: 
2020/06/24-14:40:47 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.GoodsPackageMapper.inquiryGoodsPackage- <==      Total: 2
2020/06/24-14:40:48 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.GoodsPackageDetailMapper.inquiryGoodsPackageDetail- ==>  Preparing: select * from sj_packagedetail where PackageID = ? 
2020/06/24-14:40:48 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.GoodsPackageDetailMapper.inquiryGoodsPackageDetail- ==> Parameters: 1(Integer)
2020/06/24-14:40:48 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.GoodsPackageDetailMapper.inquiryGoodsPackageDetail- <==      Total: 2
2020/06/24-14:40:48 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- ==>  Preparing: select UnitName from sj_unit where UnitID = ? 
2020/06/24-14:40:48 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- ==> Parameters: null
2020/06/24-14:40:48 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- <==      Total: 0
2020/06/24-14:40:48 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- ==>  Preparing: select UnitName from sj_unit where UnitID = ? 
2020/06/24-14:40:48 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- ==> Parameters: null
2020/06/24-14:40:48 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- <==      Total: 0
2020/06/24-14:42:50 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- ==>  Preparing: select * from sj_order where HospitalID = ? order by OrderDate DESC limit 1; 
2020/06/24-14:42:50 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- ==> Parameters: 901600(String)
2020/06/24-14:42:50 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- <==      Total: 1
2020/06/24-14:42:50 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- ==>  Preparing: select * from sj_orderdetail where OrderNo = ? and GoodsID in ( ? ) 
2020/06/24-14:42:50 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- ==> Parameters: 9016002000036(String), 1(Integer)
2020/06/24-14:42:50 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- <==      Total: 0
2020/06/24-14:42:50 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- ==>  Preparing: select * from sj_secondleavestocklistdetail where HospitalID = ? and GoodsID in ( ? ) and now() >= DATE_SUB(CURDATE(), INTERVAL 12 month) 
2020/06/24-14:42:50 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- ==> Parameters: 901600(String), 1(Integer)
2020/06/24-14:42:50 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- <==      Total: 1
2020/06/24-14:42:50 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==>  Preparing: select * from sj_warehousesecond where GoodsID = ? and HospitalID = ? 
2020/06/24-14:42:50 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==> Parameters: 1(Integer), 901600(String)
2020/06/24-14:42:50 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- <==      Total: 1
2020/06/24-14:43:06 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==>  Preparing: select * from pub_depart where HOSPITALID=? 
2020/06/24-14:43:06 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==>  Preparing: select count(*) from sj_order where YEAR(OrderDate)=YEAR(NOW()); 
2020/06/24-14:43:06 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==> Parameters: 
2020/06/24-14:43:06 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==> Parameters: 901600(String)
2020/06/24-14:43:06 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- <==      Total: 1
2020/06/24-14:43:06 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- <==      Total: 22
2020/06/24-14:43:20 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- ==>  Preparing: select * from sj_order where HospitalID = ? order by OrderDate DESC limit 1; 
2020/06/24-14:43:20 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- ==> Parameters: 901600(String)
2020/06/24-14:43:20 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- <==      Total: 1
2020/06/24-14:43:20 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- ==>  Preparing: select * from sj_orderdetail where OrderNo = ? and GoodsID in ( ? ) 
2020/06/24-14:43:20 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- ==> Parameters: 9016002000036(String), 1(Integer)
2020/06/24-14:43:20 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- <==      Total: 0
2020/06/24-14:43:20 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- ==>  Preparing: select * from sj_secondleavestocklistdetail where HospitalID = ? and GoodsID in ( ? ) and now() >= DATE_SUB(CURDATE(), INTERVAL 12 month) 
2020/06/24-14:43:20 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- ==> Parameters: 901600(String), 1(Integer)
2020/06/24-14:43:20 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- <==      Total: 1
2020/06/24-14:43:20 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==>  Preparing: select * from sj_warehousesecond where GoodsID = ? and HospitalID = ? 
2020/06/24-14:43:20 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==> Parameters: 1(Integer), 901600(String)
2020/06/24-14:43:20 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- <==      Total: 1
2020/06/24-14:44:36 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==>  Preparing: select * from pub_depart where HOSPITALID=? 
2020/06/24-14:44:36 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==>  Preparing: select count(*) from sj_order where YEAR(OrderDate)=YEAR(NOW()); 
2020/06/24-14:44:36 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==> Parameters: 
2020/06/24-14:44:36 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==> Parameters: 901600(String)
2020/06/24-14:44:36 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- <==      Total: 1
2020/06/24-14:44:36 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- <==      Total: 22
2020/06/24-14:44:38 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-14:44:42 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- ==>  Preparing: select * from sj_order where HospitalID = ? order by OrderDate DESC limit 1; 
2020/06/24-14:44:42 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- ==> Parameters: 901600(String)
2020/06/24-14:44:42 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- <==      Total: 1
2020/06/24-14:44:42 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- ==>  Preparing: select * from sj_orderdetail where OrderNo = ? and GoodsID in ( ? ) 
2020/06/24-14:44:42 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- ==> Parameters: 9016002000036(String), 1(Integer)
2020/06/24-14:44:42 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- <==      Total: 0
2020/06/24-14:44:42 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- ==>  Preparing: select * from sj_secondleavestocklistdetail where HospitalID = ? and GoodsID in ( ? ) and now() >= DATE_SUB(CURDATE(), INTERVAL 12 month) 
2020/06/24-14:44:42 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- ==> Parameters: 901600(String), 1(Integer)
2020/06/24-14:44:42 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- <==      Total: 1
2020/06/24-14:44:42 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==>  Preparing: select * from sj_warehousesecond where GoodsID = ? and HospitalID = ? 
2020/06/24-14:44:42 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==> Parameters: 1(Integer), 901600(String)
2020/06/24-14:44:42 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- <==      Total: 1
2020/06/24-14:44:53 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderMapper.insert- ==>  Preparing: insert into sj_order ( OrderNo, DepartCode, CollarPersonID, AuditPersonID, Memo, SumPrice, Urgent, OrderState, OrderDate, HospitalID ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2020/06/24-14:44:53 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderMapper.insert- ==> Parameters: 9016002000037(String), 12(String), 胡凌云(String), (String), 123(String), 1.11(String), 1(Integer), 0(Integer), 2020-6-24 14:44:52(String), 901600(String)
2020/06/24-14:44:53 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderMapper.insert- <==    Updates: 1
2020/06/24-14:44:53 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderDetailMapper.insert- ==>  Preparing: insert into sj_orderdetail ( OrderNo, GoodsID, GoodsName, Brand, UnitPrice, Memo, OrderNum, ReceiveNum, SendNum, RecommendedOrderQuantity, Specification ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2020/06/24-14:44:53 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderDetailMapper.insert- ==> Parameters: 9016002000037(String), 1(Integer), iphone12(String), apple(String), 1.11(BigDecimal), (String), 1(Integer), 0(Integer), 0(Integer), 1(Integer), 1(String)
2020/06/24-14:44:53 [http-nio-8084-exec-6] ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]- Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLException: Field 'UnitID' doesn't have a default value
### The error may exist in file [C:\Users\13955\Desktop\ReagentAndConsumables\springcloud\rac-order-service\target\classes\mapper\OrderDetailMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: insert into sj_orderdetail          ( OrderNo,                                           GoodsID,                                           GoodsName,                                           Brand,                                           UnitPrice,                                           Memo,                                           OrderNum,                                           ReceiveNum,                                           SendNum,                                           RecommendedOrderQuantity,                                                        Specification )           values ( ?,                                           ?,                                           ?,                                           ?,                                           ?,                                           ?,                                           ?,                                           ?,                                           ?,                                           ?,                                                        ? )
### Cause: java.sql.SQLException: Field 'UnitID' doesn't have a default value
; Field 'UnitID' doesn't have a default value; nested exception is java.sql.SQLException: Field 'UnitID' doesn't have a default value] with root cause
java.sql.SQLException: Field 'UnitID' doesn't have a default value
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.18.jar:8.0.18]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.18.jar:8.0.18]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.18.jar:8.0.18]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953) ~[mysql-connector-java-8.0.18.jar:8.0.18]
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370) ~[mysql-connector-java-8.0.18.jar:8.0.18]
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44) ~[HikariCP-3.4.1.jar:na]
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java) ~[HikariCP-3.4.1.jar:na]
	at sun.reflect.GeneratedMethodAccessor118.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_231]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_231]
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59) ~[mybatis-3.5.3.jar:3.5.3]
	at com.sun.proxy.$Proxy145.execute(Unknown Source) ~[na:na]
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184) ~[mybatis-3.5.3.jar:3.5.3]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_231]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_231]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_231]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_231]
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426) ~[mybatis-spring-2.0.3.jar:2.0.3]
	at com.sun.proxy.$Proxy93.insert(Unknown Source) ~[na:na]
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:271) ~[mybatis-spring-2.0.3.jar:2.0.3]
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62) ~[mybatis-3.5.3.jar:3.5.3]
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:93) ~[mybatis-3.5.3.jar:3.5.3]
	at com.sun.proxy.$Proxy97.insert(Unknown Source) ~[na:na]
	at com.huijian.rac.service.OrderDetailService.insert(OrderDetailService.java:38) ~[classes/:na]
	at com.huijian.rac.controller.OrderController.insert(OrderController.java:89) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_231]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_231]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_231]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_231]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) ~[tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_231]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_231]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.29.jar:9.0.29]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_231]
2020/06/24-14:45:07 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-14:47:37 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==>  Preparing: select * from pub_depart where HOSPITALID=? 
2020/06/24-14:47:37 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==>  Preparing: SELECT * from sj_order where OrderNo like concat('%',?,'%') and OrderDate >= ? and OrderDate < ? and OrderState != 0 order by OrderDate desc limit ?, ? 
2020/06/24-14:47:37 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==> Parameters: 901600(String)
2020/06/24-14:47:37 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-24 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/24-14:47:37 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- <==      Total: 0
2020/06/24-14:47:37 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- <==      Total: 22
2020/06/24-14:47:41 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==>  Preparing: select count(*) from sj_order where YEAR(OrderDate)=YEAR(NOW()); 
2020/06/24-14:47:41 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==> Parameters: 
2020/06/24-14:47:41 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- <==      Total: 1
2020/06/24-14:47:41 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==>  Preparing: select * from pub_depart where HOSPITALID=? 
2020/06/24-14:47:41 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==> Parameters: 901600(String)
2020/06/24-14:47:41 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- <==      Total: 22
2020/06/24-14:47:46 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- ==>  Preparing: select * from sj_order where HospitalID = ? order by OrderDate DESC limit 1; 
2020/06/24-14:47:46 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- ==> Parameters: 901600(String)
2020/06/24-14:47:46 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- <==      Total: 1
2020/06/24-14:47:46 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- ==>  Preparing: select * from sj_orderdetail where OrderNo = ? and GoodsID in ( ? ) 
2020/06/24-14:47:46 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- ==> Parameters: 9016002000037(String), 1(Integer)
2020/06/24-14:47:46 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- <==      Total: 0
2020/06/24-14:47:47 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- ==>  Preparing: select * from sj_secondleavestocklistdetail where HospitalID = ? and GoodsID in ( ? ) and now() >= DATE_SUB(CURDATE(), INTERVAL 12 month) 
2020/06/24-14:47:47 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- ==> Parameters: 901600(String), 1(Integer)
2020/06/24-14:47:47 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- <==      Total: 1
2020/06/24-14:47:47 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==>  Preparing: select * from sj_warehousesecond where GoodsID = ? and HospitalID = ? 
2020/06/24-14:47:47 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==> Parameters: 1(Integer), 901600(String)
2020/06/24-14:47:47 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- <==      Total: 1
2020/06/24-14:49:28 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==>  Preparing: select * from pub_depart where HOSPITALID=? 
2020/06/24-14:49:28 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==>  Preparing: SELECT * from sj_order where OrderNo like concat('%',?,'%') and OrderDate >= ? and OrderDate < ? and OrderState != 0 order by OrderDate desc limit ?, ? 
2020/06/24-14:49:28 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==> Parameters: 901600(String)
2020/06/24-14:49:28 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-24 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/24-14:49:28 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- <==      Total: 22
2020/06/24-14:49:28 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- <==      Total: 0
2020/06/24-14:49:30 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==>  Preparing: select count(*) from sj_order where YEAR(OrderDate)=YEAR(NOW()); 
2020/06/24-14:49:30 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==> Parameters: 
2020/06/24-14:49:30 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- <==      Total: 1
2020/06/24-14:49:30 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==>  Preparing: select * from pub_depart where HOSPITALID=? 
2020/06/24-14:49:30 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==> Parameters: 901600(String)
2020/06/24-14:49:30 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- <==      Total: 22
2020/06/24-14:49:34 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- ==>  Preparing: select * from sj_order where HospitalID = ? order by OrderDate DESC limit 1; 
2020/06/24-14:49:34 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- ==> Parameters: 901600(String)
2020/06/24-14:49:34 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- <==      Total: 1
2020/06/24-14:49:34 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- ==>  Preparing: select * from sj_orderdetail where OrderNo = ? and GoodsID in ( ? ) 
2020/06/24-14:49:34 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- ==> Parameters: 9016002000037(String), 1(Integer)
2020/06/24-14:49:34 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- <==      Total: 0
2020/06/24-14:49:35 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- ==>  Preparing: select * from sj_secondleavestocklistdetail where HospitalID = ? and GoodsID in ( ? ) and now() >= DATE_SUB(CURDATE(), INTERVAL 12 month) 
2020/06/24-14:49:35 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- ==> Parameters: 901600(String), 1(Integer)
2020/06/24-14:49:35 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- <==      Total: 1
2020/06/24-14:49:35 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==>  Preparing: select * from sj_warehousesecond where GoodsID = ? and HospitalID = ? 
2020/06/24-14:49:35 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==> Parameters: 1(Integer), 901600(String)
2020/06/24-14:49:35 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- <==      Total: 1
2020/06/24-14:49:38 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-14:49:46 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderMapper.insert- ==>  Preparing: insert into sj_order ( OrderNo, DepartCode, CollarPersonID, AuditPersonID, Memo, SumPrice, Urgent, OrderState, OrderDate, HospitalID ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2020/06/24-14:49:46 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderMapper.insert- ==> Parameters: 9016002000038(String), 12(String), 胡凌云(String), (String), 123(String), 2.22(String), 1(Integer), 0(Integer), 2020-6-24 14:49:46(String), 901600(String)
2020/06/24-14:49:46 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderMapper.insert- <==    Updates: 1
2020/06/24-14:49:46 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderDetailMapper.insert- ==>  Preparing: insert into sj_orderdetail ( OrderNo, GoodsID, GoodsName, Brand, UnitPrice, Memo, OrderNum, ReceiveNum, SendNum, RecommendedOrderQuantity, Specification, UnitID ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2020/06/24-14:49:46 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderDetailMapper.insert- ==> Parameters: 9016002000038(String), 1(Integer), iphone12(String), apple(String), 1.11(BigDecimal), (String), 2(Integer), 0(Integer), 0(Integer), 1(Integer), 1(String), 1(Integer)
2020/06/24-14:49:46 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderDetailMapper.insert- <==    Updates: 1
2020/06/24-14:49:46 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderMapper.getOrderByPage- ==>  Preparing: SELECT * from sj_order where OrderNo like concat('%',?,'%') and OrderDate >= ? and OrderDate < ? and HospitalID = ? order by OrderDate desc limit ?, ? 
2020/06/24-14:49:46 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderMapper.getOrderByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-24 23:59:59.0(Timestamp), 901600(String), 0(Integer), 10(Integer)
2020/06/24-14:49:46 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderMapper.getOrderByPage- <==      Total: 10
2020/06/24-14:49:48 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderDetailMapper.findListByOrderNo- ==>  Preparing: select * from sj_orderdetail where OrderNo = ? 
2020/06/24-14:49:48 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderDetailMapper.findListByOrderNo- ==> Parameters: 9016002000038(String)
2020/06/24-14:49:48 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderDetailMapper.findListByOrderNo- <==      Total: 1
2020/06/24-14:49:48 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- ==>  Preparing: select UnitName from sj_unit where UnitID = ? 
2020/06/24-14:49:48 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- ==> Parameters: 1(Integer)
2020/06/24-14:49:48 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.UnitMapper.quiryByUnitID- <==      Total: 1
2020/06/24-14:49:48 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==>  Preparing: select * from sj_warehousesecond where GoodsID = ? and HospitalID = ? 
2020/06/24-14:49:48 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==> Parameters: 1(Integer), 901600(String)
2020/06/24-14:49:48 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- <==      Total: 1
2020/06/24-14:50:04 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==>  Preparing: select count(*) from sj_order where YEAR(OrderDate)=YEAR(NOW()); 
2020/06/24-14:50:04 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==>  Preparing: select * from pub_depart where HOSPITALID=? 
2020/06/24-14:50:04 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==> Parameters: 
2020/06/24-14:50:04 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==> Parameters: 901600(String)
2020/06/24-14:50:04 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- <==      Total: 1
2020/06/24-14:50:04 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- <==      Total: 22
2020/06/24-14:50:07 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-14:50:13 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==>  Preparing: select count(*) from sj_order where YEAR(OrderDate)=YEAR(NOW()); 
2020/06/24-14:50:13 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==> Parameters: 
2020/06/24-14:50:13 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- <==      Total: 1
2020/06/24-14:50:13 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==>  Preparing: select * from pub_depart where HOSPITALID=? 
2020/06/24-14:50:13 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==> Parameters: 901600(String)
2020/06/24-14:50:13 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- <==      Total: 22
2020/06/24-14:50:15 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==>  Preparing: select * from pub_depart where HOSPITALID=? 
2020/06/24-14:50:15 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==>  Preparing: SELECT * from sj_order where OrderNo like concat('%',?,'%') and OrderDate >= ? and OrderDate < ? and OrderState != 0 order by OrderDate desc limit ?, ? 
2020/06/24-14:50:15 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==> Parameters: 901600(String)
2020/06/24-14:50:15 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-24 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/24-14:50:15 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- <==      Total: 0
2020/06/24-14:50:15 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- <==      Total: 22
2020/06/24-14:50:17 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==>  Preparing: select count(*) from sj_order where YEAR(OrderDate)=YEAR(NOW()); 
2020/06/24-14:50:17 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==> Parameters: 
2020/06/24-14:50:17 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- <==      Total: 1
2020/06/24-14:50:17 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==>  Preparing: select * from pub_depart where HOSPITALID=? 
2020/06/24-14:50:17 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==> Parameters: 901600(String)
2020/06/24-14:50:17 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- <==      Total: 22
2020/06/24-14:50:22 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- ==>  Preparing: select sg.*, su.UnitName from sj_goodsdictionary sg INNER join sj_unit su on GoodsName like concat('%',?,'%') and sg.UnitID = su.UnitID 
2020/06/24-14:50:22 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- ==> Parameters: ip(String)
2020/06/24-14:50:22 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- <==      Total: 1
2020/06/24-14:50:22 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/24-14:50:22 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/24-14:50:22 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/24-14:50:22 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehouse where GoodsID = ?), 0) 
2020/06/24-14:50:22 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==> Parameters: 1(Integer)
2020/06/24-14:50:22 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/24-14:50:37 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==>  Preparing: select * from pub_depart where HOSPITALID=? 
2020/06/24-14:50:37 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==>  Preparing: select count(*) from sj_order where YEAR(OrderDate)=YEAR(NOW()); 
2020/06/24-14:50:37 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==> Parameters: 901600(String)
2020/06/24-14:50:37 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==> Parameters: 
2020/06/24-14:50:37 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- <==      Total: 1
2020/06/24-14:50:37 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- <==      Total: 22
2020/06/24-14:50:39 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==>  Preparing: select count(*) from sj_order where YEAR(OrderDate)=YEAR(NOW()); 
2020/06/24-14:50:39 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==> Parameters: 
2020/06/24-14:50:39 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- <==      Total: 1
2020/06/24-14:50:40 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==>  Preparing: select * from pub_depart where HOSPITALID=? 
2020/06/24-14:50:40 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==> Parameters: 901600(String)
2020/06/24-14:50:40 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- <==      Total: 22
2020/06/24-14:50:42 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==>  Preparing: select * from pub_depart where HOSPITALID=? 
2020/06/24-14:50:42 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==> Parameters: 901600(String)
2020/06/24-14:50:42 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==>  Preparing: SELECT * from sj_order where OrderNo like concat('%',?,'%') and OrderDate >= ? and OrderDate < ? and OrderState != 0 order by OrderDate desc limit ?, ? 
2020/06/24-14:50:42 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-24 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/24-14:50:42 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- <==      Total: 0
2020/06/24-14:50:42 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- <==      Total: 22
2020/06/24-14:50:44 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==>  Preparing: select count(*) from sj_order where YEAR(OrderDate)=YEAR(NOW()); 
2020/06/24-14:50:44 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==> Parameters: 
2020/06/24-14:50:44 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- <==      Total: 1
2020/06/24-14:50:44 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==>  Preparing: select * from pub_depart where HOSPITALID=? 
2020/06/24-14:50:44 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==> Parameters: 901600(String)
2020/06/24-14:50:44 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- <==      Total: 22
2020/06/24-14:50:54 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==>  Preparing: select * from pub_depart where HOSPITALID=? 
2020/06/24-14:50:54 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==> Parameters: 901600(String)
2020/06/24-14:50:54 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==>  Preparing: select count(*) from sj_order where YEAR(OrderDate)=YEAR(NOW()); 
2020/06/24-14:50:54 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==> Parameters: 
2020/06/24-14:50:54 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- <==      Total: 22
2020/06/24-14:50:54 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- <==      Total: 1
2020/06/24-14:51:01 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- ==>  Preparing: select * from sj_order where HospitalID = ? order by OrderDate DESC limit 1; 
2020/06/24-14:51:01 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- ==> Parameters: 901600(String)
2020/06/24-14:51:01 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- <==      Total: 1
2020/06/24-14:51:01 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- ==>  Preparing: select * from sj_orderdetail where OrderNo = ? and GoodsID in ( ? ) 
2020/06/24-14:51:01 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- ==> Parameters: 9016002000038(String), 1(Integer)
2020/06/24-14:51:01 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- <==      Total: 1
2020/06/24-14:51:01 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- ==>  Preparing: select * from sj_secondleavestocklistdetail where HospitalID = ? and GoodsID in ( ? ) and now() >= DATE_SUB(CURDATE(), INTERVAL 12 month) 
2020/06/24-14:51:01 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- ==> Parameters: 901600(String), 1(Integer)
2020/06/24-14:51:01 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- <==      Total: 1
2020/06/24-14:51:01 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==>  Preparing: select * from sj_warehousesecond where GoodsID = ? and HospitalID = ? 
2020/06/24-14:51:01 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==> Parameters: 1(Integer), 901600(String)
2020/06/24-14:51:01 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- <==      Total: 1
2020/06/24-14:51:06 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.OutboundRecordMapper.getOutboundRecordByPage- ==>  Preparing: SELECT * from sj_leavestocklist where LeaveStockNo like concat('%',?,'%') and LeaveStock >= ? and LeaveStock < ? order by LeaveStockNo desc limit ?, ? 
2020/06/24-14:51:06 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.OutboundRecordMapper.getOutboundRecordByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-24 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/24-14:51:06 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.OutboundRecordMapper.getOutboundRecordByPage- <==      Total: 1
2020/06/24-14:51:06 [http-nio-8083-exec-5] INFO  com.netflix.config.ChainedDynamicProperty- Flipping property: rac-order-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020/06/24-14:51:06 [http-nio-8083-exec-5] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer- Shutdown hook installed for: NFLoadBalancer-PingTimer-rac-order-service
2020/06/24-14:51:06 [http-nio-8083-exec-5] INFO  com.netflix.loadbalancer.BaseLoadBalancer- Client: rac-order-service instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=rac-order-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020/06/24-14:51:06 [http-nio-8083-exec-5] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer- Using serverListUpdater PollingServerListUpdater
2020/06/24-14:51:06 [http-nio-8083-exec-5] INFO  com.netflix.config.ChainedDynamicProperty- Flipping property: rac-order-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020/06/24-14:51:06 [http-nio-8083-exec-5] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer- DynamicServerListLoadBalancer for client rac-order-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=rac-order-service,current list of Servers=[MSI.mshome.net:8084],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:MSI.mshome.net:8084;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 GMT+08:00 1970;	First connection made: Thu Jan 01 08:00:00 GMT+08:00 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@6734d2c5
2020/06/24-14:51:07 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==>  Preparing: select OrderState from sj_order where OrderNo = ? 
2020/06/24-14:51:07 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==> Parameters: 9016002000027(String)
2020/06/24-14:51:07 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- <==      Total: 1
2020/06/24-14:51:07 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty- Flipping property: rac-order-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020/06/24-14:51:10 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==>  Preparing: select * from pub_depart where HOSPITALID=? 
2020/06/24-14:51:10 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==> Parameters: 901600(String)
2020/06/24-14:51:10 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==>  Preparing: select count(*) from sj_order where YEAR(OrderDate)=YEAR(NOW()); 
2020/06/24-14:51:10 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==> Parameters: 
2020/06/24-14:51:10 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- <==      Total: 1
2020/06/24-14:51:10 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- <==      Total: 22
2020/06/24-14:51:13 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- ==>  Preparing: select sg.*, su.UnitName from sj_goodsdictionary sg INNER join sj_unit su on GoodsName like concat('%',?,'%') and sg.UnitID = su.UnitID 
2020/06/24-14:51:13 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- ==> Parameters: ip(String)
2020/06/24-14:51:13 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- <==      Total: 1
2020/06/24-14:51:13 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/24-14:51:13 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/24-14:51:13 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/24-14:51:13 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehouse where GoodsID = ?), 0) 
2020/06/24-14:51:13 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==> Parameters: 1(Integer)
2020/06/24-14:51:13 [http-nio-8083-exec-9] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/24-14:52:48 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==>  Preparing: select * from pub_depart where HOSPITALID=? 
2020/06/24-14:52:48 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==>  Preparing: select count(*) from sj_order where YEAR(OrderDate)=YEAR(NOW()); 
2020/06/24-14:52:48 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==> Parameters: 901600(String)
2020/06/24-14:52:48 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==> Parameters: 
2020/06/24-14:52:48 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- <==      Total: 1
2020/06/24-14:52:48 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- <==      Total: 22
2020/06/24-14:53:31 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==>  Preparing: select * from pub_depart where HOSPITALID=? 
2020/06/24-14:53:31 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==>  Preparing: select count(*) from sj_order where YEAR(OrderDate)=YEAR(NOW()); 
2020/06/24-14:53:31 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==> Parameters: 901600(String)
2020/06/24-14:53:31 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==> Parameters: 
2020/06/24-14:53:31 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- <==      Total: 1
2020/06/24-14:53:31 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- <==      Total: 22
2020/06/24-14:53:35 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- ==>  Preparing: select sg.*, su.UnitName from sj_goodsdictionary sg INNER join sj_unit su on GoodsName like concat('%',?,'%') and sg.UnitID = su.UnitID 
2020/06/24-14:53:35 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- ==> Parameters: ip(String)
2020/06/24-14:53:35 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- <==      Total: 1
2020/06/24-14:53:35 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/24-14:53:35 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/24-14:53:35 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/24-14:53:35 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehouse where GoodsID = ?), 0) 
2020/06/24-14:53:35 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==> Parameters: 1(Integer)
2020/06/24-14:53:35 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/24-14:54:38 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-14:55:07 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-14:59:38 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-15:00:07 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-15:04:38 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-15:05:07 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-15:09:38 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-15:10:07 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-15:14:38 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-15:15:07 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-15:16:16 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.OutboundRecordMapper.getOutboundRecordByPage- ==>  Preparing: SELECT * from sj_leavestocklist where LeaveStockNo like concat('%',?,'%') and LeaveStock >= ? and LeaveStock < ? order by LeaveStockNo desc limit ?, ? 
2020/06/24-15:16:16 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.OutboundRecordMapper.getOutboundRecordByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-24 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/24-15:16:16 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.OutboundRecordMapper.getOutboundRecordByPage- <==      Total: 1
2020/06/24-15:16:16 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==>  Preparing: select OrderState from sj_order where OrderNo = ? 
2020/06/24-15:16:16 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==> Parameters: 9016002000027(String)
2020/06/24-15:16:16 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- <==      Total: 1
2020/06/24-15:16:20 [http-nio-8083-exec-7] DEBUG com.huijian.rac.mapper.ReturnGoodsMapper.inquiryOneDay- ==>  Preparing: select count(*) from sj_returngoods where return_goods_date>CURRENT_DATE and hospital_id = ?; 
2020/06/24-15:16:20 [http-nio-8083-exec-7] DEBUG com.huijian.rac.mapper.ReturnGoodsMapper.inquiryOneDay- ==> Parameters: 901600(String)
2020/06/24-15:16:20 [http-nio-8083-exec-7] DEBUG com.huijian.rac.mapper.ReturnGoodsMapper.inquiryOneDay- <==      Total: 1
2020/06/24-15:16:30 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==>  Preparing: select count(*) from sj_order where YEAR(OrderDate)=YEAR(NOW()); 
2020/06/24-15:16:30 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==> Parameters: 
2020/06/24-15:16:30 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- <==      Total: 1
2020/06/24-15:16:30 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==>  Preparing: select * from pub_depart where HOSPITALID=? 
2020/06/24-15:16:30 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==> Parameters: 901600(String)
2020/06/24-15:16:30 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- <==      Total: 22
2020/06/24-15:17:19 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.getAllGoods- ==>  Preparing: select sg.*, su.UnitName from sj_goodsdictionary sg INNER join sj_unit su on sg.UnitID = su.UnitID 
2020/06/24-15:17:19 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.getAllGoods- ==> Parameters: 
2020/06/24-15:17:19 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.getAllGoods- <==      Total: 20
2020/06/24-15:17:19 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/24-15:17:19 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/24-15:17:19 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/24-15:17:19 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/24-15:17:19 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 2(Integer)
2020/06/24-15:17:19 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/24-15:17:19 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/24-15:17:19 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/24-15:17:19 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/24-15:17:19 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/24-15:17:19 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/24-15:17:19 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/24-15:17:19 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/24-15:17:19 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 2(Integer)
2020/06/24-15:17:19 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/24-15:17:19 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/24-15:17:19 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/24-15:17:19 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/24-15:17:19 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/24-15:17:19 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/24-15:17:19 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/24-15:17:19 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/24-15:17:19 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 2(Integer)
2020/06/24-15:17:19 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/24-15:17:19 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/24-15:17:19 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/24-15:17:19 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/24-15:17:19 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/24-15:17:19 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/24-15:17:19 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/24-15:17:19 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/24-15:17:19 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/24-15:17:19 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/24-15:17:19 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/24-15:17:19 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 2(Integer)
2020/06/24-15:17:19 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/24-15:17:19 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/24-15:17:19 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/24-15:17:19 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/24-15:17:19 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/24-15:17:19 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/24-15:17:19 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/24-15:17:19 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/24-15:17:19 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 2(Integer)
2020/06/24-15:17:19 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/24-15:17:19 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/24-15:17:19 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/24-15:17:19 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/24-15:17:19 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/24-15:17:19 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/24-15:17:19 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/24-15:17:19 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/24-15:17:19 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 2(Integer)
2020/06/24-15:17:19 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/24-15:17:19 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/24-15:17:19 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/24-15:17:19 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/24-15:17:19 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/24-15:17:19 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/24-15:17:19 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/24-15:17:21 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- ==>  Preparing: select * from sj_order where HospitalID = ? order by OrderDate DESC limit 1; 
2020/06/24-15:17:21 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- ==> Parameters: 901600(String)
2020/06/24-15:17:21 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- <==      Total: 1
2020/06/24-15:17:21 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- ==>  Preparing: select * from sj_orderdetail where OrderNo = ? and GoodsID in ( ? ) 
2020/06/24-15:17:21 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- ==> Parameters: 9016002000038(String), 1(Integer)
2020/06/24-15:17:21 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- <==      Total: 1
2020/06/24-15:17:22 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- ==>  Preparing: select * from sj_secondleavestocklistdetail where HospitalID = ? and GoodsID in ( ? ) and now() >= DATE_SUB(CURDATE(), INTERVAL 12 month) 
2020/06/24-15:17:22 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- ==> Parameters: 901600(String), 1(Integer)
2020/06/24-15:17:22 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- <==      Total: 1
2020/06/24-15:17:22 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==>  Preparing: select * from sj_warehousesecond where GoodsID = ? and HospitalID = ? 
2020/06/24-15:17:22 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==> Parameters: 1(Integer), 901600(String)
2020/06/24-15:17:22 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- <==      Total: 1
2020/06/24-15:17:52 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==>  Preparing: select count(*) from sj_order where YEAR(OrderDate)=YEAR(NOW()); 
2020/06/24-15:17:52 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==>  Preparing: select * from pub_depart where HOSPITALID=? 
2020/06/24-15:17:52 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==> Parameters: 
2020/06/24-15:17:52 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==> Parameters: 901600(String)
2020/06/24-15:17:52 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- <==      Total: 1
2020/06/24-15:17:52 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- <==      Total: 22
2020/06/24-15:17:56 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==>  Preparing: select count(*) from sj_order where YEAR(OrderDate)=YEAR(NOW()); 
2020/06/24-15:17:56 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==> Parameters: 
2020/06/24-15:17:56 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- <==      Total: 1
2020/06/24-15:17:57 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==>  Preparing: select * from pub_depart where HOSPITALID=? 
2020/06/24-15:17:57 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==> Parameters: 901600(String)
2020/06/24-15:17:57 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- <==      Total: 22
2020/06/24-15:18:00 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- ==>  Preparing: select sg.*, su.UnitName from sj_goodsdictionary sg INNER join sj_unit su on GoodsName like concat('%',?,'%') and sg.UnitID = su.UnitID 
2020/06/24-15:18:00 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- ==> Parameters: ip(String)
2020/06/24-15:18:00 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- <==      Total: 1
2020/06/24-15:18:00 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/24-15:18:00 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/24-15:18:00 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/24-15:18:00 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehouse where GoodsID = ?), 0) 
2020/06/24-15:18:00 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==> Parameters: 1(Integer)
2020/06/24-15:18:00 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/24-15:19:38 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-15:20:07 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-15:24:38 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-15:25:07 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-15:27:12 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==>  Preparing: select count(*) from sj_order where YEAR(OrderDate)=YEAR(NOW()); 
2020/06/24-15:27:12 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==> Parameters: 
2020/06/24-15:27:12 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==>  Preparing: select * from pub_depart where HOSPITALID=? 
2020/06/24-15:27:12 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==> Parameters: 901600(String)
2020/06/24-15:27:12 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- <==      Total: 1
2020/06/24-15:27:12 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- <==      Total: 22
2020/06/24-15:27:18 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- ==>  Preparing: select * from sj_order where HospitalID = ? order by OrderDate DESC limit 1; 
2020/06/24-15:27:18 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- ==> Parameters: 901600(String)
2020/06/24-15:27:18 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- <==      Total: 1
2020/06/24-15:27:18 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- ==>  Preparing: select * from sj_orderdetail where OrderNo = ? and GoodsID in ( ? ) 
2020/06/24-15:27:18 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- ==> Parameters: 9016002000038(String), 1(Integer)
2020/06/24-15:27:18 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- <==      Total: 1
2020/06/24-15:27:18 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- ==>  Preparing: select * from sj_secondleavestocklistdetail where HospitalID = ? and GoodsID in ( ? ) and now() >= DATE_SUB(CURDATE(), INTERVAL 12 month) 
2020/06/24-15:27:18 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- ==> Parameters: 901600(String), 1(Integer)
2020/06/24-15:27:18 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- <==      Total: 1
2020/06/24-15:27:50 [main] INFO  com.huijian.rac.RacStockServiceApplication- No active profile set, falling back to default profiles: default
2020/06/24-15:27:51 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Multiple Spring Data modules found, entering strict repository configuration mode!
2020/06/24-15:27:51 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Bootstrapping Spring Data repositories in DEFAULT mode.
2020/06/24-15:27:51 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Finished Spring Data repository scanning in 23ms. Found 0 repository interfaces.
2020/06/24-15:27:51 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'deliveryUnitMapper' and 'com.huijian.rac.mapper.DeliveryUnitMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-15:27:51 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'departMapper' and 'com.huijian.rac.mapper.DepartMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-15:27:51 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'discardDetailMapper' and 'com.huijian.rac.mapper.DiscardDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-15:27:51 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'discardMapper' and 'com.huijian.rac.mapper.DiscardMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-15:27:51 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsDictionaryMapper' and 'com.huijian.rac.mapper.GoodsDictionaryMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-15:27:51 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsRecordMapper' and 'com.huijian.rac.mapper.GoodsRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-15:27:51 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsSupplierMapper' and 'com.huijian.rac.mapper.GoodsSupplierMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-15:27:51 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'leaveStockListDetailMapper' and 'com.huijian.rac.mapper.LeaveStockListDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-15:27:51 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'materialMapper' and 'com.huijian.rac.mapper.MaterialMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-15:27:51 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'outboundRecordMapper' and 'com.huijian.rac.mapper.OutboundRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-15:27:51 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'outboundSecondRecordMapper' and 'com.huijian.rac.mapper.OutboundSecondRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-15:27:51 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'reagentMapper' and 'com.huijian.rac.mapper.ReagentMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-15:27:51 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'returnGoodsDetailMapper' and 'com.huijian.rac.mapper.ReturnGoodsDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-15:27:51 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'returnGoodsMapper' and 'com.huijian.rac.mapper.ReturnGoodsMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-15:27:51 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'secondGoodsRecordMapper' and 'com.huijian.rac.mapper.SecondGoodsRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-15:27:51 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'secondLeaveStockListDetailMapper' and 'com.huijian.rac.mapper.SecondLeaveStockListDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-15:27:51 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'unitMapper' and 'com.huijian.rac.mapper.UnitMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-15:27:51 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseMapper' and 'com.huijian.rac.mapper.WarehouseMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-15:27:51 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseRecordMapper' and 'com.huijian.rac.mapper.WarehouseRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-15:27:51 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseSecondMapper' and 'com.huijian.rac.mapper.WarehouseSecondMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-15:27:51 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseSecondRecordMapper' and 'com.huijian.rac.mapper.WarehouseSecondRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-15:27:51 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'departsMapper' and 'com.huijian.rac.mapper.DepartsMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-15:27:51 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsPackageDetailMapper' and 'com.huijian.rac.mapper.GoodsPackageDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-15:27:51 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsPackageMapper' and 'com.huijian.rac.mapper.GoodsPackageMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-15:27:51 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'hospitalMapper' and 'com.huijian.rac.mapper.HospitalMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-15:27:51 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'leaveStockListSecondMapper' and 'com.huijian.rac.mapper.LeaveStockListSecondMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-15:27:51 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderDetailMapper' and 'com.huijian.rac.mapper.OrderDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-15:27:51 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderMapper' and 'com.huijian.rac.mapper.OrderMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-15:27:51 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderOperateMapper' and 'com.huijian.rac.mapper.OrderOperateMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-15:27:51 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderReviewMapper' and 'com.huijian.rac.mapper.OrderReviewMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-15:27:51 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- No MyBatis mapper was found in '[com.huijian.rac.mapper]' package. Please check your configuration.
2020/06/24-15:27:51 [main] INFO  org.springframework.cloud.context.scope.GenericScope- BeanFactory id=67a76e45-faee-37d4-bfd4-e136a0fefe86
2020/06/24-15:27:51 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/24-15:27:51 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'redisConfig' of type [com.huijian.rac.config.RedisConfig$$EnhancerBySpringCGLIB$$22bb7e06] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/24-15:27:51 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/24-15:27:52 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat initialized with port(s): 8083 (http)
2020/06/24-15:27:52 [main] INFO  org.apache.catalina.core.StandardService- Starting service [Tomcat]
2020/06/24-15:27:52 [main] INFO  org.apache.catalina.core.StandardEngine- Starting Servlet engine: [Apache Tomcat/9.0.27]
2020/06/24-15:27:52 [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]- Initializing Spring embedded WebApplicationContext
2020/06/24-15:27:52 [main] INFO  org.springframework.web.context.ContextLoader- Root WebApplicationContext: initialization completed in 1685 ms
2020/06/24-15:27:53 [main] INFO  com.huijian.rac.RacOrderServiceApplication- No active profile set, falling back to default profiles: default
2020/06/24-15:27:53 [main] WARN  com.netflix.config.sources.URLConfigurationSource- No URLs will be polled as dynamic configuration sources.
2020/06/24-15:27:53 [main] INFO  com.netflix.config.sources.URLConfigurationSource- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020/06/24-15:27:53 [main] WARN  com.netflix.config.sources.URLConfigurationSource- No URLs will be polled as dynamic configuration sources.
2020/06/24-15:27:53 [main] INFO  com.netflix.config.sources.URLConfigurationSource- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020/06/24-15:27:53 [main] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor- Initializing ExecutorService 'applicationTaskExecutor'
2020/06/24-15:27:53 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Multiple Spring Data modules found, entering strict repository configuration mode!
2020/06/24-15:27:53 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020/06/24-15:27:53 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Finished Spring Data repository scanning in 14ms. Found 0 Redis repository interfaces.
2020/06/24-15:27:53 [main] INFO  org.springframework.cloud.context.scope.GenericScope- BeanFactory id=f9e752be-742c-3d90-a32c-086a87b39fc6
2020/06/24-15:27:53 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/24-15:27:53 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/24-15:27:54 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat initialized with port(s): 8084 (http)
2020/06/24-15:27:54 [main] INFO  org.apache.catalina.core.StandardService- Starting service [Tomcat]
2020/06/24-15:27:54 [main] INFO  org.apache.catalina.core.StandardEngine- Starting Servlet engine: [Apache Tomcat/9.0.29]
2020/06/24-15:27:54 [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]- Initializing Spring embedded WebApplicationContext
2020/06/24-15:27:54 [main] INFO  org.springframework.web.context.ContextLoader- Root WebApplicationContext: initialization completed in 1105 ms
2020/06/24-15:27:54 [main] WARN  org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger- You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020/06/24-15:27:54 [main] WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger- Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020/06/24-15:27:54 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory- Setting initial instance status as: STARTING
2020/06/24-15:27:54 [main] WARN  com.netflix.config.sources.URLConfigurationSource- No URLs will be polled as dynamic configuration sources.
2020/06/24-15:27:54 [main] INFO  com.netflix.config.sources.URLConfigurationSource- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020/06/24-15:27:54 [main] WARN  com.netflix.config.sources.URLConfigurationSource- No URLs will be polled as dynamic configuration sources.
2020/06/24-15:27:54 [main] INFO  com.netflix.config.sources.URLConfigurationSource- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020/06/24-15:27:54 [main] INFO  com.netflix.discovery.DiscoveryClient- Initializing Eureka in region us-east-1
2020/06/24-15:27:54 [main] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor- Initializing ExecutorService 'applicationTaskExecutor'
2020/06/24-15:27:55 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using JSON encoding codec LegacyJacksonJson
2020/06/24-15:27:55 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using JSON decoding codec LegacyJacksonJson
2020/06/24-15:27:55 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using XML encoding codec XStreamXml
2020/06/24-15:27:55 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using XML decoding codec XStreamXml
2020/06/24-15:27:55 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-15:27:55 [main] INFO  com.netflix.discovery.DiscoveryClient- Disable delta property : false
2020/06/24-15:27:55 [main] INFO  com.netflix.discovery.DiscoveryClient- Single vip registry refresh property : null
2020/06/24-15:27:55 [main] INFO  com.netflix.discovery.DiscoveryClient- Force full registry fetch : false
2020/06/24-15:27:55 [main] INFO  com.netflix.discovery.DiscoveryClient- Application is null : false
2020/06/24-15:27:55 [main] INFO  com.netflix.discovery.DiscoveryClient- Registered Applications size is zero : true
2020/06/24-15:27:55 [main] INFO  com.netflix.discovery.DiscoveryClient- Application version is -1: true
2020/06/24-15:27:55 [main] INFO  com.netflix.discovery.DiscoveryClient- Getting all instance registry info from the eureka server
2020/06/24-15:27:55 [main] INFO  com.netflix.discovery.DiscoveryClient- The response status is 200
2020/06/24-15:27:55 [main] INFO  com.netflix.discovery.DiscoveryClient- Starting heartbeat executor: renew interval is: 30
2020/06/24-15:27:55 [main] INFO  com.netflix.discovery.InstanceInfoReplicator- InstanceInfoReplicator onDemand update allowed rate per min is 4
2020/06/24-15:27:55 [main] INFO  com.netflix.discovery.DiscoveryClient- Discovery Client initialized at timestamp 1592983675693 with initial instances count: 2
2020/06/24-15:27:55 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry- Registering application RAC-STOCK-SERVICE with eureka with status UP
2020/06/24-15:27:55 [main] INFO  com.netflix.discovery.DiscoveryClient- Saw local status change event StatusChangeEvent [timestamp=1592983675696, current=UP, previous=STARTING]
2020/06/24-15:27:55 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-STOCK-SERVICE/MSI.mshome.net:rac-stock-service:8083: registering service...
2020/06/24-15:27:55 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Attempting to connect to: [192.168.161.129:5672]
2020/06/24-15:27:55 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Created new connection: rabbitConnectionFactory#42383cb0:0/SimpleConnection@7d12429 [delegate=amqp://admin@192.168.161.129:5672/, localPort= 53422]
2020/06/24-15:27:55 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-STOCK-SERVICE/MSI.mshome.net:rac-stock-service:8083 - registration status: 204
2020/06/24-15:27:55 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat started on port(s): 8083 (http) with context path ''
2020/06/24-15:27:55 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration- Updating port to 8083
2020/06/24-15:27:56 [main] INFO  com.huijian.rac.RacStockServiceApplication- Started RacStockServiceApplication in 6.713 seconds (JVM running for 7.411)
2020/06/24-15:27:56 [main] WARN  org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger- You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020/06/24-15:27:56 [main] WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger- Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020/06/24-15:27:56 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory- Setting initial instance status as: STARTING
2020/06/24-15:27:56 [main] INFO  com.netflix.discovery.DiscoveryClient- Initializing Eureka in region us-east-1
2020/06/24-15:27:56 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using JSON encoding codec LegacyJacksonJson
2020/06/24-15:27:56 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using JSON decoding codec LegacyJacksonJson
2020/06/24-15:27:56 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using XML encoding codec XStreamXml
2020/06/24-15:27:56 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using XML decoding codec XStreamXml
2020/06/24-15:27:57 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-15:27:57 [main] INFO  com.netflix.discovery.DiscoveryClient- Disable delta property : false
2020/06/24-15:27:57 [main] INFO  com.netflix.discovery.DiscoveryClient- Single vip registry refresh property : null
2020/06/24-15:27:57 [main] INFO  com.netflix.discovery.DiscoveryClient- Force full registry fetch : false
2020/06/24-15:27:57 [main] INFO  com.netflix.discovery.DiscoveryClient- Application is null : false
2020/06/24-15:27:57 [main] INFO  com.netflix.discovery.DiscoveryClient- Registered Applications size is zero : true
2020/06/24-15:27:57 [main] INFO  com.netflix.discovery.DiscoveryClient- Application version is -1: true
2020/06/24-15:27:57 [main] INFO  com.netflix.discovery.DiscoveryClient- Getting all instance registry info from the eureka server
2020/06/24-15:27:57 [main] INFO  com.netflix.discovery.DiscoveryClient- The response status is 200
2020/06/24-15:27:57 [main] INFO  com.netflix.discovery.DiscoveryClient- Starting heartbeat executor: renew interval is: 30
2020/06/24-15:27:57 [main] INFO  com.netflix.discovery.InstanceInfoReplicator- InstanceInfoReplicator onDemand update allowed rate per min is 4
2020/06/24-15:27:57 [main] INFO  com.netflix.discovery.DiscoveryClient- Discovery Client initialized at timestamp 1592983677277 with initial instances count: 2
2020/06/24-15:27:57 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry- Registering application RAC-ORDER-SERVICE with eureka with status UP
2020/06/24-15:27:57 [main] INFO  com.netflix.discovery.DiscoveryClient- Saw local status change event StatusChangeEvent [timestamp=1592983677279, current=UP, previous=STARTING]
2020/06/24-15:27:57 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-ORDER-SERVICE/MSI.mshome.net:rac-order-service:8084: registering service...
2020/06/24-15:27:57 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Attempting to connect to: [192.168.161.129:5672]
2020/06/24-15:27:57 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Created new connection: rabbitConnectionFactory#75ae4a1f:0/SimpleConnection@be6d228 [delegate=amqp://admin@192.168.161.129:5672/, localPort= 53433]
2020/06/24-15:27:57 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-ORDER-SERVICE/MSI.mshome.net:rac-order-service:8084 - registration status: 204
2020/06/24-15:27:57 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat started on port(s): 8084 (http) with context path ''
2020/06/24-15:27:57 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration- Updating port to 8084
2020/06/24-15:27:57 [main] INFO  com.huijian.rac.RacOrderServiceApplication- Started RacOrderServiceApplication in 5.728 seconds (JVM running for 6.539)
2020/06/24-15:28:25 [http-nio-8084-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]- Initializing Spring DispatcherServlet 'dispatcherServlet'
2020/06/24-15:28:25 [http-nio-8084-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet- Initializing Servlet 'dispatcherServlet'
2020/06/24-15:28:25 [http-nio-8084-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet- Completed initialization in 7 ms
2020/06/24-15:28:26 [http-nio-8084-exec-4] INFO  com.zaxxer.hikari.HikariDataSource- HikariPool-1 - Starting...
2020/06/24-15:28:26 [http-nio-8084-exec-4] INFO  com.zaxxer.hikari.HikariDataSource- HikariPool-1 - Start completed.
2020/06/24-15:28:26 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==>  Preparing: select * from pub_depart where HOSPITALID=? 
2020/06/24-15:28:26 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==> Parameters: 901600(String)
2020/06/24-15:28:26 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==>  Preparing: SELECT * from sj_order where OrderNo like concat('%',?,'%') and OrderDate >= ? and OrderDate < ? and OrderState != 0 order by OrderDate desc limit ?, ? 
2020/06/24-15:28:26 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-24 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/24-15:28:26 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- <==      Total: 0
2020/06/24-15:28:26 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- <==      Total: 22
2020/06/24-15:28:32 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==>  Preparing: select count(*) from sj_order where YEAR(OrderDate)=YEAR(NOW()); 
2020/06/24-15:28:32 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==> Parameters: 
2020/06/24-15:28:32 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- <==      Total: 1
2020/06/24-15:28:33 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==>  Preparing: select * from pub_depart where HOSPITALID=? 
2020/06/24-15:28:33 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==> Parameters: 901600(String)
2020/06/24-15:28:33 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- <==      Total: 22
2020/06/24-15:28:33 [http-nio-8083-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]- Initializing Spring DispatcherServlet 'dispatcherServlet'
2020/06/24-15:28:33 [http-nio-8083-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet- Initializing Servlet 'dispatcherServlet'
2020/06/24-15:28:33 [http-nio-8083-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet- Completed initialization in 4 ms
2020/06/24-15:28:34 [http-nio-8083-exec-3] INFO  io.lettuce.core.EpollProvider- Starting without optional epoll library
2020/06/24-15:28:34 [http-nio-8083-exec-3] INFO  io.lettuce.core.KqueueProvider- Starting without optional kqueue library
2020/06/24-15:28:40 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- ==>  Preparing: select * from sj_order where HospitalID = ? order by OrderDate DESC limit 1; 
2020/06/24-15:28:40 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- ==> Parameters: 901600(String)
2020/06/24-15:28:40 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- <==      Total: 1
2020/06/24-15:28:40 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- ==>  Preparing: select * from sj_orderdetail where OrderNo = ? and GoodsID in ( ? ) 
2020/06/24-15:28:40 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- ==> Parameters: 9016002000038(String), 1(Integer)
2020/06/24-15:28:40 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- <==      Total: 1
2020/06/24-15:28:40 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- ==>  Preparing: select * from sj_secondleavestocklistdetail where HospitalID = ? and GoodsID in ( ? ) and now() >= DATE_SUB(CURDATE(), INTERVAL 12 month) 
2020/06/24-15:28:40 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- ==> Parameters: 901600(String), 1(Integer)
2020/06/24-15:28:40 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- <==      Total: 1
2020/06/24-15:28:41 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==>  Preparing: select * from sj_warehousesecond where GoodsID = ? and HospitalID = ? 
2020/06/24-15:28:41 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==> Parameters: 1(Integer), 901600(String)
2020/06/24-15:28:41 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- <==      Total: 1
2020/06/24-15:31:28 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==>  Preparing: select count(*) from sj_order where YEAR(OrderDate)=YEAR(NOW()); 
2020/06/24-15:31:28 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==> Parameters: 
2020/06/24-15:31:28 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==>  Preparing: select * from pub_depart where HOSPITALID=? 
2020/06/24-15:31:28 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- <==      Total: 1
2020/06/24-15:31:28 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==> Parameters: 901600(String)
2020/06/24-15:31:28 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- <==      Total: 22
2020/06/24-15:31:32 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- ==>  Preparing: select * from sj_order where HospitalID = ? order by OrderDate DESC limit 1; 
2020/06/24-15:31:32 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- ==> Parameters: 901600(String)
2020/06/24-15:31:32 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- <==      Total: 1
2020/06/24-15:31:32 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- ==>  Preparing: select * from sj_orderdetail where OrderNo = ? and GoodsID in ( ? ) 
2020/06/24-15:31:32 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- ==> Parameters: 9016002000038(String), 1(Integer)
2020/06/24-15:31:32 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- <==      Total: 1
2020/06/24-15:31:32 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- ==>  Preparing: select * from sj_secondleavestocklistdetail where HospitalID = ? and GoodsID in ( ? ) and now() >= DATE_SUB(CURDATE(), INTERVAL 12 month) 
2020/06/24-15:31:32 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- ==> Parameters: 901600(String), 1(Integer)
2020/06/24-15:31:32 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- <==      Total: 1
2020/06/24-15:31:32 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==>  Preparing: select * from sj_warehousesecond where GoodsID = ? and HospitalID = ? 
2020/06/24-15:31:32 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==> Parameters: 1(Integer), 901600(String)
2020/06/24-15:31:32 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- <==      Total: 1
2020/06/24-15:32:55 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-15:32:57 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-15:37:55 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-15:37:57 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-15:40:29 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==>  Preparing: select * from pub_depart where HOSPITALID=? 
2020/06/24-15:40:29 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==>  Preparing: select count(*) from sj_order where YEAR(OrderDate)=YEAR(NOW()); 
2020/06/24-15:40:29 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==> Parameters: 901600(String)
2020/06/24-15:40:29 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==> Parameters: 
2020/06/24-15:40:29 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- <==      Total: 1
2020/06/24-15:40:29 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- <==      Total: 22
2020/06/24-15:40:34 [http-nio-8083-exec-6] INFO  com.zaxxer.hikari.HikariDataSource- HikariPool-1 - Starting...
2020/06/24-15:40:34 [http-nio-8083-exec-6] INFO  com.zaxxer.hikari.HikariDataSource- HikariPool-1 - Start completed.
2020/06/24-15:40:34 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- ==>  Preparing: select sg.*, su.UnitName from sj_goodsdictionary sg INNER join sj_unit su on GoodsName like concat('%',?,'%') and sg.UnitID = su.UnitID 
2020/06/24-15:40:34 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- ==> Parameters: ip(String)
2020/06/24-15:40:34 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- <==      Total: 1
2020/06/24-15:40:34 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/24-15:40:34 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/24-15:40:34 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/24-15:40:34 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehouse where GoodsID = ?), 0) 
2020/06/24-15:40:34 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==> Parameters: 1(Integer)
2020/06/24-15:40:34 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/24-15:40:54 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==>  Preparing: select count(*) from sj_order where YEAR(OrderDate)=YEAR(NOW()); 
2020/06/24-15:40:54 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==> Parameters: 
2020/06/24-15:40:54 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==>  Preparing: select * from pub_depart where HOSPITALID=? 
2020/06/24-15:40:54 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==> Parameters: 901600(String)
2020/06/24-15:40:54 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- <==      Total: 1
2020/06/24-15:40:54 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- <==      Total: 22
2020/06/24-15:40:54 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.GoodsPackageMapper.inquiryGoodsPackage- ==>  Preparing: select * from sj_package 
2020/06/24-15:40:54 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.GoodsPackageMapper.inquiryGoodsPackage- ==> Parameters: 
2020/06/24-15:40:54 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.GoodsPackageMapper.inquiryGoodsPackage- <==      Total: 2
2020/06/24-15:41:03 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- ==>  Preparing: select * from sj_order where HospitalID = ? order by OrderDate DESC limit 1; 
2020/06/24-15:41:03 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- ==> Parameters: 901600(String)
2020/06/24-15:41:03 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- <==      Total: 1
2020/06/24-15:41:03 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- ==>  Preparing: select * from sj_orderdetail where OrderNo = ? and GoodsID in ( ? ) 
2020/06/24-15:41:03 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- ==> Parameters: 9016002000038(String), 1(Integer)
2020/06/24-15:41:03 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- <==      Total: 1
2020/06/24-15:41:03 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- ==>  Preparing: select * from sj_secondleavestocklistdetail where HospitalID = ? and GoodsID in ( ? ) and now() >= DATE_SUB(CURDATE(), INTERVAL 12 month) 
2020/06/24-15:41:03 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- ==> Parameters: 901600(String), 1(Integer)
2020/06/24-15:41:03 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- <==      Total: 1
2020/06/24-15:41:03 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==>  Preparing: select * from sj_warehousesecond where GoodsID = ? and HospitalID = ? 
2020/06/24-15:41:03 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- ==> Parameters: 1(Integer), 901600(String)
2020/06/24-15:41:03 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryByGoodsID- <==      Total: 1
2020/06/24-15:42:55 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-15:42:57 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-15:47:55 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-15:47:57 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-15:52:55 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-15:52:57 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-15:57:55 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-15:57:57 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-15:58:51 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==>  Preparing: select * from pub_depart where HOSPITALID=? 
2020/06/24-15:58:51 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==>  Preparing: select count(*) from sj_order where YEAR(OrderDate)=YEAR(NOW()); 
2020/06/24-15:58:51 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==> Parameters: 901600(String)
2020/06/24-15:58:51 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==> Parameters: 
2020/06/24-15:58:51 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- <==      Total: 22
2020/06/24-15:58:51 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- <==      Total: 1
2020/06/24-15:58:54 [http-nio-8083-exec-10] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- ==>  Preparing: select sg.*, su.UnitName from sj_goodsdictionary sg INNER join sj_unit su on GoodsName like concat('%',?,'%') and sg.UnitID = su.UnitID 
2020/06/24-15:58:54 [http-nio-8083-exec-10] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- ==> Parameters: ip(String)
2020/06/24-15:58:54 [http-nio-8083-exec-10] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- <==      Total: 1
2020/06/24-15:58:54 [http-nio-8083-exec-10] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/24-15:58:54 [http-nio-8083-exec-10] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/24-15:58:54 [http-nio-8083-exec-10] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/24-15:58:54 [http-nio-8083-exec-10] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehouse where GoodsID = ?), 0) 
2020/06/24-15:58:54 [http-nio-8083-exec-10] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==> Parameters: 1(Integer)
2020/06/24-15:58:54 [http-nio-8083-exec-10] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/24-15:59:17 [main] INFO  com.huijian.rac.RacStockServiceApplication- No active profile set, falling back to default profiles: default
2020/06/24-15:59:18 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Multiple Spring Data modules found, entering strict repository configuration mode!
2020/06/24-15:59:18 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Bootstrapping Spring Data repositories in DEFAULT mode.
2020/06/24-15:59:18 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Finished Spring Data repository scanning in 25ms. Found 0 repository interfaces.
2020/06/24-15:59:18 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'deliveryUnitMapper' and 'com.huijian.rac.mapper.DeliveryUnitMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-15:59:18 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'departMapper' and 'com.huijian.rac.mapper.DepartMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-15:59:18 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'discardDetailMapper' and 'com.huijian.rac.mapper.DiscardDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-15:59:18 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'discardMapper' and 'com.huijian.rac.mapper.DiscardMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-15:59:18 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsDictionaryMapper' and 'com.huijian.rac.mapper.GoodsDictionaryMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-15:59:18 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsRecordMapper' and 'com.huijian.rac.mapper.GoodsRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-15:59:18 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsSupplierMapper' and 'com.huijian.rac.mapper.GoodsSupplierMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-15:59:18 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'leaveStockListDetailMapper' and 'com.huijian.rac.mapper.LeaveStockListDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-15:59:18 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'materialMapper' and 'com.huijian.rac.mapper.MaterialMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-15:59:18 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'outboundRecordMapper' and 'com.huijian.rac.mapper.OutboundRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-15:59:18 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'outboundSecondRecordMapper' and 'com.huijian.rac.mapper.OutboundSecondRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-15:59:18 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'reagentMapper' and 'com.huijian.rac.mapper.ReagentMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-15:59:18 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'returnGoodsDetailMapper' and 'com.huijian.rac.mapper.ReturnGoodsDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-15:59:18 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'returnGoodsMapper' and 'com.huijian.rac.mapper.ReturnGoodsMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-15:59:18 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'secondGoodsRecordMapper' and 'com.huijian.rac.mapper.SecondGoodsRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-15:59:18 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'secondLeaveStockListDetailMapper' and 'com.huijian.rac.mapper.SecondLeaveStockListDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-15:59:18 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'unitMapper' and 'com.huijian.rac.mapper.UnitMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-15:59:18 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseMapper' and 'com.huijian.rac.mapper.WarehouseMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-15:59:18 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseRecordMapper' and 'com.huijian.rac.mapper.WarehouseRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-15:59:18 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseSecondMapper' and 'com.huijian.rac.mapper.WarehouseSecondMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-15:59:18 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseSecondRecordMapper' and 'com.huijian.rac.mapper.WarehouseSecondRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-15:59:18 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'departsMapper' and 'com.huijian.rac.mapper.DepartsMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-15:59:18 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsPackageDetailMapper' and 'com.huijian.rac.mapper.GoodsPackageDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-15:59:18 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsPackageMapper' and 'com.huijian.rac.mapper.GoodsPackageMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-15:59:18 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'hospitalMapper' and 'com.huijian.rac.mapper.HospitalMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-15:59:18 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'leaveStockListSecondMapper' and 'com.huijian.rac.mapper.LeaveStockListSecondMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-15:59:18 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderDetailMapper' and 'com.huijian.rac.mapper.OrderDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-15:59:18 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderMapper' and 'com.huijian.rac.mapper.OrderMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-15:59:18 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderOperateMapper' and 'com.huijian.rac.mapper.OrderOperateMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-15:59:18 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderReviewMapper' and 'com.huijian.rac.mapper.OrderReviewMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-15:59:18 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- No MyBatis mapper was found in '[com.huijian.rac.mapper]' package. Please check your configuration.
2020/06/24-15:59:18 [main] INFO  org.springframework.cloud.context.scope.GenericScope- BeanFactory id=67a76e45-faee-37d4-bfd4-e136a0fefe86
2020/06/24-15:59:18 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/24-15:59:18 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'redisConfig' of type [com.huijian.rac.config.RedisConfig$$EnhancerBySpringCGLIB$$5c49c1c5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/24-15:59:18 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/24-15:59:18 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat initialized with port(s): 8083 (http)
2020/06/24-15:59:18 [main] INFO  org.apache.catalina.core.StandardService- Starting service [Tomcat]
2020/06/24-15:59:18 [main] INFO  org.apache.catalina.core.StandardEngine- Starting Servlet engine: [Apache Tomcat/9.0.27]
2020/06/24-15:59:19 [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]- Initializing Spring embedded WebApplicationContext
2020/06/24-15:59:19 [main] INFO  org.springframework.web.context.ContextLoader- Root WebApplicationContext: initialization completed in 1535 ms
2020/06/24-15:59:20 [main] WARN  com.netflix.config.sources.URLConfigurationSource- No URLs will be polled as dynamic configuration sources.
2020/06/24-15:59:20 [main] INFO  com.netflix.config.sources.URLConfigurationSource- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020/06/24-15:59:20 [main] WARN  com.netflix.config.sources.URLConfigurationSource- No URLs will be polled as dynamic configuration sources.
2020/06/24-15:59:20 [main] INFO  com.netflix.config.sources.URLConfigurationSource- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020/06/24-15:59:20 [main] INFO  com.huijian.rac.RacOrderServiceApplication- No active profile set, falling back to default profiles: default
2020/06/24-15:59:20 [main] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor- Initializing ExecutorService 'applicationTaskExecutor'
2020/06/24-15:59:20 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Multiple Spring Data modules found, entering strict repository configuration mode!
2020/06/24-15:59:20 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020/06/24-15:59:20 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Finished Spring Data repository scanning in 14ms. Found 0 Redis repository interfaces.
2020/06/24-15:59:21 [main] INFO  org.springframework.cloud.context.scope.GenericScope- BeanFactory id=f9e752be-742c-3d90-a32c-086a87b39fc6
2020/06/24-15:59:21 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/24-15:59:21 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/24-15:59:21 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat initialized with port(s): 8084 (http)
2020/06/24-15:59:21 [main] INFO  org.apache.catalina.core.StandardService- Starting service [Tomcat]
2020/06/24-15:59:21 [main] INFO  org.apache.catalina.core.StandardEngine- Starting Servlet engine: [Apache Tomcat/9.0.29]
2020/06/24-15:59:21 [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]- Initializing Spring embedded WebApplicationContext
2020/06/24-15:59:21 [main] INFO  org.springframework.web.context.ContextLoader- Root WebApplicationContext: initialization completed in 1090 ms
2020/06/24-15:59:21 [main] WARN  org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger- You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020/06/24-15:59:21 [main] WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger- Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020/06/24-15:59:21 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory- Setting initial instance status as: STARTING
2020/06/24-15:59:21 [main] INFO  com.netflix.discovery.DiscoveryClient- Initializing Eureka in region us-east-1
2020/06/24-15:59:22 [main] WARN  com.netflix.config.sources.URLConfigurationSource- No URLs will be polled as dynamic configuration sources.
2020/06/24-15:59:22 [main] INFO  com.netflix.config.sources.URLConfigurationSource- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020/06/24-15:59:22 [main] WARN  com.netflix.config.sources.URLConfigurationSource- No URLs will be polled as dynamic configuration sources.
2020/06/24-15:59:22 [main] INFO  com.netflix.config.sources.URLConfigurationSource- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020/06/24-15:59:22 [main] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor- Initializing ExecutorService 'applicationTaskExecutor'
2020/06/24-15:59:22 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using JSON encoding codec LegacyJacksonJson
2020/06/24-15:59:22 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using JSON decoding codec LegacyJacksonJson
2020/06/24-15:59:22 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using XML encoding codec XStreamXml
2020/06/24-15:59:22 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using XML decoding codec XStreamXml
2020/06/24-15:59:22 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-15:59:22 [main] INFO  com.netflix.discovery.DiscoveryClient- Disable delta property : false
2020/06/24-15:59:22 [main] INFO  com.netflix.discovery.DiscoveryClient- Single vip registry refresh property : null
2020/06/24-15:59:22 [main] INFO  com.netflix.discovery.DiscoveryClient- Force full registry fetch : false
2020/06/24-15:59:22 [main] INFO  com.netflix.discovery.DiscoveryClient- Application is null : false
2020/06/24-15:59:22 [main] INFO  com.netflix.discovery.DiscoveryClient- Registered Applications size is zero : true
2020/06/24-15:59:22 [main] INFO  com.netflix.discovery.DiscoveryClient- Application version is -1: true
2020/06/24-15:59:22 [main] INFO  com.netflix.discovery.DiscoveryClient- Getting all instance registry info from the eureka server
2020/06/24-15:59:23 [main] INFO  com.netflix.discovery.DiscoveryClient- The response status is 200
2020/06/24-15:59:23 [main] INFO  com.netflix.discovery.DiscoveryClient- Starting heartbeat executor: renew interval is: 30
2020/06/24-15:59:23 [main] INFO  com.netflix.discovery.InstanceInfoReplicator- InstanceInfoReplicator onDemand update allowed rate per min is 4
2020/06/24-15:59:23 [main] INFO  com.netflix.discovery.DiscoveryClient- Discovery Client initialized at timestamp 1592985563063 with initial instances count: 2
2020/06/24-15:59:23 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry- Registering application RAC-STOCK-SERVICE with eureka with status UP
2020/06/24-15:59:23 [main] INFO  com.netflix.discovery.DiscoveryClient- Saw local status change event StatusChangeEvent [timestamp=1592985563066, current=UP, previous=STARTING]
2020/06/24-15:59:23 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-STOCK-SERVICE/MSI.mshome.net:rac-stock-service:8083: registering service...
2020/06/24-15:59:23 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Attempting to connect to: [192.168.161.129:5672]
2020/06/24-15:59:23 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Created new connection: rabbitConnectionFactory#56dd6efa:0/SimpleConnection@425b5fe2 [delegate=amqp://admin@192.168.161.129:5672/, localPort= 55513]
2020/06/24-15:59:23 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-STOCK-SERVICE/MSI.mshome.net:rac-stock-service:8083 - registration status: 204
2020/06/24-15:59:23 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat started on port(s): 8083 (http) with context path ''
2020/06/24-15:59:23 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration- Updating port to 8083
2020/06/24-15:59:23 [main] INFO  com.huijian.rac.RacStockServiceApplication- Started RacStockServiceApplication in 7.088 seconds (JVM running for 7.804)
2020/06/24-15:59:23 [main] WARN  org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger- You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020/06/24-15:59:23 [main] WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger- Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020/06/24-15:59:23 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory- Setting initial instance status as: STARTING
2020/06/24-15:59:24 [main] INFO  com.netflix.discovery.DiscoveryClient- Initializing Eureka in region us-east-1
2020/06/24-15:59:24 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using JSON encoding codec LegacyJacksonJson
2020/06/24-15:59:24 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using JSON decoding codec LegacyJacksonJson
2020/06/24-15:59:24 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using XML encoding codec XStreamXml
2020/06/24-15:59:24 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using XML decoding codec XStreamXml
2020/06/24-15:59:24 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-15:59:24 [main] INFO  com.netflix.discovery.DiscoveryClient- Disable delta property : false
2020/06/24-15:59:24 [main] INFO  com.netflix.discovery.DiscoveryClient- Single vip registry refresh property : null
2020/06/24-15:59:24 [main] INFO  com.netflix.discovery.DiscoveryClient- Force full registry fetch : false
2020/06/24-15:59:24 [main] INFO  com.netflix.discovery.DiscoveryClient- Application is null : false
2020/06/24-15:59:24 [main] INFO  com.netflix.discovery.DiscoveryClient- Registered Applications size is zero : true
2020/06/24-15:59:24 [main] INFO  com.netflix.discovery.DiscoveryClient- Application version is -1: true
2020/06/24-15:59:24 [main] INFO  com.netflix.discovery.DiscoveryClient- Getting all instance registry info from the eureka server
2020/06/24-15:59:24 [main] INFO  com.netflix.discovery.DiscoveryClient- The response status is 200
2020/06/24-15:59:24 [main] INFO  com.netflix.discovery.DiscoveryClient- Starting heartbeat executor: renew interval is: 30
2020/06/24-15:59:24 [main] INFO  com.netflix.discovery.InstanceInfoReplicator- InstanceInfoReplicator onDemand update allowed rate per min is 4
2020/06/24-15:59:24 [main] INFO  com.netflix.discovery.DiscoveryClient- Discovery Client initialized at timestamp 1592985564878 with initial instances count: 2
2020/06/24-15:59:24 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry- Registering application RAC-ORDER-SERVICE with eureka with status UP
2020/06/24-15:59:24 [main] INFO  com.netflix.discovery.DiscoveryClient- Saw local status change event StatusChangeEvent [timestamp=1592985564880, current=UP, previous=STARTING]
2020/06/24-15:59:24 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-ORDER-SERVICE/MSI.mshome.net:rac-order-service:8084: registering service...
2020/06/24-15:59:24 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Attempting to connect to: [192.168.161.129:5672]
2020/06/24-15:59:24 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Created new connection: rabbitConnectionFactory#80bfdc6:0/SimpleConnection@340c5fb6 [delegate=amqp://admin@192.168.161.129:5672/, localPort= 55523]
2020/06/24-15:59:24 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-ORDER-SERVICE/MSI.mshome.net:rac-order-service:8084 - registration status: 204
2020/06/24-15:59:24 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat started on port(s): 8084 (http) with context path ''
2020/06/24-15:59:24 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration- Updating port to 8084
2020/06/24-15:59:25 [main] INFO  com.huijian.rac.RacOrderServiceApplication- Started RacOrderServiceApplication in 6.085 seconds (JVM running for 6.882)
2020/06/24-16:04:22 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-16:04:24 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-16:09:22 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-16:09:24 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-16:11:06 [main] INFO  com.huijian.rac.RacStockServiceApplication- No active profile set, falling back to default profiles: default
2020/06/24-16:11:06 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Multiple Spring Data modules found, entering strict repository configuration mode!
2020/06/24-16:11:06 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Bootstrapping Spring Data repositories in DEFAULT mode.
2020/06/24-16:11:06 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Finished Spring Data repository scanning in 20ms. Found 0 repository interfaces.
2020/06/24-16:11:07 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'deliveryUnitMapper' and 'com.huijian.rac.mapper.DeliveryUnitMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:11:07 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'departMapper' and 'com.huijian.rac.mapper.DepartMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:11:07 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'discardDetailMapper' and 'com.huijian.rac.mapper.DiscardDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:11:07 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'discardMapper' and 'com.huijian.rac.mapper.DiscardMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:11:07 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsDictionaryMapper' and 'com.huijian.rac.mapper.GoodsDictionaryMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:11:07 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsRecordMapper' and 'com.huijian.rac.mapper.GoodsRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:11:07 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsSupplierMapper' and 'com.huijian.rac.mapper.GoodsSupplierMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:11:07 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'leaveStockListDetailMapper' and 'com.huijian.rac.mapper.LeaveStockListDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:11:07 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'materialMapper' and 'com.huijian.rac.mapper.MaterialMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:11:07 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'outboundRecordMapper' and 'com.huijian.rac.mapper.OutboundRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:11:07 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'outboundSecondRecordMapper' and 'com.huijian.rac.mapper.OutboundSecondRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:11:07 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'reagentMapper' and 'com.huijian.rac.mapper.ReagentMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:11:07 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'returnGoodsDetailMapper' and 'com.huijian.rac.mapper.ReturnGoodsDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:11:07 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'returnGoodsMapper' and 'com.huijian.rac.mapper.ReturnGoodsMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:11:07 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'secondGoodsRecordMapper' and 'com.huijian.rac.mapper.SecondGoodsRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:11:07 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'secondLeaveStockListDetailMapper' and 'com.huijian.rac.mapper.SecondLeaveStockListDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:11:07 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'unitMapper' and 'com.huijian.rac.mapper.UnitMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:11:07 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseMapper' and 'com.huijian.rac.mapper.WarehouseMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:11:07 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseRecordMapper' and 'com.huijian.rac.mapper.WarehouseRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:11:07 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseSecondMapper' and 'com.huijian.rac.mapper.WarehouseSecondMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:11:07 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseSecondRecordMapper' and 'com.huijian.rac.mapper.WarehouseSecondRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:11:07 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'departsMapper' and 'com.huijian.rac.mapper.DepartsMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:11:07 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsPackageDetailMapper' and 'com.huijian.rac.mapper.GoodsPackageDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:11:07 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsPackageMapper' and 'com.huijian.rac.mapper.GoodsPackageMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:11:07 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'hospitalMapper' and 'com.huijian.rac.mapper.HospitalMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:11:07 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'leaveStockListSecondMapper' and 'com.huijian.rac.mapper.LeaveStockListSecondMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:11:07 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderDetailMapper' and 'com.huijian.rac.mapper.OrderDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:11:07 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderMapper' and 'com.huijian.rac.mapper.OrderMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:11:07 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderOperateMapper' and 'com.huijian.rac.mapper.OrderOperateMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:11:07 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderReviewMapper' and 'com.huijian.rac.mapper.OrderReviewMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:11:07 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- No MyBatis mapper was found in '[com.huijian.rac.mapper]' package. Please check your configuration.
2020/06/24-16:11:07 [main] INFO  org.springframework.cloud.context.scope.GenericScope- BeanFactory id=67a76e45-faee-37d4-bfd4-e136a0fefe86
2020/06/24-16:11:07 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/24-16:11:07 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'redisConfig' of type [com.huijian.rac.config.RedisConfig$$EnhancerBySpringCGLIB$$a89de853] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/24-16:11:07 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/24-16:11:07 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat initialized with port(s): 8083 (http)
2020/06/24-16:11:07 [main] INFO  org.apache.catalina.core.StandardService- Starting service [Tomcat]
2020/06/24-16:11:07 [main] INFO  org.apache.catalina.core.StandardEngine- Starting Servlet engine: [Apache Tomcat/9.0.27]
2020/06/24-16:11:07 [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]- Initializing Spring embedded WebApplicationContext
2020/06/24-16:11:07 [main] INFO  org.springframework.web.context.ContextLoader- Root WebApplicationContext: initialization completed in 1292 ms
2020/06/24-16:11:08 [main] WARN  com.netflix.config.sources.URLConfigurationSource- No URLs will be polled as dynamic configuration sources.
2020/06/24-16:11:08 [main] INFO  com.netflix.config.sources.URLConfigurationSource- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020/06/24-16:11:08 [main] WARN  com.netflix.config.sources.URLConfigurationSource- No URLs will be polled as dynamic configuration sources.
2020/06/24-16:11:08 [main] INFO  com.netflix.config.sources.URLConfigurationSource- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020/06/24-16:11:08 [main] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor- Initializing ExecutorService 'applicationTaskExecutor'
2020/06/24-16:11:09 [main] WARN  org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger- You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020/06/24-16:11:09 [main] WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger- Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020/06/24-16:11:09 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory- Setting initial instance status as: STARTING
2020/06/24-16:11:09 [main] INFO  com.netflix.discovery.DiscoveryClient- Initializing Eureka in region us-east-1
2020/06/24-16:11:10 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using JSON encoding codec LegacyJacksonJson
2020/06/24-16:11:10 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using JSON decoding codec LegacyJacksonJson
2020/06/24-16:11:10 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using XML encoding codec XStreamXml
2020/06/24-16:11:10 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using XML decoding codec XStreamXml
2020/06/24-16:11:10 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-16:11:10 [main] INFO  com.netflix.discovery.DiscoveryClient- Disable delta property : false
2020/06/24-16:11:10 [main] INFO  com.netflix.discovery.DiscoveryClient- Single vip registry refresh property : null
2020/06/24-16:11:10 [main] INFO  com.netflix.discovery.DiscoveryClient- Force full registry fetch : false
2020/06/24-16:11:10 [main] INFO  com.netflix.discovery.DiscoveryClient- Application is null : false
2020/06/24-16:11:10 [main] INFO  com.netflix.discovery.DiscoveryClient- Registered Applications size is zero : true
2020/06/24-16:11:10 [main] INFO  com.netflix.discovery.DiscoveryClient- Application version is -1: true
2020/06/24-16:11:10 [main] INFO  com.netflix.discovery.DiscoveryClient- Getting all instance registry info from the eureka server
2020/06/24-16:11:10 [main] INFO  com.netflix.discovery.DiscoveryClient- The response status is 200
2020/06/24-16:11:10 [main] INFO  com.netflix.discovery.DiscoveryClient- Starting heartbeat executor: renew interval is: 30
2020/06/24-16:11:10 [main] INFO  com.netflix.discovery.InstanceInfoReplicator- InstanceInfoReplicator onDemand update allowed rate per min is 4
2020/06/24-16:11:10 [main] INFO  com.netflix.discovery.DiscoveryClient- Discovery Client initialized at timestamp 1592986270605 with initial instances count: 2
2020/06/24-16:11:10 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry- Registering application RAC-STOCK-SERVICE with eureka with status UP
2020/06/24-16:11:10 [main] INFO  com.netflix.discovery.DiscoveryClient- Saw local status change event StatusChangeEvent [timestamp=1592986270608, current=UP, previous=STARTING]
2020/06/24-16:11:10 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-STOCK-SERVICE/MSI.mshome.net:rac-stock-service:8083: registering service...
2020/06/24-16:11:10 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Attempting to connect to: [192.168.161.129:5672]
2020/06/24-16:11:10 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Created new connection: rabbitConnectionFactory#72bdd7c7:0/SimpleConnection@4269aad7 [delegate=amqp://admin@192.168.161.129:5672/, localPort= 56123]
2020/06/24-16:11:10 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-STOCK-SERVICE/MSI.mshome.net:rac-stock-service:8083 - registration status: 204
2020/06/24-16:11:10 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat started on port(s): 8083 (http) with context path ''
2020/06/24-16:11:10 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration- Updating port to 8083
2020/06/24-16:11:10 [main] INFO  com.huijian.rac.RacStockServiceApplication- Started RacStockServiceApplication in 5.778 seconds (JVM running for 6.517)
2020/06/24-16:12:32 [main] INFO  com.huijian.rac.RacStockServiceApplication- No active profile set, falling back to default profiles: default
2020/06/24-16:12:33 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Multiple Spring Data modules found, entering strict repository configuration mode!
2020/06/24-16:12:33 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Bootstrapping Spring Data repositories in DEFAULT mode.
2020/06/24-16:12:33 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Finished Spring Data repository scanning in 20ms. Found 0 repository interfaces.
2020/06/24-16:12:33 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'deliveryUnitMapper' and 'com.huijian.rac.mapper.DeliveryUnitMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:12:33 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'departMapper' and 'com.huijian.rac.mapper.DepartMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:12:33 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'discardDetailMapper' and 'com.huijian.rac.mapper.DiscardDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:12:33 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'discardMapper' and 'com.huijian.rac.mapper.DiscardMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:12:33 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsDictionaryMapper' and 'com.huijian.rac.mapper.GoodsDictionaryMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:12:33 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsRecordMapper' and 'com.huijian.rac.mapper.GoodsRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:12:33 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsSupplierMapper' and 'com.huijian.rac.mapper.GoodsSupplierMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:12:33 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'leaveStockListDetailMapper' and 'com.huijian.rac.mapper.LeaveStockListDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:12:33 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'materialMapper' and 'com.huijian.rac.mapper.MaterialMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:12:33 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'outboundRecordMapper' and 'com.huijian.rac.mapper.OutboundRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:12:33 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'outboundSecondRecordMapper' and 'com.huijian.rac.mapper.OutboundSecondRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:12:33 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'reagentMapper' and 'com.huijian.rac.mapper.ReagentMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:12:33 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'returnGoodsDetailMapper' and 'com.huijian.rac.mapper.ReturnGoodsDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:12:33 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'returnGoodsMapper' and 'com.huijian.rac.mapper.ReturnGoodsMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:12:33 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'secondGoodsRecordMapper' and 'com.huijian.rac.mapper.SecondGoodsRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:12:33 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'secondLeaveStockListDetailMapper' and 'com.huijian.rac.mapper.SecondLeaveStockListDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:12:33 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'unitMapper' and 'com.huijian.rac.mapper.UnitMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:12:33 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseMapper' and 'com.huijian.rac.mapper.WarehouseMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:12:33 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseRecordMapper' and 'com.huijian.rac.mapper.WarehouseRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:12:33 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseSecondMapper' and 'com.huijian.rac.mapper.WarehouseSecondMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:12:33 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseSecondRecordMapper' and 'com.huijian.rac.mapper.WarehouseSecondRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:12:33 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'departsMapper' and 'com.huijian.rac.mapper.DepartsMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:12:33 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsPackageDetailMapper' and 'com.huijian.rac.mapper.GoodsPackageDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:12:33 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsPackageMapper' and 'com.huijian.rac.mapper.GoodsPackageMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:12:33 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'hospitalMapper' and 'com.huijian.rac.mapper.HospitalMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:12:33 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'leaveStockListSecondMapper' and 'com.huijian.rac.mapper.LeaveStockListSecondMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:12:33 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderDetailMapper' and 'com.huijian.rac.mapper.OrderDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:12:33 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderMapper' and 'com.huijian.rac.mapper.OrderMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:12:33 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderOperateMapper' and 'com.huijian.rac.mapper.OrderOperateMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:12:33 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderReviewMapper' and 'com.huijian.rac.mapper.OrderReviewMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:12:33 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- No MyBatis mapper was found in '[com.huijian.rac.mapper]' package. Please check your configuration.
2020/06/24-16:12:33 [main] INFO  org.springframework.cloud.context.scope.GenericScope- BeanFactory id=67a76e45-faee-37d4-bfd4-e136a0fefe86
2020/06/24-16:12:33 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/24-16:12:33 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'redisConfig' of type [com.huijian.rac.config.RedisConfig$$EnhancerBySpringCGLIB$$585c327b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/24-16:12:34 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/24-16:12:34 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat initialized with port(s): 8083 (http)
2020/06/24-16:12:34 [main] INFO  org.apache.catalina.core.StandardService- Starting service [Tomcat]
2020/06/24-16:12:34 [main] INFO  org.apache.catalina.core.StandardEngine- Starting Servlet engine: [Apache Tomcat/9.0.27]
2020/06/24-16:12:34 [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]- Initializing Spring embedded WebApplicationContext
2020/06/24-16:12:34 [main] INFO  org.springframework.web.context.ContextLoader- Root WebApplicationContext: initialization completed in 1288 ms
2020/06/24-16:12:35 [main] WARN  com.netflix.config.sources.URLConfigurationSource- No URLs will be polled as dynamic configuration sources.
2020/06/24-16:12:35 [main] INFO  com.netflix.config.sources.URLConfigurationSource- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020/06/24-16:12:35 [main] WARN  com.netflix.config.sources.URLConfigurationSource- No URLs will be polled as dynamic configuration sources.
2020/06/24-16:12:35 [main] INFO  com.netflix.config.sources.URLConfigurationSource- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020/06/24-16:12:35 [main] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor- Initializing ExecutorService 'applicationTaskExecutor'
2020/06/24-16:12:36 [main] WARN  org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger- You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020/06/24-16:12:36 [main] WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger- Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020/06/24-16:12:36 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory- Setting initial instance status as: STARTING
2020/06/24-16:12:36 [main] INFO  com.netflix.discovery.DiscoveryClient- Initializing Eureka in region us-east-1
2020/06/24-16:12:36 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using JSON encoding codec LegacyJacksonJson
2020/06/24-16:12:36 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using JSON decoding codec LegacyJacksonJson
2020/06/24-16:12:36 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using XML encoding codec XStreamXml
2020/06/24-16:12:36 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using XML decoding codec XStreamXml
2020/06/24-16:12:36 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-16:12:37 [main] INFO  com.netflix.discovery.DiscoveryClient- Disable delta property : false
2020/06/24-16:12:37 [main] INFO  com.netflix.discovery.DiscoveryClient- Single vip registry refresh property : null
2020/06/24-16:12:37 [main] INFO  com.netflix.discovery.DiscoveryClient- Force full registry fetch : false
2020/06/24-16:12:37 [main] INFO  com.netflix.discovery.DiscoveryClient- Application is null : false
2020/06/24-16:12:37 [main] INFO  com.netflix.discovery.DiscoveryClient- Registered Applications size is zero : true
2020/06/24-16:12:37 [main] INFO  com.netflix.discovery.DiscoveryClient- Application version is -1: true
2020/06/24-16:12:37 [main] INFO  com.netflix.discovery.DiscoveryClient- Getting all instance registry info from the eureka server
2020/06/24-16:12:37 [main] INFO  com.netflix.discovery.DiscoveryClient- The response status is 200
2020/06/24-16:12:37 [main] INFO  com.netflix.discovery.DiscoveryClient- Starting heartbeat executor: renew interval is: 30
2020/06/24-16:12:37 [main] INFO  com.netflix.discovery.InstanceInfoReplicator- InstanceInfoReplicator onDemand update allowed rate per min is 4
2020/06/24-16:12:37 [main] INFO  com.netflix.discovery.DiscoveryClient- Discovery Client initialized at timestamp 1592986357185 with initial instances count: 2
2020/06/24-16:12:37 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry- Registering application RAC-STOCK-SERVICE with eureka with status UP
2020/06/24-16:12:37 [main] INFO  com.netflix.discovery.DiscoveryClient- Saw local status change event StatusChangeEvent [timestamp=1592986357188, current=UP, previous=STARTING]
2020/06/24-16:12:37 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-STOCK-SERVICE/MSI.mshome.net:rac-stock-service:8083: registering service...
2020/06/24-16:12:37 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Attempting to connect to: [192.168.161.129:5672]
2020/06/24-16:12:37 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Created new connection: rabbitConnectionFactory#67e25252:0/SimpleConnection@6e364f1f [delegate=amqp://admin@192.168.161.129:5672/, localPort= 56223]
2020/06/24-16:12:37 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-STOCK-SERVICE/MSI.mshome.net:rac-stock-service:8083 - registration status: 204
2020/06/24-16:12:37 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat started on port(s): 8083 (http) with context path ''
2020/06/24-16:12:37 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration- Updating port to 8083
2020/06/24-16:12:37 [main] INFO  com.huijian.rac.RacStockServiceApplication- Started RacStockServiceApplication in 5.707 seconds (JVM running for 6.441)
2020/06/24-16:13:15 [http-nio-8083-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]- Initializing Spring DispatcherServlet 'dispatcherServlet'
2020/06/24-16:13:15 [http-nio-8083-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet- Initializing Servlet 'dispatcherServlet'
2020/06/24-16:13:15 [http-nio-8083-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet- Completed initialization in 5 ms
2020/06/24-16:13:15 [http-nio-8084-exec-2] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]- Initializing Spring DispatcherServlet 'dispatcherServlet'
2020/06/24-16:13:15 [http-nio-8084-exec-2] INFO  org.springframework.web.servlet.DispatcherServlet- Initializing Servlet 'dispatcherServlet'
2020/06/24-16:13:15 [http-nio-8084-exec-2] INFO  org.springframework.web.servlet.DispatcherServlet- Completed initialization in 5 ms
2020/06/24-16:13:15 [http-nio-8084-exec-1] INFO  com.zaxxer.hikari.HikariDataSource- HikariPool-1 - Starting...
2020/06/24-16:13:15 [http-nio-8084-exec-1] INFO  com.zaxxer.hikari.HikariDataSource- HikariPool-1 - Start completed.
2020/06/24-16:13:15 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==>  Preparing: select count(*) from sj_order where YEAR(OrderDate)=YEAR(NOW()); 
2020/06/24-16:13:15 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==> Parameters: 
2020/06/24-16:13:15 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- <==      Total: 1
2020/06/24-16:13:15 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==>  Preparing: select * from pub_depart where HOSPITALID=? 
2020/06/24-16:13:15 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==> Parameters: 901600(String)
2020/06/24-16:13:15 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- <==      Total: 22
2020/06/24-16:13:23 [http-nio-8083-exec-2] INFO  com.zaxxer.hikari.HikariDataSource- HikariPool-1 - Starting...
2020/06/24-16:13:23 [http-nio-8083-exec-2] INFO  com.zaxxer.hikari.HikariDataSource- HikariPool-1 - Start completed.
2020/06/24-16:13:23 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- ==>  Preparing: select sg.*, su.UnitName from sj_goodsdictionary sg INNER join sj_unit su on GoodsName like concat('%',?,'%') and sg.UnitID = su.UnitID 
2020/06/24-16:13:23 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- ==> Parameters: ip(String)
2020/06/24-16:13:23 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- <==      Total: 1
2020/06/24-16:13:23 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/24-16:13:23 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/24-16:13:23 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/24-16:13:23 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/24-16:13:23 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 1(Integer), 901600(String)
2020/06/24-16:13:23 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/24-16:13:23 [http-nio-8083-exec-2] INFO  com.netflix.config.ChainedDynamicProperty- Flipping property: rac-order-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020/06/24-16:13:23 [http-nio-8083-exec-2] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer- Shutdown hook installed for: NFLoadBalancer-PingTimer-rac-order-service
2020/06/24-16:13:23 [http-nio-8083-exec-2] INFO  com.netflix.loadbalancer.BaseLoadBalancer- Client: rac-order-service instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=rac-order-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020/06/24-16:13:23 [http-nio-8083-exec-2] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer- Using serverListUpdater PollingServerListUpdater
2020/06/24-16:13:23 [http-nio-8083-exec-2] INFO  com.netflix.config.ChainedDynamicProperty- Flipping property: rac-order-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020/06/24-16:13:23 [http-nio-8083-exec-2] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer- DynamicServerListLoadBalancer for client rac-order-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=rac-order-service,current list of Servers=[MSI.mshome.net:8084],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:MSI.mshome.net:8084;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 GMT+08:00 1970;	First connection made: Thu Jan 01 08:00:00 GMT+08:00 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@1f128a66
2020/06/24-16:13:23 [http-nio-8083-exec-2] ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]- Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is feign.FeignException$NotFound: status 404 reading OrderStateService#inquiryLastOrderQuantity(HospitalIDAndGood)] with root cause
feign.FeignException$NotFound: status 404 reading OrderStateService#inquiryLastOrderQuantity(HospitalIDAndGood)
	at feign.FeignException.clientErrorStatus(FeignException.java:165) ~[feign-core-10.4.0.jar:na]
	at feign.FeignException.errorStatus(FeignException.java:141) ~[feign-core-10.4.0.jar:na]
	at feign.FeignException.errorStatus(FeignException.java:133) ~[feign-core-10.4.0.jar:na]
	at feign.codec.ErrorDecoder$Default.decode(ErrorDecoder.java:92) ~[feign-core-10.4.0.jar:na]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:151) ~[feign-core-10.4.0.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:80) ~[feign-core-10.4.0.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-10.4.0.jar:na]
	at com.sun.proxy.$Proxy115.inquiryLastOrderQuantity(Unknown Source) ~[na:na]
	at com.huijian.rac.controller.GoodsDictionaryController.inquiryDetail(GoodsDictionaryController.java:218) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_231]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_231]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_231]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_231]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_231]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_231]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_231]
2020/06/24-16:13:24 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty- Flipping property: rac-order-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020/06/24-16:14:24 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-16:14:51 [main] INFO  com.huijian.rac.RacStockServiceApplication- No active profile set, falling back to default profiles: default
2020/06/24-16:14:51 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Multiple Spring Data modules found, entering strict repository configuration mode!
2020/06/24-16:14:51 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Bootstrapping Spring Data repositories in DEFAULT mode.
2020/06/24-16:14:51 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Finished Spring Data repository scanning in 19ms. Found 0 repository interfaces.
2020/06/24-16:14:52 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'deliveryUnitMapper' and 'com.huijian.rac.mapper.DeliveryUnitMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:14:52 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'departMapper' and 'com.huijian.rac.mapper.DepartMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:14:52 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'discardDetailMapper' and 'com.huijian.rac.mapper.DiscardDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:14:52 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'discardMapper' and 'com.huijian.rac.mapper.DiscardMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:14:52 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsDictionaryMapper' and 'com.huijian.rac.mapper.GoodsDictionaryMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:14:52 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsRecordMapper' and 'com.huijian.rac.mapper.GoodsRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:14:52 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsSupplierMapper' and 'com.huijian.rac.mapper.GoodsSupplierMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:14:52 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'leaveStockListDetailMapper' and 'com.huijian.rac.mapper.LeaveStockListDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:14:52 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'materialMapper' and 'com.huijian.rac.mapper.MaterialMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:14:52 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'outboundRecordMapper' and 'com.huijian.rac.mapper.OutboundRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:14:52 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'outboundSecondRecordMapper' and 'com.huijian.rac.mapper.OutboundSecondRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:14:52 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'reagentMapper' and 'com.huijian.rac.mapper.ReagentMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:14:52 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'returnGoodsDetailMapper' and 'com.huijian.rac.mapper.ReturnGoodsDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:14:52 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'returnGoodsMapper' and 'com.huijian.rac.mapper.ReturnGoodsMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:14:52 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'secondGoodsRecordMapper' and 'com.huijian.rac.mapper.SecondGoodsRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:14:52 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'secondLeaveStockListDetailMapper' and 'com.huijian.rac.mapper.SecondLeaveStockListDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:14:52 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'unitMapper' and 'com.huijian.rac.mapper.UnitMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:14:52 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseMapper' and 'com.huijian.rac.mapper.WarehouseMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:14:52 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseRecordMapper' and 'com.huijian.rac.mapper.WarehouseRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:14:52 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseSecondMapper' and 'com.huijian.rac.mapper.WarehouseSecondMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:14:52 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseSecondRecordMapper' and 'com.huijian.rac.mapper.WarehouseSecondRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:14:52 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'departsMapper' and 'com.huijian.rac.mapper.DepartsMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:14:52 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsPackageDetailMapper' and 'com.huijian.rac.mapper.GoodsPackageDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:14:52 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsPackageMapper' and 'com.huijian.rac.mapper.GoodsPackageMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:14:52 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'hospitalMapper' and 'com.huijian.rac.mapper.HospitalMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:14:52 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'leaveStockListSecondMapper' and 'com.huijian.rac.mapper.LeaveStockListSecondMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:14:52 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderDetailMapper' and 'com.huijian.rac.mapper.OrderDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:14:52 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderMapper' and 'com.huijian.rac.mapper.OrderMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:14:52 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderOperateMapper' and 'com.huijian.rac.mapper.OrderOperateMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:14:52 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderReviewMapper' and 'com.huijian.rac.mapper.OrderReviewMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:14:52 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- No MyBatis mapper was found in '[com.huijian.rac.mapper]' package. Please check your configuration.
2020/06/24-16:14:52 [main] INFO  org.springframework.cloud.context.scope.GenericScope- BeanFactory id=67a76e45-faee-37d4-bfd4-e136a0fefe86
2020/06/24-16:14:52 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/24-16:14:52 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'redisConfig' of type [com.huijian.rac.config.RedisConfig$$EnhancerBySpringCGLIB$$efc3ea87] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/24-16:14:52 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/24-16:14:52 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat initialized with port(s): 8083 (http)
2020/06/24-16:14:52 [main] INFO  org.apache.catalina.core.StandardService- Starting service [Tomcat]
2020/06/24-16:14:52 [main] INFO  org.apache.catalina.core.StandardEngine- Starting Servlet engine: [Apache Tomcat/9.0.27]
2020/06/24-16:14:52 [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]- Initializing Spring embedded WebApplicationContext
2020/06/24-16:14:52 [main] INFO  org.springframework.web.context.ContextLoader- Root WebApplicationContext: initialization completed in 1240 ms
2020/06/24-16:14:53 [main] WARN  com.netflix.config.sources.URLConfigurationSource- No URLs will be polled as dynamic configuration sources.
2020/06/24-16:14:53 [main] INFO  com.netflix.config.sources.URLConfigurationSource- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020/06/24-16:14:53 [main] WARN  com.netflix.config.sources.URLConfigurationSource- No URLs will be polled as dynamic configuration sources.
2020/06/24-16:14:53 [main] INFO  com.netflix.config.sources.URLConfigurationSource- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020/06/24-16:14:53 [main] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor- Initializing ExecutorService 'applicationTaskExecutor'
2020/06/24-16:14:54 [main] WARN  org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger- You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020/06/24-16:14:54 [main] WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger- Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020/06/24-16:14:54 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory- Setting initial instance status as: STARTING
2020/06/24-16:14:54 [main] INFO  com.netflix.discovery.DiscoveryClient- Initializing Eureka in region us-east-1
2020/06/24-16:14:54 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using JSON encoding codec LegacyJacksonJson
2020/06/24-16:14:54 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using JSON decoding codec LegacyJacksonJson
2020/06/24-16:14:55 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using XML encoding codec XStreamXml
2020/06/24-16:14:55 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using XML decoding codec XStreamXml
2020/06/24-16:14:55 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-16:14:55 [main] INFO  com.netflix.discovery.DiscoveryClient- Disable delta property : false
2020/06/24-16:14:55 [main] INFO  com.netflix.discovery.DiscoveryClient- Single vip registry refresh property : null
2020/06/24-16:14:55 [main] INFO  com.netflix.discovery.DiscoveryClient- Force full registry fetch : false
2020/06/24-16:14:55 [main] INFO  com.netflix.discovery.DiscoveryClient- Application is null : false
2020/06/24-16:14:55 [main] INFO  com.netflix.discovery.DiscoveryClient- Registered Applications size is zero : true
2020/06/24-16:14:55 [main] INFO  com.netflix.discovery.DiscoveryClient- Application version is -1: true
2020/06/24-16:14:55 [main] INFO  com.netflix.discovery.DiscoveryClient- Getting all instance registry info from the eureka server
2020/06/24-16:14:55 [main] INFO  com.netflix.discovery.DiscoveryClient- The response status is 200
2020/06/24-16:14:55 [main] INFO  com.netflix.discovery.DiscoveryClient- Starting heartbeat executor: renew interval is: 30
2020/06/24-16:14:55 [main] INFO  com.netflix.discovery.InstanceInfoReplicator- InstanceInfoReplicator onDemand update allowed rate per min is 4
2020/06/24-16:14:55 [main] INFO  com.netflix.discovery.DiscoveryClient- Discovery Client initialized at timestamp 1592986495487 with initial instances count: 2
2020/06/24-16:14:55 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry- Registering application RAC-STOCK-SERVICE with eureka with status UP
2020/06/24-16:14:55 [main] INFO  com.netflix.discovery.DiscoveryClient- Saw local status change event StatusChangeEvent [timestamp=1592986495490, current=UP, previous=STARTING]
2020/06/24-16:14:55 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-STOCK-SERVICE/MSI.mshome.net:rac-stock-service:8083: registering service...
2020/06/24-16:14:55 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Attempting to connect to: [192.168.161.129:5672]
2020/06/24-16:14:55 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Created new connection: rabbitConnectionFactory#3ba348ca:0/SimpleConnection@283baa39 [delegate=amqp://admin@192.168.161.129:5672/, localPort= 56383]
2020/06/24-16:14:55 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-STOCK-SERVICE/MSI.mshome.net:rac-stock-service:8083 - registration status: 204
2020/06/24-16:14:55 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat started on port(s): 8083 (http) with context path ''
2020/06/24-16:14:55 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration- Updating port to 8083
2020/06/24-16:14:55 [main] INFO  com.huijian.rac.RacStockServiceApplication- Started RacStockServiceApplication in 5.754 seconds (JVM running for 6.453)
2020/06/24-16:19:24 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-16:19:55 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-16:21:46 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==>  Preparing: select * from pub_depart where HOSPITALID=? 
2020/06/24-16:21:46 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==> Parameters: 901600(String)
2020/06/24-16:21:46 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==>  Preparing: SELECT * from sj_order where OrderNo like concat('%',?,'%') and OrderDate >= ? and OrderDate < ? and OrderState != 0 order by OrderDate desc limit ?, ? 
2020/06/24-16:21:46 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-24 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/24-16:21:47 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- <==      Total: 0
2020/06/24-16:21:47 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- <==      Total: 22
2020/06/24-16:21:48 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==>  Preparing: select count(*) from sj_order where YEAR(OrderDate)=YEAR(NOW()); 
2020/06/24-16:21:48 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==> Parameters: 
2020/06/24-16:21:48 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- <==      Total: 1
2020/06/24-16:21:48 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==>  Preparing: select * from pub_depart where HOSPITALID=? 
2020/06/24-16:21:48 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==> Parameters: 901600(String)
2020/06/24-16:21:48 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- <==      Total: 22
2020/06/24-16:21:48 [http-nio-8083-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]- Initializing Spring DispatcherServlet 'dispatcherServlet'
2020/06/24-16:21:48 [http-nio-8083-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet- Initializing Servlet 'dispatcherServlet'
2020/06/24-16:21:48 [http-nio-8083-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet- Completed initialization in 8 ms
2020/06/24-16:21:50 [http-nio-8083-exec-3] INFO  com.zaxxer.hikari.HikariDataSource- HikariPool-1 - Starting...
2020/06/24-16:21:51 [http-nio-8083-exec-3] INFO  com.zaxxer.hikari.HikariDataSource- HikariPool-1 - Start completed.
2020/06/24-16:21:51 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- ==>  Preparing: select sg.*, su.UnitName from sj_goodsdictionary sg INNER join sj_unit su on GoodsName like concat('%',?,'%') and sg.UnitID = su.UnitID 
2020/06/24-16:21:51 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- ==> Parameters: ip(String)
2020/06/24-16:21:51 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- <==      Total: 1
2020/06/24-16:21:51 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/24-16:21:51 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/24-16:21:51 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/24-16:21:51 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/24-16:21:51 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 1(Integer), 901600(String)
2020/06/24-16:21:51 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/24-16:21:51 [http-nio-8083-exec-3] INFO  com.netflix.config.ChainedDynamicProperty- Flipping property: rac-order-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020/06/24-16:21:51 [http-nio-8083-exec-3] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer- Shutdown hook installed for: NFLoadBalancer-PingTimer-rac-order-service
2020/06/24-16:21:51 [http-nio-8083-exec-3] INFO  com.netflix.loadbalancer.BaseLoadBalancer- Client: rac-order-service instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=rac-order-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020/06/24-16:21:51 [http-nio-8083-exec-3] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer- Using serverListUpdater PollingServerListUpdater
2020/06/24-16:21:51 [http-nio-8083-exec-3] INFO  com.netflix.config.ChainedDynamicProperty- Flipping property: rac-order-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020/06/24-16:21:51 [http-nio-8083-exec-3] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer- DynamicServerListLoadBalancer for client rac-order-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=rac-order-service,current list of Servers=[MSI.mshome.net:8084],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:MSI.mshome.net:8084;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 GMT+08:00 1970;	First connection made: Thu Jan 01 08:00:00 GMT+08:00 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@25fbfcdd
2020/06/24-16:21:51 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- ==>  Preparing: select * from sj_order where HospitalID = ? order by OrderDate DESC limit 1; 
2020/06/24-16:21:51 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- ==> Parameters: 901600(String)
2020/06/24-16:21:51 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- <==      Total: 1
2020/06/24-16:21:51 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- ==>  Preparing: select * from sj_orderdetail where OrderNo = ? and GoodsID in ( ? ) 
2020/06/24-16:21:51 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- ==> Parameters: 9016002000038(String), 1(Integer)
2020/06/24-16:21:51 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- <==      Total: 1
2020/06/24-16:21:51 [http-nio-8083-exec-3] ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]- Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.ClassCastException: java.util.ArrayList cannot be cast to [I] with root cause
java.lang.ClassCastException: java.util.ArrayList cannot be cast to [I
	at com.huijian.rac.controller.GoodsDictionaryController.inquiryDetail(GoodsDictionaryController.java:218) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_231]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_231]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_231]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_231]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_231]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_231]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_231]
2020/06/24-16:21:52 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty- Flipping property: rac-order-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020/06/24-16:24:24 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-16:24:36 [main] INFO  com.huijian.rac.RacStockServiceApplication- No active profile set, falling back to default profiles: default
2020/06/24-16:24:37 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Multiple Spring Data modules found, entering strict repository configuration mode!
2020/06/24-16:24:37 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Bootstrapping Spring Data repositories in DEFAULT mode.
2020/06/24-16:24:37 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Finished Spring Data repository scanning in 28ms. Found 0 repository interfaces.
2020/06/24-16:24:37 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'deliveryUnitMapper' and 'com.huijian.rac.mapper.DeliveryUnitMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:24:37 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'departMapper' and 'com.huijian.rac.mapper.DepartMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:24:37 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'discardDetailMapper' and 'com.huijian.rac.mapper.DiscardDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:24:37 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'discardMapper' and 'com.huijian.rac.mapper.DiscardMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:24:37 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsDictionaryMapper' and 'com.huijian.rac.mapper.GoodsDictionaryMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:24:37 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsRecordMapper' and 'com.huijian.rac.mapper.GoodsRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:24:37 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsSupplierMapper' and 'com.huijian.rac.mapper.GoodsSupplierMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:24:37 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'leaveStockListDetailMapper' and 'com.huijian.rac.mapper.LeaveStockListDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:24:37 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'materialMapper' and 'com.huijian.rac.mapper.MaterialMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:24:37 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'outboundRecordMapper' and 'com.huijian.rac.mapper.OutboundRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:24:37 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'outboundSecondRecordMapper' and 'com.huijian.rac.mapper.OutboundSecondRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:24:37 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'reagentMapper' and 'com.huijian.rac.mapper.ReagentMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:24:37 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'returnGoodsDetailMapper' and 'com.huijian.rac.mapper.ReturnGoodsDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:24:37 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'returnGoodsMapper' and 'com.huijian.rac.mapper.ReturnGoodsMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:24:37 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'secondGoodsRecordMapper' and 'com.huijian.rac.mapper.SecondGoodsRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:24:37 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'secondLeaveStockListDetailMapper' and 'com.huijian.rac.mapper.SecondLeaveStockListDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:24:37 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'unitMapper' and 'com.huijian.rac.mapper.UnitMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:24:37 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseMapper' and 'com.huijian.rac.mapper.WarehouseMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:24:37 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseRecordMapper' and 'com.huijian.rac.mapper.WarehouseRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:24:37 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseSecondMapper' and 'com.huijian.rac.mapper.WarehouseSecondMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:24:37 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseSecondRecordMapper' and 'com.huijian.rac.mapper.WarehouseSecondRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:24:37 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'departsMapper' and 'com.huijian.rac.mapper.DepartsMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:24:37 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsPackageDetailMapper' and 'com.huijian.rac.mapper.GoodsPackageDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:24:37 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsPackageMapper' and 'com.huijian.rac.mapper.GoodsPackageMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:24:37 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'hospitalMapper' and 'com.huijian.rac.mapper.HospitalMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:24:37 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'leaveStockListSecondMapper' and 'com.huijian.rac.mapper.LeaveStockListSecondMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:24:37 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderDetailMapper' and 'com.huijian.rac.mapper.OrderDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:24:37 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderMapper' and 'com.huijian.rac.mapper.OrderMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:24:37 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderOperateMapper' and 'com.huijian.rac.mapper.OrderOperateMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:24:37 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderReviewMapper' and 'com.huijian.rac.mapper.OrderReviewMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:24:37 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- No MyBatis mapper was found in '[com.huijian.rac.mapper]' package. Please check your configuration.
2020/06/24-16:24:37 [main] INFO  org.springframework.cloud.context.scope.GenericScope- BeanFactory id=67a76e45-faee-37d4-bfd4-e136a0fefe86
2020/06/24-16:24:37 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/24-16:24:37 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'redisConfig' of type [com.huijian.rac.config.RedisConfig$$EnhancerBySpringCGLIB$$993b7203] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/24-16:24:37 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/24-16:24:37 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat initialized with port(s): 8083 (http)
2020/06/24-16:24:37 [main] INFO  org.apache.catalina.core.StandardService- Starting service [Tomcat]
2020/06/24-16:24:37 [main] INFO  org.apache.catalina.core.StandardEngine- Starting Servlet engine: [Apache Tomcat/9.0.27]
2020/06/24-16:24:38 [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]- Initializing Spring embedded WebApplicationContext
2020/06/24-16:24:38 [main] INFO  org.springframework.web.context.ContextLoader- Root WebApplicationContext: initialization completed in 2007 ms
2020/06/24-16:24:39 [main] WARN  com.netflix.config.sources.URLConfigurationSource- No URLs will be polled as dynamic configuration sources.
2020/06/24-16:24:39 [main] INFO  com.netflix.config.sources.URLConfigurationSource- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020/06/24-16:24:39 [main] WARN  com.netflix.config.sources.URLConfigurationSource- No URLs will be polled as dynamic configuration sources.
2020/06/24-16:24:39 [main] INFO  com.netflix.config.sources.URLConfigurationSource- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020/06/24-16:24:39 [main] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor- Initializing ExecutorService 'applicationTaskExecutor'
2020/06/24-16:24:40 [main] WARN  org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger- You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020/06/24-16:24:40 [main] WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger- Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020/06/24-16:24:41 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory- Setting initial instance status as: STARTING
2020/06/24-16:24:41 [main] INFO  com.netflix.discovery.DiscoveryClient- Initializing Eureka in region us-east-1
2020/06/24-16:24:41 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using JSON encoding codec LegacyJacksonJson
2020/06/24-16:24:41 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using JSON decoding codec LegacyJacksonJson
2020/06/24-16:24:41 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using XML encoding codec XStreamXml
2020/06/24-16:24:41 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using XML decoding codec XStreamXml
2020/06/24-16:24:41 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-16:24:41 [main] INFO  com.netflix.discovery.DiscoveryClient- Disable delta property : false
2020/06/24-16:24:41 [main] INFO  com.netflix.discovery.DiscoveryClient- Single vip registry refresh property : null
2020/06/24-16:24:41 [main] INFO  com.netflix.discovery.DiscoveryClient- Force full registry fetch : false
2020/06/24-16:24:41 [main] INFO  com.netflix.discovery.DiscoveryClient- Application is null : false
2020/06/24-16:24:41 [main] INFO  com.netflix.discovery.DiscoveryClient- Registered Applications size is zero : true
2020/06/24-16:24:41 [main] INFO  com.netflix.discovery.DiscoveryClient- Application version is -1: true
2020/06/24-16:24:41 [main] INFO  com.netflix.discovery.DiscoveryClient- Getting all instance registry info from the eureka server
2020/06/24-16:24:42 [main] INFO  com.netflix.discovery.DiscoveryClient- The response status is 200
2020/06/24-16:24:42 [main] INFO  com.netflix.discovery.DiscoveryClient- Starting heartbeat executor: renew interval is: 30
2020/06/24-16:24:42 [main] INFO  com.netflix.discovery.InstanceInfoReplicator- InstanceInfoReplicator onDemand update allowed rate per min is 4
2020/06/24-16:24:42 [main] INFO  com.netflix.discovery.DiscoveryClient- Discovery Client initialized at timestamp 1592987082125 with initial instances count: 2
2020/06/24-16:24:42 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry- Registering application RAC-STOCK-SERVICE with eureka with status UP
2020/06/24-16:24:42 [main] INFO  com.netflix.discovery.DiscoveryClient- Saw local status change event StatusChangeEvent [timestamp=1592987082129, current=UP, previous=STARTING]
2020/06/24-16:24:42 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-STOCK-SERVICE/MSI.mshome.net:rac-stock-service:8083: registering service...
2020/06/24-16:24:42 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Attempting to connect to: [192.168.161.129:5672]
2020/06/24-16:24:42 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Created new connection: rabbitConnectionFactory#9e54c59:0/SimpleConnection@5a6195b8 [delegate=amqp://admin@192.168.161.129:5672/, localPort= 57152]
2020/06/24-16:24:42 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-STOCK-SERVICE/MSI.mshome.net:rac-stock-service:8083 - registration status: 204
2020/06/24-16:24:42 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat started on port(s): 8083 (http) with context path ''
2020/06/24-16:24:42 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration- Updating port to 8083
2020/06/24-16:24:42 [main] INFO  com.huijian.rac.RacStockServiceApplication- Started RacStockServiceApplication in 7.982 seconds (JVM running for 8.823)
2020/06/24-16:25:22 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==>  Preparing: select * from pub_depart where HOSPITALID=? 
2020/06/24-16:25:22 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==>  Preparing: SELECT * from sj_order where OrderNo like concat('%',?,'%') and OrderDate >= ? and OrderDate < ? and OrderState != 0 order by OrderDate desc limit ?, ? 
2020/06/24-16:25:22 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==> Parameters: 901600(String)
2020/06/24-16:25:22 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-24 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/24-16:25:22 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- <==      Total: 0
2020/06/24-16:25:22 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- <==      Total: 22
2020/06/24-16:25:23 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==>  Preparing: select count(*) from sj_order where YEAR(OrderDate)=YEAR(NOW()); 
2020/06/24-16:25:23 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==> Parameters: 
2020/06/24-16:25:23 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- <==      Total: 1
2020/06/24-16:25:23 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==>  Preparing: select * from pub_depart where HOSPITALID=? 
2020/06/24-16:25:23 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==> Parameters: 901600(String)
2020/06/24-16:25:23 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- <==      Total: 22
2020/06/24-16:25:23 [http-nio-8083-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]- Initializing Spring DispatcherServlet 'dispatcherServlet'
2020/06/24-16:25:23 [http-nio-8083-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet- Initializing Servlet 'dispatcherServlet'
2020/06/24-16:25:23 [http-nio-8083-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet- Completed initialization in 8 ms
2020/06/24-16:25:26 [http-nio-8083-exec-2] INFO  com.zaxxer.hikari.HikariDataSource- HikariPool-1 - Starting...
2020/06/24-16:25:26 [http-nio-8083-exec-2] INFO  com.zaxxer.hikari.HikariDataSource- HikariPool-1 - Start completed.
2020/06/24-16:25:26 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- ==>  Preparing: select sg.*, su.UnitName from sj_goodsdictionary sg INNER join sj_unit su on GoodsName like concat('%',?,'%') and sg.UnitID = su.UnitID 
2020/06/24-16:25:26 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- ==> Parameters: ip(String)
2020/06/24-16:25:26 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- <==      Total: 1
2020/06/24-16:25:26 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/24-16:25:26 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/24-16:25:26 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/24-16:25:26 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/24-16:25:26 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 1(Integer), 901600(String)
2020/06/24-16:25:26 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/24-16:25:27 [http-nio-8083-exec-2] INFO  com.netflix.config.ChainedDynamicProperty- Flipping property: rac-order-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020/06/24-16:25:27 [http-nio-8083-exec-2] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer- Shutdown hook installed for: NFLoadBalancer-PingTimer-rac-order-service
2020/06/24-16:25:27 [http-nio-8083-exec-2] INFO  com.netflix.loadbalancer.BaseLoadBalancer- Client: rac-order-service instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=rac-order-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020/06/24-16:25:27 [http-nio-8083-exec-2] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer- Using serverListUpdater PollingServerListUpdater
2020/06/24-16:25:27 [http-nio-8083-exec-2] INFO  com.netflix.config.ChainedDynamicProperty- Flipping property: rac-order-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020/06/24-16:25:27 [http-nio-8083-exec-2] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer- DynamicServerListLoadBalancer for client rac-order-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=rac-order-service,current list of Servers=[MSI.mshome.net:8084],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:MSI.mshome.net:8084;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 GMT+08:00 1970;	First connection made: Thu Jan 01 08:00:00 GMT+08:00 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@72e3bc2d
2020/06/24-16:25:27 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- ==>  Preparing: select * from sj_order where HospitalID = ? order by OrderDate DESC limit 1; 
2020/06/24-16:25:27 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- ==> Parameters: 901600(String)
2020/06/24-16:25:27 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- <==      Total: 1
2020/06/24-16:25:27 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- ==>  Preparing: select * from sj_orderdetail where OrderNo = ? and GoodsID in ( ? ) 
2020/06/24-16:25:27 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- ==> Parameters: 9016002000038(String), 1(Integer)
2020/06/24-16:25:27 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- <==      Total: 1
2020/06/24-16:25:27 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- ==>  Preparing: select * from sj_secondleavestocklistdetail where HospitalID = ? and GoodsID in ( ? ) and now() >= DATE_SUB(CURDATE(), INTERVAL 12 month) 
2020/06/24-16:25:27 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- ==> Parameters: 901600(String), 1(Integer)
2020/06/24-16:25:27 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- <==      Total: 1
2020/06/24-16:25:27 [http-nio-8083-exec-2] ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]- Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.ClassCastException: java.util.ArrayList cannot be cast to [Ljava.lang.Integer;] with root cause
java.lang.ClassCastException: java.util.ArrayList cannot be cast to [Ljava.lang.Integer;
	at com.huijian.rac.controller.GoodsDictionaryController.inquiryDetail(GoodsDictionaryController.java:219) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_231]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_231]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_231]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_231]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.1.RELEASE.jar:5.2.1.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) ~[tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_231]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_231]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.27.jar:9.0.27]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_231]
2020/06/24-16:25:28 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty- Flipping property: rac-order-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020/06/24-16:29:24 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-16:29:41 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-16:30:31 [main] INFO  com.huijian.rac.RacStockServiceApplication- No active profile set, falling back to default profiles: default
2020/06/24-16:30:32 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Multiple Spring Data modules found, entering strict repository configuration mode!
2020/06/24-16:30:32 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Bootstrapping Spring Data repositories in DEFAULT mode.
2020/06/24-16:30:32 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate- Finished Spring Data repository scanning in 20ms. Found 0 repository interfaces.
2020/06/24-16:30:32 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'deliveryUnitMapper' and 'com.huijian.rac.mapper.DeliveryUnitMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:30:32 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'departMapper' and 'com.huijian.rac.mapper.DepartMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:30:32 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'discardDetailMapper' and 'com.huijian.rac.mapper.DiscardDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:30:32 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'discardMapper' and 'com.huijian.rac.mapper.DiscardMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:30:32 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsDictionaryMapper' and 'com.huijian.rac.mapper.GoodsDictionaryMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:30:32 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsRecordMapper' and 'com.huijian.rac.mapper.GoodsRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:30:32 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsSupplierMapper' and 'com.huijian.rac.mapper.GoodsSupplierMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:30:32 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'leaveStockListDetailMapper' and 'com.huijian.rac.mapper.LeaveStockListDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:30:32 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'materialMapper' and 'com.huijian.rac.mapper.MaterialMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:30:32 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'outboundRecordMapper' and 'com.huijian.rac.mapper.OutboundRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:30:32 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'outboundSecondRecordMapper' and 'com.huijian.rac.mapper.OutboundSecondRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:30:32 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'reagentMapper' and 'com.huijian.rac.mapper.ReagentMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:30:32 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'returnGoodsDetailMapper' and 'com.huijian.rac.mapper.ReturnGoodsDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:30:32 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'returnGoodsMapper' and 'com.huijian.rac.mapper.ReturnGoodsMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:30:32 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'secondGoodsRecordMapper' and 'com.huijian.rac.mapper.SecondGoodsRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:30:32 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'secondLeaveStockListDetailMapper' and 'com.huijian.rac.mapper.SecondLeaveStockListDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:30:32 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'unitMapper' and 'com.huijian.rac.mapper.UnitMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:30:32 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseMapper' and 'com.huijian.rac.mapper.WarehouseMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:30:32 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseRecordMapper' and 'com.huijian.rac.mapper.WarehouseRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:30:32 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseSecondMapper' and 'com.huijian.rac.mapper.WarehouseSecondMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:30:32 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'warehouseSecondRecordMapper' and 'com.huijian.rac.mapper.WarehouseSecondRecordMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:30:32 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'departsMapper' and 'com.huijian.rac.mapper.DepartsMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:30:32 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsPackageDetailMapper' and 'com.huijian.rac.mapper.GoodsPackageDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:30:32 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'goodsPackageMapper' and 'com.huijian.rac.mapper.GoodsPackageMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:30:32 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'hospitalMapper' and 'com.huijian.rac.mapper.HospitalMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:30:32 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'leaveStockListSecondMapper' and 'com.huijian.rac.mapper.LeaveStockListSecondMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:30:32 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderDetailMapper' and 'com.huijian.rac.mapper.OrderDetailMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:30:32 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderMapper' and 'com.huijian.rac.mapper.OrderMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:30:32 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderOperateMapper' and 'com.huijian.rac.mapper.OrderOperateMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:30:32 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- Skipping MapperFactoryBean with name 'orderReviewMapper' and 'com.huijian.rac.mapper.OrderReviewMapper' mapperInterface. Bean already defined with the same name!
2020/06/24-16:30:32 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner- No MyBatis mapper was found in '[com.huijian.rac.mapper]' package. Please check your configuration.
2020/06/24-16:30:32 [main] INFO  org.springframework.cloud.context.scope.GenericScope- BeanFactory id=67a76e45-faee-37d4-bfd4-e136a0fefe86
2020/06/24-16:30:32 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/24-16:30:32 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'redisConfig' of type [com.huijian.rac.config.RedisConfig$$EnhancerBySpringCGLIB$$585c327b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/24-16:30:32 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker- Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/06/24-16:30:32 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat initialized with port(s): 8083 (http)
2020/06/24-16:30:32 [main] INFO  org.apache.catalina.core.StandardService- Starting service [Tomcat]
2020/06/24-16:30:32 [main] INFO  org.apache.catalina.core.StandardEngine- Starting Servlet engine: [Apache Tomcat/9.0.27]
2020/06/24-16:30:32 [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]- Initializing Spring embedded WebApplicationContext
2020/06/24-16:30:32 [main] INFO  org.springframework.web.context.ContextLoader- Root WebApplicationContext: initialization completed in 1240 ms
2020/06/24-16:30:33 [main] WARN  com.netflix.config.sources.URLConfigurationSource- No URLs will be polled as dynamic configuration sources.
2020/06/24-16:30:33 [main] INFO  com.netflix.config.sources.URLConfigurationSource- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020/06/24-16:30:33 [main] WARN  com.netflix.config.sources.URLConfigurationSource- No URLs will be polled as dynamic configuration sources.
2020/06/24-16:30:33 [main] INFO  com.netflix.config.sources.URLConfigurationSource- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020/06/24-16:30:33 [main] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor- Initializing ExecutorService 'applicationTaskExecutor'
2020/06/24-16:30:34 [main] WARN  org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger- You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020/06/24-16:30:34 [main] WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger- Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020/06/24-16:30:34 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory- Setting initial instance status as: STARTING
2020/06/24-16:30:34 [main] INFO  com.netflix.discovery.DiscoveryClient- Initializing Eureka in region us-east-1
2020/06/24-16:30:35 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using JSON encoding codec LegacyJacksonJson
2020/06/24-16:30:35 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using JSON decoding codec LegacyJacksonJson
2020/06/24-16:30:35 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using XML encoding codec XStreamXml
2020/06/24-16:30:35 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider- Using XML decoding codec XStreamXml
2020/06/24-16:30:35 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-16:30:35 [main] INFO  com.netflix.discovery.DiscoveryClient- Disable delta property : false
2020/06/24-16:30:35 [main] INFO  com.netflix.discovery.DiscoveryClient- Single vip registry refresh property : null
2020/06/24-16:30:35 [main] INFO  com.netflix.discovery.DiscoveryClient- Force full registry fetch : false
2020/06/24-16:30:35 [main] INFO  com.netflix.discovery.DiscoveryClient- Application is null : false
2020/06/24-16:30:35 [main] INFO  com.netflix.discovery.DiscoveryClient- Registered Applications size is zero : true
2020/06/24-16:30:35 [main] INFO  com.netflix.discovery.DiscoveryClient- Application version is -1: true
2020/06/24-16:30:35 [main] INFO  com.netflix.discovery.DiscoveryClient- Getting all instance registry info from the eureka server
2020/06/24-16:30:35 [main] INFO  com.netflix.discovery.DiscoveryClient- The response status is 200
2020/06/24-16:30:35 [main] INFO  com.netflix.discovery.DiscoveryClient- Starting heartbeat executor: renew interval is: 30
2020/06/24-16:30:35 [main] INFO  com.netflix.discovery.InstanceInfoReplicator- InstanceInfoReplicator onDemand update allowed rate per min is 4
2020/06/24-16:30:35 [main] INFO  com.netflix.discovery.DiscoveryClient- Discovery Client initialized at timestamp 1592987435778 with initial instances count: 2
2020/06/24-16:30:35 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry- Registering application RAC-STOCK-SERVICE with eureka with status UP
2020/06/24-16:30:35 [main] INFO  com.netflix.discovery.DiscoveryClient- Saw local status change event StatusChangeEvent [timestamp=1592987435781, current=UP, previous=STARTING]
2020/06/24-16:30:35 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-STOCK-SERVICE/MSI.mshome.net:rac-stock-service:8083: registering service...
2020/06/24-16:30:35 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Attempting to connect to: [192.168.161.129:5672]
2020/06/24-16:30:35 [main] INFO  org.springframework.amqp.rabbit.connection.CachingConnectionFactory- Created new connection: rabbitConnectionFactory#67e25252:0/SimpleConnection@429e7914 [delegate=amqp://admin@192.168.161.129:5672/, localPort= 57892]
2020/06/24-16:30:35 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient- DiscoveryClient_RAC-STOCK-SERVICE/MSI.mshome.net:rac-stock-service:8083 - registration status: 204
2020/06/24-16:30:35 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer- Tomcat started on port(s): 8083 (http) with context path ''
2020/06/24-16:30:35 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration- Updating port to 8083
2020/06/24-16:30:36 [main] INFO  com.huijian.rac.RacStockServiceApplication- Started RacStockServiceApplication in 5.787 seconds (JVM running for 6.482)
2020/06/24-16:34:24 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-16:35:35 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-16:36:55 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==>  Preparing: SELECT * from sj_order where OrderNo like concat('%',?,'%') and OrderDate >= ? and OrderDate < ? and OrderState != 0 order by OrderDate desc limit ?, ? 
2020/06/24-16:36:55 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==>  Preparing: select * from pub_depart where HOSPITALID=? 
2020/06/24-16:36:55 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==> Parameters: 901600(String)
2020/06/24-16:36:55 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-24 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/24-16:36:56 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- <==      Total: 0
2020/06/24-16:36:56 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- <==      Total: 22
2020/06/24-16:36:56 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==>  Preparing: select count(*) from sj_order where YEAR(OrderDate)=YEAR(NOW()); 
2020/06/24-16:36:56 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==> Parameters: 
2020/06/24-16:36:56 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- <==      Total: 1
2020/06/24-16:36:56 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==>  Preparing: select * from pub_depart where HOSPITALID=? 
2020/06/24-16:36:56 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==> Parameters: 901600(String)
2020/06/24-16:36:56 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- <==      Total: 22
2020/06/24-16:36:57 [http-nio-8083-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]- Initializing Spring DispatcherServlet 'dispatcherServlet'
2020/06/24-16:36:57 [http-nio-8083-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet- Initializing Servlet 'dispatcherServlet'
2020/06/24-16:36:57 [http-nio-8083-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet- Completed initialization in 7 ms
2020/06/24-16:36:59 [http-nio-8083-exec-3] INFO  com.zaxxer.hikari.HikariDataSource- HikariPool-1 - Starting...
2020/06/24-16:36:59 [http-nio-8083-exec-3] INFO  com.zaxxer.hikari.HikariDataSource- HikariPool-1 - Start completed.
2020/06/24-16:36:59 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- ==>  Preparing: select sg.*, su.UnitName from sj_goodsdictionary sg INNER join sj_unit su on GoodsName like concat('%',?,'%') and sg.UnitID = su.UnitID 
2020/06/24-16:36:59 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- ==> Parameters: ip(String)
2020/06/24-16:36:59 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- <==      Total: 1
2020/06/24-16:36:59 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/24-16:36:59 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/24-16:36:59 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/24-16:36:59 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/24-16:36:59 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 1(Integer), 901600(String)
2020/06/24-16:36:59 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/24-16:36:59 [http-nio-8083-exec-3] INFO  com.netflix.config.ChainedDynamicProperty- Flipping property: rac-order-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020/06/24-16:36:59 [http-nio-8083-exec-3] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer- Shutdown hook installed for: NFLoadBalancer-PingTimer-rac-order-service
2020/06/24-16:36:59 [http-nio-8083-exec-3] INFO  com.netflix.loadbalancer.BaseLoadBalancer- Client: rac-order-service instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=rac-order-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020/06/24-16:36:59 [http-nio-8083-exec-3] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer- Using serverListUpdater PollingServerListUpdater
2020/06/24-16:37:00 [http-nio-8083-exec-3] INFO  com.netflix.config.ChainedDynamicProperty- Flipping property: rac-order-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020/06/24-16:37:00 [http-nio-8083-exec-3] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer- DynamicServerListLoadBalancer for client rac-order-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=rac-order-service,current list of Servers=[MSI.mshome.net:8084],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:MSI.mshome.net:8084;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 GMT+08:00 1970;	First connection made: Thu Jan 01 08:00:00 GMT+08:00 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@5444244c
2020/06/24-16:37:00 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- ==>  Preparing: select * from sj_order where HospitalID = ? order by OrderDate DESC limit 1; 
2020/06/24-16:37:00 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- ==> Parameters: 901600(String)
2020/06/24-16:37:00 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- <==      Total: 1
2020/06/24-16:37:00 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- ==>  Preparing: select * from sj_orderdetail where OrderNo = ? and GoodsID in ( ? ) 
2020/06/24-16:37:00 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- ==> Parameters: 9016002000038(String), 1(Integer)
2020/06/24-16:37:00 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- <==      Total: 1
2020/06/24-16:37:00 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- ==>  Preparing: select * from sj_secondleavestocklistdetail where HospitalID = ? and GoodsID in ( ? ) and now() >= DATE_SUB(CURDATE(), INTERVAL 12 month) 
2020/06/24-16:37:00 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- ==> Parameters: 901600(String), 1(Integer)
2020/06/24-16:37:00 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- <==      Total: 1
2020/06/24-16:37:00 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty- Flipping property: rac-order-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020/06/24-16:37:05 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==>  Preparing: select count(*) from sj_order where YEAR(OrderDate)=YEAR(NOW()); 
2020/06/24-16:37:05 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==> Parameters: 
2020/06/24-16:37:05 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- <==      Total: 1
2020/06/24-16:37:05 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==>  Preparing: select * from pub_depart where HOSPITALID=? 
2020/06/24-16:37:05 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==> Parameters: 901600(String)
2020/06/24-16:37:05 [http-nio-8084-exec-9] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- <==      Total: 22
2020/06/24-16:37:07 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- ==>  Preparing: select sg.*, su.UnitName from sj_goodsdictionary sg INNER join sj_unit su on GoodsName like concat('%',?,'%') and sg.UnitID = su.UnitID 
2020/06/24-16:37:07 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- ==> Parameters: ip(String)
2020/06/24-16:37:07 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- <==      Total: 1
2020/06/24-16:37:07 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/24-16:37:07 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/24-16:37:07 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/24-16:37:07 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/24-16:37:07 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 1(Integer), 901600(String)
2020/06/24-16:37:08 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/24-16:37:08 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- ==>  Preparing: select * from sj_order where HospitalID = ? order by OrderDate DESC limit 1; 
2020/06/24-16:37:08 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- ==> Parameters: 901600(String)
2020/06/24-16:37:08 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- <==      Total: 1
2020/06/24-16:37:08 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- ==>  Preparing: select * from sj_orderdetail where OrderNo = ? and GoodsID in ( ? ) 
2020/06/24-16:37:08 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- ==> Parameters: 9016002000038(String), 1(Integer)
2020/06/24-16:37:08 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- <==      Total: 1
2020/06/24-16:37:08 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- ==>  Preparing: select * from sj_secondleavestocklistdetail where HospitalID = ? and GoodsID in ( ? ) and now() >= DATE_SUB(CURDATE(), INTERVAL 12 month) 
2020/06/24-16:37:08 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- ==> Parameters: 901600(String), 1(Integer)
2020/06/24-16:37:08 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- <==      Total: 1
2020/06/24-16:39:24 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-16:39:47 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==>  Preparing: select * from pub_depart where HOSPITALID=? 
2020/06/24-16:39:47 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==>  Preparing: select count(*) from sj_order where YEAR(OrderDate)=YEAR(NOW()); 
2020/06/24-16:39:47 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==> Parameters: 901600(String)
2020/06/24-16:39:47 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==> Parameters: 
2020/06/24-16:39:47 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- <==      Total: 1
2020/06/24-16:39:47 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- <==      Total: 22
2020/06/24-16:39:49 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- ==>  Preparing: select sg.*, su.UnitName from sj_goodsdictionary sg INNER join sj_unit su on GoodsName like concat('%',?,'%') and sg.UnitID = su.UnitID 
2020/06/24-16:39:49 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- ==> Parameters: ip(String)
2020/06/24-16:39:49 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- <==      Total: 1
2020/06/24-16:39:49 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/24-16:39:49 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/24-16:39:49 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/24-16:39:49 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/24-16:39:49 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 1(Integer), 901600(String)
2020/06/24-16:39:49 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/24-16:39:49 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- ==>  Preparing: select * from sj_order where HospitalID = ? order by OrderDate DESC limit 1; 
2020/06/24-16:39:49 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- ==> Parameters: 901600(String)
2020/06/24-16:39:49 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- <==      Total: 1
2020/06/24-16:39:49 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- ==>  Preparing: select * from sj_orderdetail where OrderNo = ? and GoodsID in ( ? ) 
2020/06/24-16:39:49 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- ==> Parameters: 9016002000038(String), 1(Integer)
2020/06/24-16:39:49 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- <==      Total: 1
2020/06/24-16:39:49 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- ==>  Preparing: select * from sj_secondleavestocklistdetail where HospitalID = ? and GoodsID in ( ? ) and now() >= DATE_SUB(CURDATE(), INTERVAL 12 month) 
2020/06/24-16:39:49 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- ==> Parameters: 901600(String), 1(Integer)
2020/06/24-16:39:50 [http-nio-8084-exec-5] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- <==      Total: 1
2020/06/24-16:40:35 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-16:40:49 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==>  Preparing: select count(*) from sj_order where YEAR(OrderDate)=YEAR(NOW()); 
2020/06/24-16:40:49 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==>  Preparing: select * from pub_depart where HOSPITALID=? 
2020/06/24-16:40:49 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==> Parameters: 
2020/06/24-16:40:49 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==> Parameters: 901600(String)
2020/06/24-16:40:49 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- <==      Total: 1
2020/06/24-16:40:49 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- <==      Total: 22
2020/06/24-16:40:52 [http-nio-8083-exec-8] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- ==>  Preparing: select sg.*, su.UnitName from sj_goodsdictionary sg INNER join sj_unit su on GoodsName like concat('%',?,'%') and sg.UnitID = su.UnitID 
2020/06/24-16:40:52 [http-nio-8083-exec-8] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- ==> Parameters: ip(String)
2020/06/24-16:40:52 [http-nio-8083-exec-8] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- <==      Total: 1
2020/06/24-16:40:52 [http-nio-8083-exec-8] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/24-16:40:52 [http-nio-8083-exec-8] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/24-16:40:52 [http-nio-8083-exec-8] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/24-16:40:52 [http-nio-8083-exec-8] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/24-16:40:52 [http-nio-8083-exec-8] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 1(Integer), 901600(String)
2020/06/24-16:40:52 [http-nio-8083-exec-8] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/24-16:40:52 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- ==>  Preparing: select * from sj_order where HospitalID = ? order by OrderDate DESC limit 1; 
2020/06/24-16:40:52 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- ==> Parameters: 901600(String)
2020/06/24-16:40:52 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- <==      Total: 1
2020/06/24-16:40:52 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- ==>  Preparing: select * from sj_orderdetail where OrderNo = ? and GoodsID in ( ? ) 
2020/06/24-16:40:52 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- ==> Parameters: 9016002000038(String), 1(Integer)
2020/06/24-16:40:53 [http-nio-8084-exec-6] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- <==      Total: 1
2020/06/24-16:40:53 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- ==>  Preparing: select * from sj_secondleavestocklistdetail where HospitalID = ? and GoodsID in ( ? ) and now() >= DATE_SUB(CURDATE(), INTERVAL 12 month) 
2020/06/24-16:40:53 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- ==> Parameters: 901600(String), 1(Integer)
2020/06/24-16:40:53 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- <==      Total: 1
2020/06/24-16:41:38 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==>  Preparing: select count(*) from sj_order where YEAR(OrderDate)=YEAR(NOW()); 
2020/06/24-16:41:38 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==>  Preparing: select * from pub_depart where HOSPITALID=? 
2020/06/24-16:41:38 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- ==> Parameters: 
2020/06/24-16:41:38 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==> Parameters: 901600(String)
2020/06/24-16:41:38 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOneYear- <==      Total: 1
2020/06/24-16:41:38 [http-nio-8084-exec-1] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- <==      Total: 22
2020/06/24-16:41:40 [http-nio-8083-exec-10] INFO  io.lettuce.core.EpollProvider- Starting without optional epoll library
2020/06/24-16:41:40 [http-nio-8083-exec-10] INFO  io.lettuce.core.KqueueProvider- Starting without optional kqueue library
2020/06/24-16:41:41 [http-nio-8083-exec-10] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.getAllGoods- ==>  Preparing: select sg.*, su.UnitName from sj_goodsdictionary sg INNER join sj_unit su on sg.UnitID = su.UnitID 
2020/06/24-16:41:41 [http-nio-8083-exec-10] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.getAllGoods- ==> Parameters: 
2020/06/24-16:41:41 [http-nio-8083-exec-10] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.getAllGoods- <==      Total: 20
2020/06/24-16:41:41 [http-nio-8083-exec-10] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/24-16:41:41 [http-nio-8083-exec-10] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/24-16:41:41 [http-nio-8083-exec-10] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/24-16:41:41 [http-nio-8083-exec-10] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/24-16:41:41 [http-nio-8083-exec-10] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 2(Integer)
2020/06/24-16:41:41 [http-nio-8083-exec-10] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/24-16:41:41 [http-nio-8083-exec-10] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/24-16:41:41 [http-nio-8083-exec-10] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/24-16:41:41 [http-nio-8083-exec-10] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/24-16:41:41 [http-nio-8083-exec-10] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/24-16:41:41 [http-nio-8083-exec-10] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/24-16:41:41 [http-nio-8083-exec-10] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/24-16:41:41 [http-nio-8083-exec-10] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/24-16:41:41 [http-nio-8083-exec-10] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 2(Integer)
2020/06/24-16:41:41 [http-nio-8083-exec-10] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/24-16:41:41 [http-nio-8083-exec-10] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/24-16:41:41 [http-nio-8083-exec-10] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/24-16:41:41 [http-nio-8083-exec-10] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/24-16:41:41 [http-nio-8083-exec-10] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/24-16:41:41 [http-nio-8083-exec-10] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/24-16:41:41 [http-nio-8083-exec-10] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/24-16:41:41 [http-nio-8083-exec-10] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/24-16:41:41 [http-nio-8083-exec-10] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 2(Integer)
2020/06/24-16:41:41 [http-nio-8083-exec-10] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/24-16:41:41 [http-nio-8083-exec-10] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/24-16:41:41 [http-nio-8083-exec-10] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/24-16:41:41 [http-nio-8083-exec-10] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/24-16:41:41 [http-nio-8083-exec-10] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/24-16:41:41 [http-nio-8083-exec-10] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/24-16:41:41 [http-nio-8083-exec-10] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/24-16:41:41 [http-nio-8083-exec-10] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/24-16:41:41 [http-nio-8083-exec-10] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/24-16:41:41 [http-nio-8083-exec-10] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/24-16:41:41 [http-nio-8083-exec-10] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/24-16:41:41 [http-nio-8083-exec-10] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 2(Integer)
2020/06/24-16:41:41 [http-nio-8083-exec-10] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/24-16:41:41 [http-nio-8083-exec-10] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/24-16:41:41 [http-nio-8083-exec-10] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/24-16:41:41 [http-nio-8083-exec-10] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/24-16:41:41 [http-nio-8083-exec-10] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/24-16:41:41 [http-nio-8083-exec-10] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/24-16:41:41 [http-nio-8083-exec-10] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/24-16:41:41 [http-nio-8083-exec-10] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/24-16:41:41 [http-nio-8083-exec-10] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 2(Integer)
2020/06/24-16:41:41 [http-nio-8083-exec-10] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/24-16:41:41 [http-nio-8083-exec-10] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/24-16:41:41 [http-nio-8083-exec-10] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/24-16:41:41 [http-nio-8083-exec-10] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/24-16:41:41 [http-nio-8083-exec-10] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/24-16:41:41 [http-nio-8083-exec-10] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/24-16:41:41 [http-nio-8083-exec-10] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/24-16:41:41 [http-nio-8083-exec-10] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/24-16:41:41 [http-nio-8083-exec-10] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 2(Integer)
2020/06/24-16:41:41 [http-nio-8083-exec-10] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/24-16:41:41 [http-nio-8083-exec-10] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/24-16:41:41 [http-nio-8083-exec-10] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/24-16:41:41 [http-nio-8083-exec-10] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/24-16:41:41 [http-nio-8083-exec-10] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/24-16:41:41 [http-nio-8083-exec-10] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/24-16:41:41 [http-nio-8083-exec-10] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/24-16:41:44 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- ==>  Preparing: select sg.*, su.UnitName from sj_goodsdictionary sg INNER join sj_unit su on GoodsName like concat('%',?,'%') and sg.UnitID = su.UnitID 
2020/06/24-16:41:44 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- ==> Parameters: ip(String)
2020/06/24-16:41:44 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByWord- <==      Total: 1
2020/06/24-16:41:44 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/24-16:41:44 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/24-16:41:44 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/24-16:41:44 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehousesecond where GoodsID = ? and HospitalID = ?), 0) 
2020/06/24-16:41:44 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- ==> Parameters: 1(Integer), 901600(String)
2020/06/24-16:41:44 [http-nio-8083-exec-1] DEBUG com.huijian.rac.mapper.WarehouseSecondMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/24-16:41:44 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- ==>  Preparing: select * from sj_order where HospitalID = ? order by OrderDate DESC limit 1; 
2020/06/24-16:41:44 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- ==> Parameters: 901600(String)
2020/06/24-16:41:44 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryLastOrder- <==      Total: 1
2020/06/24-16:41:44 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- ==>  Preparing: select * from sj_orderdetail where OrderNo = ? and GoodsID in ( ? ) 
2020/06/24-16:41:44 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- ==> Parameters: 9016002000038(String), 1(Integer)
2020/06/24-16:41:44 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderDetailMapper.inquiryByOrderNo- <==      Total: 1
2020/06/24-16:41:44 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- ==>  Preparing: select * from sj_secondleavestocklistdetail where HospitalID = ? and GoodsID in ( ? ) and now() >= DATE_SUB(CURDATE(), INTERVAL 12 month) 
2020/06/24-16:41:44 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- ==> Parameters: 901600(String), 1(Integer)
2020/06/24-16:41:44 [http-nio-8084-exec-4] DEBUG com.huijian.rac.mapper.LeaveStockListSecondMapper.inquiryLastOneYear- <==      Total: 1
2020/06/24-16:44:24 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-16:45:35 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-16:49:20 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.OutboundRecordMapper.getOutboundRecordByPage- ==>  Preparing: SELECT * from sj_leavestocklist where LeaveStockNo like concat('%',?,'%') and LeaveStock >= ? and LeaveStock < ? order by LeaveStockNo desc limit ?, ? 
2020/06/24-16:49:20 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.OutboundRecordMapper.getOutboundRecordByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-24 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/24-16:49:20 [http-nio-8083-exec-3] DEBUG com.huijian.rac.mapper.OutboundRecordMapper.getOutboundRecordByPage- <==      Total: 1
2020/06/24-16:49:20 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==>  Preparing: select OrderState from sj_order where OrderNo = ? 
2020/06/24-16:49:20 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==> Parameters: 9016002000027(String)
2020/06/24-16:49:20 [http-nio-8084-exec-8] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- <==      Total: 1
2020/06/24-16:49:24 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-16:49:25 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.OutboundRecordMapper.getOutboundRecordByPage- ==>  Preparing: SELECT * from sj_leavestocklist where LeaveStockNo like concat('%',?,'%') and LeaveStock >= ? and LeaveStock < ? order by LeaveStockNo desc limit ?, ? 
2020/06/24-16:49:25 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.OutboundRecordMapper.getOutboundRecordByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-24 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/24-16:49:25 [http-nio-8083-exec-2] DEBUG com.huijian.rac.mapper.OutboundRecordMapper.getOutboundRecordByPage- <==      Total: 1
2020/06/24-16:49:25 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==>  Preparing: select OrderState from sj_order where OrderNo = ? 
2020/06/24-16:49:25 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- ==> Parameters: 9016002000027(String)
2020/06/24-16:49:26 [http-nio-8084-exec-7] DEBUG com.huijian.rac.mapper.OrderMapper.inquiryOrderState- <==      Total: 1
2020/06/24-16:50:35 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-16:54:24 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-16:54:50 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==>  Preparing: select * from pub_depart where HOSPITALID=? 
2020/06/24-16:54:50 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==>  Preparing: SELECT * from sj_order where OrderNo like concat('%',?,'%') and OrderDate >= ? and OrderDate < ? and OrderState != 0 order by OrderDate desc limit ?, ? 
2020/06/24-16:54:50 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- ==> Parameters: 901600(String)
2020/06/24-16:54:50 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-24 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/24-16:54:50 [http-nio-8084-exec-2] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- <==      Total: 0
2020/06/24-16:54:50 [http-nio-8084-exec-10] DEBUG com.huijian.rac.mapper.DepartsMapper.quiryDepartsByHospitalID- <==      Total: 22
2020/06/24-16:54:51 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==>  Preparing: SELECT * from sj_order where OrderNo like concat('%',?,'%') and OrderDate >= ? and OrderDate < ? and OrderState != 0 order by OrderDate desc limit ?, ? 
2020/06/24-16:54:51 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-24 23:59:59.0(Timestamp), 0(Integer), 10(Integer)
2020/06/24-16:54:51 [http-nio-8084-exec-3] DEBUG com.huijian.rac.mapper.OrderReviewMapper.getOrderByPage- <==      Total: 0
2020/06/24-16:55:35 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-16:57:55 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.ReturnGoodsMapper.inquiryOneDay- ==>  Preparing: select count(*) from sj_returngoods where return_goods_date>CURRENT_DATE and hospital_id = ?; 
2020/06/24-16:57:55 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.ReturnGoodsMapper.inquiryOneDay- ==> Parameters: 901600(String)
2020/06/24-16:57:55 [http-nio-8083-exec-4] DEBUG com.huijian.rac.mapper.ReturnGoodsMapper.inquiryOneDay- <==      Total: 1
2020/06/24-16:58:12 [http-nio-8083-exec-7] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByIDAndName- ==>  Preparing: select sg.*, su.UnitName from sj_goodsdictionary sg INNER join sj_unit su on sg.GoodsName=? and sg.GoodsID=? and sg.UnitID = su.UnitID 
2020/06/24-16:58:12 [http-nio-8083-exec-7] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByIDAndName- ==> Parameters: iphone12(String), 1(Integer)
2020/06/24-16:58:12 [http-nio-8083-exec-7] DEBUG com.huijian.rac.mapper.GoodsDictionaryMapper.inquiryByIDAndName- <==      Total: 1
2020/06/24-16:58:12 [http-nio-8083-exec-7] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==>  Preparing: select SupplierName from sj_supplier where SupplierID = ? 
2020/06/24-16:58:12 [http-nio-8083-exec-7] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- ==> Parameters: 1(Integer)
2020/06/24-16:58:12 [http-nio-8083-exec-7] DEBUG com.huijian.rac.mapper.GoodsSupplierMapper.inquirySupplierNameByID- <==      Total: 1
2020/06/24-16:58:12 [http-nio-8083-exec-7] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==>  Preparing: select IFNULL((select Quantity from sj_warehouse where GoodsID = ?), 0) 
2020/06/24-16:58:12 [http-nio-8083-exec-7] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- ==> Parameters: 1(Integer)
2020/06/24-16:58:12 [http-nio-8083-exec-7] DEBUG com.huijian.rac.mapper.WarehouseMapper.inquiryQuantityByGoodsID- <==      Total: 1
2020/06/24-16:58:25 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.ReturnGoodsMapper.addReturnGoods- ==>  Preparing: insert into sj_returngoods ( return_goods_no, collar_person_id, audit_person_id, reason, sumprice, return_goods_state, hospital_id, return_goods_date) values ( ?, ?, ?, ?, ?, ?, ?, ?) 
2020/06/24-16:58:25 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.ReturnGoodsMapper.addReturnGoods- ==> Parameters: 90160020624BS001(String), (String), (String), 123(String), 1.11(BigDecimal), 0(Integer), 901600(String), 2020-06-25 00:57:55.0(Timestamp)
2020/06/24-16:58:25 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.ReturnGoodsMapper.addReturnGoods- <==    Updates: 1
2020/06/24-16:58:25 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.ReturnGoodsDetailMapper.addReturnGoodsDetail- ==>  Preparing: insert into sj_returngoodsdetail (return_goods_no, goods_id, amount, productionBatch) values (?, ?, ?, ?) 
2020/06/24-16:58:25 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.ReturnGoodsDetailMapper.addReturnGoodsDetail- ==> Parameters: 90160020624BS001(String), 1(Integer), 1(Integer), 123456789(String)
2020/06/24-16:58:25 [http-nio-8083-exec-6] DEBUG com.huijian.rac.mapper.ReturnGoodsDetailMapper.addReturnGoodsDetail- <==    Updates: 1
2020/06/24-16:58:25 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.ReturnGoodsMapper.getReturnGoodsByPage- ==>  Preparing: SELECT a.*, b.PERSONNAME audit_person_name from (SELECT sr.*, pd.PERSONNAME collar_person_name from sj_returngoods as sr INNER JOIN pub_doctor as pd on sr.return_goods_no like concat('%',?,'%') and sr.return_goods_date >= ? and sr.return_goods_date < ? and sr.collar_person_id = pd.PERSONID and sr.hospital_id = ?) as a left join pub_doctor as b on a.audit_person_id = b.PERSONID order by a.return_goods_date desc limit ?, ? 
2020/06/24-16:58:25 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.ReturnGoodsMapper.getReturnGoodsByPage- ==> Parameters: (String), 2020-06-01 00:00:00.0(Timestamp), 2020-06-24 23:59:59.0(Timestamp), 901600(String), 0(Integer), 10(Integer)
2020/06/24-16:58:25 [http-nio-8083-exec-5] DEBUG com.huijian.rac.mapper.ReturnGoodsMapper.getReturnGoodsByPage- <==      Total: 1
2020/06/24-16:59:24 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-17:00:35 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-17:04:24 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-17:05:35 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-17:09:24 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
2020/06/24-17:10:35 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver- Resolving eureka endpoints via configuration
